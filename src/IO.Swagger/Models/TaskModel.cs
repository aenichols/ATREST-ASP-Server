/*
 * Datto|Autotask PSA Rest API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class TaskModel : IEquatable<TaskModel>
    { 
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id")]
        public long? Id { get; set; }

        /// <summary>
        /// Gets or Sets AssignedResourceID
        /// </summary>
        [DataMember(Name="assignedResourceID")]
        public int? AssignedResourceID { get; set; }

        /// <summary>
        /// Gets or Sets AssignedResourceRoleID
        /// </summary>
        [DataMember(Name="assignedResourceRoleID")]
        public int? AssignedResourceRoleID { get; set; }

        /// <summary>
        /// Gets or Sets BillingCodeID
        /// </summary>
        [DataMember(Name="billingCodeID")]
        public int? BillingCodeID { get; set; }

        /// <summary>
        /// Gets or Sets CanClientPortalUserCompleteTask
        /// </summary>
        [DataMember(Name="canClientPortalUserCompleteTask")]
        public bool? CanClientPortalUserCompleteTask { get; set; }

        /// <summary>
        /// Gets or Sets CompanyLocationID
        /// </summary>
        [DataMember(Name="companyLocationID")]
        public int? CompanyLocationID { get; set; }

        /// <summary>
        /// Gets or Sets CompletedByResourceID
        /// </summary>
        [DataMember(Name="completedByResourceID")]
        public int? CompletedByResourceID { get; set; }

        /// <summary>
        /// Gets or Sets CompletedByType
        /// </summary>
        [DataMember(Name="completedByType")]
        public int? CompletedByType { get; set; }

        /// <summary>
        /// Gets or Sets CompletedDateTime
        /// </summary>
        [DataMember(Name="completedDateTime")]
        public DateTime? CompletedDateTime { get; set; }

        /// <summary>
        /// Gets or Sets CreateDateTime
        /// </summary>
        [DataMember(Name="createDateTime")]
        public DateTime? CreateDateTime { get; set; }

        /// <summary>
        /// Gets or Sets CreatorResourceID
        /// </summary>
        [DataMember(Name="creatorResourceID")]
        public int? CreatorResourceID { get; set; }

        /// <summary>
        /// Gets or Sets CreatorType
        /// </summary>
        [DataMember(Name="creatorType")]
        public int? CreatorType { get; set; }

        /// <summary>
        /// Gets or Sets DepartmentID
        /// </summary>
        [DataMember(Name="departmentID")]
        public int? DepartmentID { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets EndDateTime
        /// </summary>
        [DataMember(Name="endDateTime")]
        public DateTime? EndDateTime { get; set; }

        /// <summary>
        /// Gets or Sets EstimatedHours
        /// </summary>
        [DataMember(Name="estimatedHours")]
        public double? EstimatedHours { get; set; }

        /// <summary>
        /// Gets or Sets ExternalID
        /// </summary>
        [DataMember(Name="externalID")]
        public string ExternalID { get; set; }

        /// <summary>
        /// Gets or Sets HoursToBeScheduled
        /// </summary>
        [DataMember(Name="hoursToBeScheduled")]
        public double? HoursToBeScheduled { get; set; }

        /// <summary>
        /// Gets or Sets IsTaskBillable
        /// </summary>
        [DataMember(Name="isTaskBillable")]
        public bool? IsTaskBillable { get; set; }

        /// <summary>
        /// Gets or Sets IsVisibleInClientPortal
        /// </summary>
        [DataMember(Name="isVisibleInClientPortal")]
        public bool? IsVisibleInClientPortal { get; set; }

        /// <summary>
        /// Gets or Sets LastActivityDateTime
        /// </summary>
        [DataMember(Name="lastActivityDateTime")]
        public DateTime? LastActivityDateTime { get; set; }

        /// <summary>
        /// Gets or Sets LastActivityPersonType
        /// </summary>
        [DataMember(Name="lastActivityPersonType")]
        public int? LastActivityPersonType { get; set; }

        /// <summary>
        /// Gets or Sets LastActivityResourceID
        /// </summary>
        [DataMember(Name="lastActivityResourceID")]
        public int? LastActivityResourceID { get; set; }

        /// <summary>
        /// Gets or Sets PhaseID
        /// </summary>
        [DataMember(Name="phaseID")]
        public int? PhaseID { get; set; }

        /// <summary>
        /// Gets or Sets Priority
        /// </summary>
        [DataMember(Name="priority")]
        public int? Priority { get; set; }

        /// <summary>
        /// Gets or Sets PriorityLabel
        /// </summary>
        [DataMember(Name="priorityLabel")]
        public int? PriorityLabel { get; set; }

        /// <summary>
        /// Gets or Sets ProjectID
        /// </summary>
        [DataMember(Name="projectID")]
        public int? ProjectID { get; set; }

        /// <summary>
        /// Gets or Sets PurchaseOrderNumber
        /// </summary>
        [DataMember(Name="purchaseOrderNumber")]
        public string PurchaseOrderNumber { get; set; }

        /// <summary>
        /// Gets or Sets RemainingHours
        /// </summary>
        [DataMember(Name="remainingHours")]
        public double? RemainingHours { get; set; }

        /// <summary>
        /// Gets or Sets StartDateTime
        /// </summary>
        [DataMember(Name="startDateTime")]
        public DateTime? StartDateTime { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status")]
        public int? Status { get; set; }

        /// <summary>
        /// Gets or Sets TaskCategoryID
        /// </summary>
        [DataMember(Name="taskCategoryID")]
        public int? TaskCategoryID { get; set; }

        /// <summary>
        /// Gets or Sets TaskNumber
        /// </summary>
        [DataMember(Name="taskNumber")]
        public string TaskNumber { get; set; }

        /// <summary>
        /// Gets or Sets TaskType
        /// </summary>
        [DataMember(Name="taskType")]
        public int? TaskType { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name="title")]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets SoapParentPropertyId
        /// </summary>
        [DataMember(Name="soapParentPropertyId")]
        public ExpressionFuncTaskInt64 SoapParentPropertyId { get; private set; }

        /// <summary>
        /// Gets or Sets UserDefinedFields
        /// </summary>
        [DataMember(Name="userDefinedFields")]
        public List<UserDefinedField> UserDefinedFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TaskModel {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  AssignedResourceID: ").Append(AssignedResourceID).Append("\n");
            sb.Append("  AssignedResourceRoleID: ").Append(AssignedResourceRoleID).Append("\n");
            sb.Append("  BillingCodeID: ").Append(BillingCodeID).Append("\n");
            sb.Append("  CanClientPortalUserCompleteTask: ").Append(CanClientPortalUserCompleteTask).Append("\n");
            sb.Append("  CompanyLocationID: ").Append(CompanyLocationID).Append("\n");
            sb.Append("  CompletedByResourceID: ").Append(CompletedByResourceID).Append("\n");
            sb.Append("  CompletedByType: ").Append(CompletedByType).Append("\n");
            sb.Append("  CompletedDateTime: ").Append(CompletedDateTime).Append("\n");
            sb.Append("  CreateDateTime: ").Append(CreateDateTime).Append("\n");
            sb.Append("  CreatorResourceID: ").Append(CreatorResourceID).Append("\n");
            sb.Append("  CreatorType: ").Append(CreatorType).Append("\n");
            sb.Append("  DepartmentID: ").Append(DepartmentID).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  EndDateTime: ").Append(EndDateTime).Append("\n");
            sb.Append("  EstimatedHours: ").Append(EstimatedHours).Append("\n");
            sb.Append("  ExternalID: ").Append(ExternalID).Append("\n");
            sb.Append("  HoursToBeScheduled: ").Append(HoursToBeScheduled).Append("\n");
            sb.Append("  IsTaskBillable: ").Append(IsTaskBillable).Append("\n");
            sb.Append("  IsVisibleInClientPortal: ").Append(IsVisibleInClientPortal).Append("\n");
            sb.Append("  LastActivityDateTime: ").Append(LastActivityDateTime).Append("\n");
            sb.Append("  LastActivityPersonType: ").Append(LastActivityPersonType).Append("\n");
            sb.Append("  LastActivityResourceID: ").Append(LastActivityResourceID).Append("\n");
            sb.Append("  PhaseID: ").Append(PhaseID).Append("\n");
            sb.Append("  Priority: ").Append(Priority).Append("\n");
            sb.Append("  PriorityLabel: ").Append(PriorityLabel).Append("\n");
            sb.Append("  ProjectID: ").Append(ProjectID).Append("\n");
            sb.Append("  PurchaseOrderNumber: ").Append(PurchaseOrderNumber).Append("\n");
            sb.Append("  RemainingHours: ").Append(RemainingHours).Append("\n");
            sb.Append("  StartDateTime: ").Append(StartDateTime).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  TaskCategoryID: ").Append(TaskCategoryID).Append("\n");
            sb.Append("  TaskNumber: ").Append(TaskNumber).Append("\n");
            sb.Append("  TaskType: ").Append(TaskType).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  SoapParentPropertyId: ").Append(SoapParentPropertyId).Append("\n");
            sb.Append("  UserDefinedFields: ").Append(UserDefinedFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((TaskModel)obj);
        }

        /// <summary>
        /// Returns true if TaskModel instances are equal
        /// </summary>
        /// <param name="other">Instance of TaskModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TaskModel other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Id == other.Id ||
                    Id != null &&
                    Id.Equals(other.Id)
                ) && 
                (
                    AssignedResourceID == other.AssignedResourceID ||
                    AssignedResourceID != null &&
                    AssignedResourceID.Equals(other.AssignedResourceID)
                ) && 
                (
                    AssignedResourceRoleID == other.AssignedResourceRoleID ||
                    AssignedResourceRoleID != null &&
                    AssignedResourceRoleID.Equals(other.AssignedResourceRoleID)
                ) && 
                (
                    BillingCodeID == other.BillingCodeID ||
                    BillingCodeID != null &&
                    BillingCodeID.Equals(other.BillingCodeID)
                ) && 
                (
                    CanClientPortalUserCompleteTask == other.CanClientPortalUserCompleteTask ||
                    CanClientPortalUserCompleteTask != null &&
                    CanClientPortalUserCompleteTask.Equals(other.CanClientPortalUserCompleteTask)
                ) && 
                (
                    CompanyLocationID == other.CompanyLocationID ||
                    CompanyLocationID != null &&
                    CompanyLocationID.Equals(other.CompanyLocationID)
                ) && 
                (
                    CompletedByResourceID == other.CompletedByResourceID ||
                    CompletedByResourceID != null &&
                    CompletedByResourceID.Equals(other.CompletedByResourceID)
                ) && 
                (
                    CompletedByType == other.CompletedByType ||
                    CompletedByType != null &&
                    CompletedByType.Equals(other.CompletedByType)
                ) && 
                (
                    CompletedDateTime == other.CompletedDateTime ||
                    CompletedDateTime != null &&
                    CompletedDateTime.Equals(other.CompletedDateTime)
                ) && 
                (
                    CreateDateTime == other.CreateDateTime ||
                    CreateDateTime != null &&
                    CreateDateTime.Equals(other.CreateDateTime)
                ) && 
                (
                    CreatorResourceID == other.CreatorResourceID ||
                    CreatorResourceID != null &&
                    CreatorResourceID.Equals(other.CreatorResourceID)
                ) && 
                (
                    CreatorType == other.CreatorType ||
                    CreatorType != null &&
                    CreatorType.Equals(other.CreatorType)
                ) && 
                (
                    DepartmentID == other.DepartmentID ||
                    DepartmentID != null &&
                    DepartmentID.Equals(other.DepartmentID)
                ) && 
                (
                    Description == other.Description ||
                    Description != null &&
                    Description.Equals(other.Description)
                ) && 
                (
                    EndDateTime == other.EndDateTime ||
                    EndDateTime != null &&
                    EndDateTime.Equals(other.EndDateTime)
                ) && 
                (
                    EstimatedHours == other.EstimatedHours ||
                    EstimatedHours != null &&
                    EstimatedHours.Equals(other.EstimatedHours)
                ) && 
                (
                    ExternalID == other.ExternalID ||
                    ExternalID != null &&
                    ExternalID.Equals(other.ExternalID)
                ) && 
                (
                    HoursToBeScheduled == other.HoursToBeScheduled ||
                    HoursToBeScheduled != null &&
                    HoursToBeScheduled.Equals(other.HoursToBeScheduled)
                ) && 
                (
                    IsTaskBillable == other.IsTaskBillable ||
                    IsTaskBillable != null &&
                    IsTaskBillable.Equals(other.IsTaskBillable)
                ) && 
                (
                    IsVisibleInClientPortal == other.IsVisibleInClientPortal ||
                    IsVisibleInClientPortal != null &&
                    IsVisibleInClientPortal.Equals(other.IsVisibleInClientPortal)
                ) && 
                (
                    LastActivityDateTime == other.LastActivityDateTime ||
                    LastActivityDateTime != null &&
                    LastActivityDateTime.Equals(other.LastActivityDateTime)
                ) && 
                (
                    LastActivityPersonType == other.LastActivityPersonType ||
                    LastActivityPersonType != null &&
                    LastActivityPersonType.Equals(other.LastActivityPersonType)
                ) && 
                (
                    LastActivityResourceID == other.LastActivityResourceID ||
                    LastActivityResourceID != null &&
                    LastActivityResourceID.Equals(other.LastActivityResourceID)
                ) && 
                (
                    PhaseID == other.PhaseID ||
                    PhaseID != null &&
                    PhaseID.Equals(other.PhaseID)
                ) && 
                (
                    Priority == other.Priority ||
                    Priority != null &&
                    Priority.Equals(other.Priority)
                ) && 
                (
                    PriorityLabel == other.PriorityLabel ||
                    PriorityLabel != null &&
                    PriorityLabel.Equals(other.PriorityLabel)
                ) && 
                (
                    ProjectID == other.ProjectID ||
                    ProjectID != null &&
                    ProjectID.Equals(other.ProjectID)
                ) && 
                (
                    PurchaseOrderNumber == other.PurchaseOrderNumber ||
                    PurchaseOrderNumber != null &&
                    PurchaseOrderNumber.Equals(other.PurchaseOrderNumber)
                ) && 
                (
                    RemainingHours == other.RemainingHours ||
                    RemainingHours != null &&
                    RemainingHours.Equals(other.RemainingHours)
                ) && 
                (
                    StartDateTime == other.StartDateTime ||
                    StartDateTime != null &&
                    StartDateTime.Equals(other.StartDateTime)
                ) && 
                (
                    Status == other.Status ||
                    Status != null &&
                    Status.Equals(other.Status)
                ) && 
                (
                    TaskCategoryID == other.TaskCategoryID ||
                    TaskCategoryID != null &&
                    TaskCategoryID.Equals(other.TaskCategoryID)
                ) && 
                (
                    TaskNumber == other.TaskNumber ||
                    TaskNumber != null &&
                    TaskNumber.Equals(other.TaskNumber)
                ) && 
                (
                    TaskType == other.TaskType ||
                    TaskType != null &&
                    TaskType.Equals(other.TaskType)
                ) && 
                (
                    Title == other.Title ||
                    Title != null &&
                    Title.Equals(other.Title)
                ) && 
                (
                    SoapParentPropertyId == other.SoapParentPropertyId ||
                    SoapParentPropertyId != null &&
                    SoapParentPropertyId.Equals(other.SoapParentPropertyId)
                ) && 
                (
                    UserDefinedFields == other.UserDefinedFields ||
                    UserDefinedFields != null &&
                    UserDefinedFields.SequenceEqual(other.UserDefinedFields)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Id != null)
                    hashCode = hashCode * 59 + Id.GetHashCode();
                    if (AssignedResourceID != null)
                    hashCode = hashCode * 59 + AssignedResourceID.GetHashCode();
                    if (AssignedResourceRoleID != null)
                    hashCode = hashCode * 59 + AssignedResourceRoleID.GetHashCode();
                    if (BillingCodeID != null)
                    hashCode = hashCode * 59 + BillingCodeID.GetHashCode();
                    if (CanClientPortalUserCompleteTask != null)
                    hashCode = hashCode * 59 + CanClientPortalUserCompleteTask.GetHashCode();
                    if (CompanyLocationID != null)
                    hashCode = hashCode * 59 + CompanyLocationID.GetHashCode();
                    if (CompletedByResourceID != null)
                    hashCode = hashCode * 59 + CompletedByResourceID.GetHashCode();
                    if (CompletedByType != null)
                    hashCode = hashCode * 59 + CompletedByType.GetHashCode();
                    if (CompletedDateTime != null)
                    hashCode = hashCode * 59 + CompletedDateTime.GetHashCode();
                    if (CreateDateTime != null)
                    hashCode = hashCode * 59 + CreateDateTime.GetHashCode();
                    if (CreatorResourceID != null)
                    hashCode = hashCode * 59 + CreatorResourceID.GetHashCode();
                    if (CreatorType != null)
                    hashCode = hashCode * 59 + CreatorType.GetHashCode();
                    if (DepartmentID != null)
                    hashCode = hashCode * 59 + DepartmentID.GetHashCode();
                    if (Description != null)
                    hashCode = hashCode * 59 + Description.GetHashCode();
                    if (EndDateTime != null)
                    hashCode = hashCode * 59 + EndDateTime.GetHashCode();
                    if (EstimatedHours != null)
                    hashCode = hashCode * 59 + EstimatedHours.GetHashCode();
                    if (ExternalID != null)
                    hashCode = hashCode * 59 + ExternalID.GetHashCode();
                    if (HoursToBeScheduled != null)
                    hashCode = hashCode * 59 + HoursToBeScheduled.GetHashCode();
                    if (IsTaskBillable != null)
                    hashCode = hashCode * 59 + IsTaskBillable.GetHashCode();
                    if (IsVisibleInClientPortal != null)
                    hashCode = hashCode * 59 + IsVisibleInClientPortal.GetHashCode();
                    if (LastActivityDateTime != null)
                    hashCode = hashCode * 59 + LastActivityDateTime.GetHashCode();
                    if (LastActivityPersonType != null)
                    hashCode = hashCode * 59 + LastActivityPersonType.GetHashCode();
                    if (LastActivityResourceID != null)
                    hashCode = hashCode * 59 + LastActivityResourceID.GetHashCode();
                    if (PhaseID != null)
                    hashCode = hashCode * 59 + PhaseID.GetHashCode();
                    if (Priority != null)
                    hashCode = hashCode * 59 + Priority.GetHashCode();
                    if (PriorityLabel != null)
                    hashCode = hashCode * 59 + PriorityLabel.GetHashCode();
                    if (ProjectID != null)
                    hashCode = hashCode * 59 + ProjectID.GetHashCode();
                    if (PurchaseOrderNumber != null)
                    hashCode = hashCode * 59 + PurchaseOrderNumber.GetHashCode();
                    if (RemainingHours != null)
                    hashCode = hashCode * 59 + RemainingHours.GetHashCode();
                    if (StartDateTime != null)
                    hashCode = hashCode * 59 + StartDateTime.GetHashCode();
                    if (Status != null)
                    hashCode = hashCode * 59 + Status.GetHashCode();
                    if (TaskCategoryID != null)
                    hashCode = hashCode * 59 + TaskCategoryID.GetHashCode();
                    if (TaskNumber != null)
                    hashCode = hashCode * 59 + TaskNumber.GetHashCode();
                    if (TaskType != null)
                    hashCode = hashCode * 59 + TaskType.GetHashCode();
                    if (Title != null)
                    hashCode = hashCode * 59 + Title.GetHashCode();
                    if (SoapParentPropertyId != null)
                    hashCode = hashCode * 59 + SoapParentPropertyId.GetHashCode();
                    if (UserDefinedFields != null)
                    hashCode = hashCode * 59 + UserDefinedFields.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(TaskModel left, TaskModel right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(TaskModel left, TaskModel right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
