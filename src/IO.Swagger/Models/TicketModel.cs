/*
 * Datto|Autotask PSA Rest API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class TicketModel : IEquatable<TicketModel>
    { 
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id")]
        public long? Id { get; set; }

        /// <summary>
        /// Gets or Sets ApiVendorID
        /// </summary>
        [DataMember(Name="apiVendorID")]
        public int? ApiVendorID { get; set; }

        /// <summary>
        /// Gets or Sets AssignedResourceID
        /// </summary>
        [DataMember(Name="assignedResourceID")]
        public int? AssignedResourceID { get; set; }

        /// <summary>
        /// Gets or Sets AssignedResourceRoleID
        /// </summary>
        [DataMember(Name="assignedResourceRoleID")]
        public int? AssignedResourceRoleID { get; set; }

        /// <summary>
        /// Gets or Sets BillingCodeID
        /// </summary>
        [DataMember(Name="billingCodeID")]
        public int? BillingCodeID { get; set; }

        /// <summary>
        /// Gets or Sets ChangeApprovalBoard
        /// </summary>
        [DataMember(Name="changeApprovalBoard")]
        public int? ChangeApprovalBoard { get; set; }

        /// <summary>
        /// Gets or Sets ChangeApprovalStatus
        /// </summary>
        [DataMember(Name="changeApprovalStatus")]
        public int? ChangeApprovalStatus { get; set; }

        /// <summary>
        /// Gets or Sets ChangeApprovalType
        /// </summary>
        [DataMember(Name="changeApprovalType")]
        public int? ChangeApprovalType { get; set; }

        /// <summary>
        /// Gets or Sets ChangeInfoField1
        /// </summary>
        [DataMember(Name="changeInfoField1")]
        public string ChangeInfoField1 { get; set; }

        /// <summary>
        /// Gets or Sets ChangeInfoField2
        /// </summary>
        [DataMember(Name="changeInfoField2")]
        public string ChangeInfoField2 { get; set; }

        /// <summary>
        /// Gets or Sets ChangeInfoField3
        /// </summary>
        [DataMember(Name="changeInfoField3")]
        public string ChangeInfoField3 { get; set; }

        /// <summary>
        /// Gets or Sets ChangeInfoField4
        /// </summary>
        [DataMember(Name="changeInfoField4")]
        public string ChangeInfoField4 { get; set; }

        /// <summary>
        /// Gets or Sets ChangeInfoField5
        /// </summary>
        [DataMember(Name="changeInfoField5")]
        public string ChangeInfoField5 { get; set; }

        /// <summary>
        /// Gets or Sets CompanyID
        /// </summary>
        [DataMember(Name="companyID")]
        public int? CompanyID { get; set; }

        /// <summary>
        /// Gets or Sets CompanyLocationID
        /// </summary>
        [DataMember(Name="companyLocationID")]
        public int? CompanyLocationID { get; set; }

        /// <summary>
        /// Gets or Sets CompletedByResourceID
        /// </summary>
        [DataMember(Name="completedByResourceID")]
        public int? CompletedByResourceID { get; set; }

        /// <summary>
        /// Gets or Sets CompletedDate
        /// </summary>
        [DataMember(Name="completedDate")]
        public DateTime? CompletedDate { get; set; }

        /// <summary>
        /// Gets or Sets ConfigurationItemID
        /// </summary>
        [DataMember(Name="configurationItemID")]
        public int? ConfigurationItemID { get; set; }

        /// <summary>
        /// Gets or Sets ContactID
        /// </summary>
        [DataMember(Name="contactID")]
        public int? ContactID { get; set; }

        /// <summary>
        /// Gets or Sets ContractID
        /// </summary>
        [DataMember(Name="contractID")]
        public int? ContractID { get; set; }

        /// <summary>
        /// Gets or Sets ContractServiceBundleID
        /// </summary>
        [DataMember(Name="contractServiceBundleID")]
        public long? ContractServiceBundleID { get; set; }

        /// <summary>
        /// Gets or Sets ContractServiceID
        /// </summary>
        [DataMember(Name="contractServiceID")]
        public long? ContractServiceID { get; set; }

        /// <summary>
        /// Gets or Sets CreateDate
        /// </summary>
        [DataMember(Name="createDate")]
        public DateTime? CreateDate { get; set; }

        /// <summary>
        /// Gets or Sets CreatedByContactID
        /// </summary>
        [DataMember(Name="createdByContactID")]
        public int? CreatedByContactID { get; set; }

        /// <summary>
        /// Gets or Sets CreatorResourceID
        /// </summary>
        [DataMember(Name="creatorResourceID")]
        public int? CreatorResourceID { get; set; }

        /// <summary>
        /// Gets or Sets CreatorType
        /// </summary>
        [DataMember(Name="creatorType")]
        public int? CreatorType { get; set; }

        /// <summary>
        /// Gets or Sets CurrentServiceThermometerRating
        /// </summary>
        [DataMember(Name="currentServiceThermometerRating")]
        public int? CurrentServiceThermometerRating { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets DueDateTime
        /// </summary>
        [DataMember(Name="dueDateTime")]
        public DateTime? DueDateTime { get; set; }

        /// <summary>
        /// Gets or Sets EstimatedHours
        /// </summary>
        [DataMember(Name="estimatedHours")]
        public double? EstimatedHours { get; set; }

        /// <summary>
        /// Gets or Sets ExternalID
        /// </summary>
        [DataMember(Name="externalID")]
        public string ExternalID { get; set; }

        /// <summary>
        /// Gets or Sets FirstResponseAssignedResourceID
        /// </summary>
        [DataMember(Name="firstResponseAssignedResourceID")]
        public int? FirstResponseAssignedResourceID { get; set; }

        /// <summary>
        /// Gets or Sets FirstResponseDateTime
        /// </summary>
        [DataMember(Name="firstResponseDateTime")]
        public DateTime? FirstResponseDateTime { get; set; }

        /// <summary>
        /// Gets or Sets FirstResponseDueDateTime
        /// </summary>
        [DataMember(Name="firstResponseDueDateTime")]
        public DateTime? FirstResponseDueDateTime { get; set; }

        /// <summary>
        /// Gets or Sets FirstResponseInitiatingResourceID
        /// </summary>
        [DataMember(Name="firstResponseInitiatingResourceID")]
        public int? FirstResponseInitiatingResourceID { get; set; }

        /// <summary>
        /// Gets or Sets HoursToBeScheduled
        /// </summary>
        [DataMember(Name="hoursToBeScheduled")]
        public double? HoursToBeScheduled { get; set; }

        /// <summary>
        /// Gets or Sets ImpersonatorCreatorResourceID
        /// </summary>
        [DataMember(Name="impersonatorCreatorResourceID")]
        public int? ImpersonatorCreatorResourceID { get; set; }

        /// <summary>
        /// Gets or Sets IssueType
        /// </summary>
        [DataMember(Name="issueType")]
        public int? IssueType { get; set; }

        /// <summary>
        /// Gets or Sets LastActivityDate
        /// </summary>
        [DataMember(Name="lastActivityDate")]
        public DateTime? LastActivityDate { get; set; }

        /// <summary>
        /// Gets or Sets LastActivityPersonType
        /// </summary>
        [DataMember(Name="lastActivityPersonType")]
        public int? LastActivityPersonType { get; set; }

        /// <summary>
        /// Gets or Sets LastActivityResourceID
        /// </summary>
        [DataMember(Name="lastActivityResourceID")]
        public int? LastActivityResourceID { get; set; }

        /// <summary>
        /// Gets or Sets LastCustomerNotificationDateTime
        /// </summary>
        [DataMember(Name="lastCustomerNotificationDateTime")]
        public DateTime? LastCustomerNotificationDateTime { get; set; }

        /// <summary>
        /// Gets or Sets LastCustomerVisibleActivityDateTime
        /// </summary>
        [DataMember(Name="lastCustomerVisibleActivityDateTime")]
        public DateTime? LastCustomerVisibleActivityDateTime { get; set; }

        /// <summary>
        /// Gets or Sets LastTrackedModificationDateTime
        /// </summary>
        [DataMember(Name="lastTrackedModificationDateTime")]
        public DateTime? LastTrackedModificationDateTime { get; set; }

        /// <summary>
        /// Gets or Sets MonitorID
        /// </summary>
        [DataMember(Name="monitorID")]
        public long? MonitorID { get; set; }

        /// <summary>
        /// Gets or Sets MonitorTypeID
        /// </summary>
        [DataMember(Name="monitorTypeID")]
        public int? MonitorTypeID { get; set; }

        /// <summary>
        /// Gets or Sets OpportunityID
        /// </summary>
        [DataMember(Name="opportunityID")]
        public int? OpportunityID { get; set; }

        /// <summary>
        /// Gets or Sets OrganizationalLevelAssociationID
        /// </summary>
        [DataMember(Name="organizationalLevelAssociationID")]
        public int? OrganizationalLevelAssociationID { get; set; }

        /// <summary>
        /// Gets or Sets PreviousServiceThermometerRating
        /// </summary>
        [DataMember(Name="previousServiceThermometerRating")]
        public int? PreviousServiceThermometerRating { get; set; }

        /// <summary>
        /// Gets or Sets Priority
        /// </summary>
        [DataMember(Name="priority")]
        public int? Priority { get; set; }

        /// <summary>
        /// Gets or Sets ProblemTicketId
        /// </summary>
        [DataMember(Name="problemTicketId")]
        public int? ProblemTicketId { get; set; }

        /// <summary>
        /// Gets or Sets ProjectID
        /// </summary>
        [DataMember(Name="projectID")]
        public int? ProjectID { get; set; }

        /// <summary>
        /// Gets or Sets PurchaseOrderNumber
        /// </summary>
        [DataMember(Name="purchaseOrderNumber")]
        public string PurchaseOrderNumber { get; set; }

        /// <summary>
        /// Gets or Sets QueueID
        /// </summary>
        [DataMember(Name="queueID")]
        public int? QueueID { get; set; }

        /// <summary>
        /// Gets or Sets Resolution
        /// </summary>
        [DataMember(Name="resolution")]
        public string Resolution { get; set; }

        /// <summary>
        /// Gets or Sets ResolutionPlanDateTime
        /// </summary>
        [DataMember(Name="resolutionPlanDateTime")]
        public DateTime? ResolutionPlanDateTime { get; set; }

        /// <summary>
        /// Gets or Sets ResolutionPlanDueDateTime
        /// </summary>
        [DataMember(Name="resolutionPlanDueDateTime")]
        public DateTime? ResolutionPlanDueDateTime { get; set; }

        /// <summary>
        /// Gets or Sets ResolvedDateTime
        /// </summary>
        [DataMember(Name="resolvedDateTime")]
        public DateTime? ResolvedDateTime { get; set; }

        /// <summary>
        /// Gets or Sets ResolvedDueDateTime
        /// </summary>
        [DataMember(Name="resolvedDueDateTime")]
        public DateTime? ResolvedDueDateTime { get; set; }

        /// <summary>
        /// Gets or Sets RmaStatus
        /// </summary>
        [DataMember(Name="rmaStatus")]
        public int? RmaStatus { get; set; }

        /// <summary>
        /// Gets or Sets RmaType
        /// </summary>
        [DataMember(Name="rmaType")]
        public int? RmaType { get; set; }

        /// <summary>
        /// Gets or Sets RmmAlertID
        /// </summary>
        [DataMember(Name="rmmAlertID")]
        public string RmmAlertID { get; set; }

        /// <summary>
        /// Gets or Sets ServiceLevelAgreementHasBeenMet
        /// </summary>
        [DataMember(Name="serviceLevelAgreementHasBeenMet")]
        public bool? ServiceLevelAgreementHasBeenMet { get; set; }

        /// <summary>
        /// Gets or Sets ServiceLevelAgreementID
        /// </summary>
        [DataMember(Name="serviceLevelAgreementID")]
        public int? ServiceLevelAgreementID { get; set; }

        /// <summary>
        /// Gets or Sets ServiceLevelAgreementPausedNextEventHours
        /// </summary>
        [DataMember(Name="serviceLevelAgreementPausedNextEventHours")]
        public double? ServiceLevelAgreementPausedNextEventHours { get; set; }

        /// <summary>
        /// Gets or Sets ServiceThermometerTemperature
        /// </summary>
        [DataMember(Name="serviceThermometerTemperature")]
        public int? ServiceThermometerTemperature { get; set; }

        /// <summary>
        /// Gets or Sets Source
        /// </summary>
        [DataMember(Name="source")]
        public int? Source { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status")]
        public int? Status { get; set; }

        /// <summary>
        /// Gets or Sets SubIssueType
        /// </summary>
        [DataMember(Name="subIssueType")]
        public int? SubIssueType { get; set; }

        /// <summary>
        /// Gets or Sets TicketCategory
        /// </summary>
        [DataMember(Name="ticketCategory")]
        public int? TicketCategory { get; set; }

        /// <summary>
        /// Gets or Sets TicketNumber
        /// </summary>
        [DataMember(Name="ticketNumber")]
        public string TicketNumber { get; set; }

        /// <summary>
        /// Gets or Sets TicketType
        /// </summary>
        [DataMember(Name="ticketType")]
        public int? TicketType { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name="title")]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets UserDefinedFields
        /// </summary>
        [DataMember(Name="userDefinedFields")]
        public List<UserDefinedField> UserDefinedFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TicketModel {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  ApiVendorID: ").Append(ApiVendorID).Append("\n");
            sb.Append("  AssignedResourceID: ").Append(AssignedResourceID).Append("\n");
            sb.Append("  AssignedResourceRoleID: ").Append(AssignedResourceRoleID).Append("\n");
            sb.Append("  BillingCodeID: ").Append(BillingCodeID).Append("\n");
            sb.Append("  ChangeApprovalBoard: ").Append(ChangeApprovalBoard).Append("\n");
            sb.Append("  ChangeApprovalStatus: ").Append(ChangeApprovalStatus).Append("\n");
            sb.Append("  ChangeApprovalType: ").Append(ChangeApprovalType).Append("\n");
            sb.Append("  ChangeInfoField1: ").Append(ChangeInfoField1).Append("\n");
            sb.Append("  ChangeInfoField2: ").Append(ChangeInfoField2).Append("\n");
            sb.Append("  ChangeInfoField3: ").Append(ChangeInfoField3).Append("\n");
            sb.Append("  ChangeInfoField4: ").Append(ChangeInfoField4).Append("\n");
            sb.Append("  ChangeInfoField5: ").Append(ChangeInfoField5).Append("\n");
            sb.Append("  CompanyID: ").Append(CompanyID).Append("\n");
            sb.Append("  CompanyLocationID: ").Append(CompanyLocationID).Append("\n");
            sb.Append("  CompletedByResourceID: ").Append(CompletedByResourceID).Append("\n");
            sb.Append("  CompletedDate: ").Append(CompletedDate).Append("\n");
            sb.Append("  ConfigurationItemID: ").Append(ConfigurationItemID).Append("\n");
            sb.Append("  ContactID: ").Append(ContactID).Append("\n");
            sb.Append("  ContractID: ").Append(ContractID).Append("\n");
            sb.Append("  ContractServiceBundleID: ").Append(ContractServiceBundleID).Append("\n");
            sb.Append("  ContractServiceID: ").Append(ContractServiceID).Append("\n");
            sb.Append("  CreateDate: ").Append(CreateDate).Append("\n");
            sb.Append("  CreatedByContactID: ").Append(CreatedByContactID).Append("\n");
            sb.Append("  CreatorResourceID: ").Append(CreatorResourceID).Append("\n");
            sb.Append("  CreatorType: ").Append(CreatorType).Append("\n");
            sb.Append("  CurrentServiceThermometerRating: ").Append(CurrentServiceThermometerRating).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  DueDateTime: ").Append(DueDateTime).Append("\n");
            sb.Append("  EstimatedHours: ").Append(EstimatedHours).Append("\n");
            sb.Append("  ExternalID: ").Append(ExternalID).Append("\n");
            sb.Append("  FirstResponseAssignedResourceID: ").Append(FirstResponseAssignedResourceID).Append("\n");
            sb.Append("  FirstResponseDateTime: ").Append(FirstResponseDateTime).Append("\n");
            sb.Append("  FirstResponseDueDateTime: ").Append(FirstResponseDueDateTime).Append("\n");
            sb.Append("  FirstResponseInitiatingResourceID: ").Append(FirstResponseInitiatingResourceID).Append("\n");
            sb.Append("  HoursToBeScheduled: ").Append(HoursToBeScheduled).Append("\n");
            sb.Append("  ImpersonatorCreatorResourceID: ").Append(ImpersonatorCreatorResourceID).Append("\n");
            sb.Append("  IssueType: ").Append(IssueType).Append("\n");
            sb.Append("  LastActivityDate: ").Append(LastActivityDate).Append("\n");
            sb.Append("  LastActivityPersonType: ").Append(LastActivityPersonType).Append("\n");
            sb.Append("  LastActivityResourceID: ").Append(LastActivityResourceID).Append("\n");
            sb.Append("  LastCustomerNotificationDateTime: ").Append(LastCustomerNotificationDateTime).Append("\n");
            sb.Append("  LastCustomerVisibleActivityDateTime: ").Append(LastCustomerVisibleActivityDateTime).Append("\n");
            sb.Append("  LastTrackedModificationDateTime: ").Append(LastTrackedModificationDateTime).Append("\n");
            sb.Append("  MonitorID: ").Append(MonitorID).Append("\n");
            sb.Append("  MonitorTypeID: ").Append(MonitorTypeID).Append("\n");
            sb.Append("  OpportunityID: ").Append(OpportunityID).Append("\n");
            sb.Append("  OrganizationalLevelAssociationID: ").Append(OrganizationalLevelAssociationID).Append("\n");
            sb.Append("  PreviousServiceThermometerRating: ").Append(PreviousServiceThermometerRating).Append("\n");
            sb.Append("  Priority: ").Append(Priority).Append("\n");
            sb.Append("  ProblemTicketId: ").Append(ProblemTicketId).Append("\n");
            sb.Append("  ProjectID: ").Append(ProjectID).Append("\n");
            sb.Append("  PurchaseOrderNumber: ").Append(PurchaseOrderNumber).Append("\n");
            sb.Append("  QueueID: ").Append(QueueID).Append("\n");
            sb.Append("  Resolution: ").Append(Resolution).Append("\n");
            sb.Append("  ResolutionPlanDateTime: ").Append(ResolutionPlanDateTime).Append("\n");
            sb.Append("  ResolutionPlanDueDateTime: ").Append(ResolutionPlanDueDateTime).Append("\n");
            sb.Append("  ResolvedDateTime: ").Append(ResolvedDateTime).Append("\n");
            sb.Append("  ResolvedDueDateTime: ").Append(ResolvedDueDateTime).Append("\n");
            sb.Append("  RmaStatus: ").Append(RmaStatus).Append("\n");
            sb.Append("  RmaType: ").Append(RmaType).Append("\n");
            sb.Append("  RmmAlertID: ").Append(RmmAlertID).Append("\n");
            sb.Append("  ServiceLevelAgreementHasBeenMet: ").Append(ServiceLevelAgreementHasBeenMet).Append("\n");
            sb.Append("  ServiceLevelAgreementID: ").Append(ServiceLevelAgreementID).Append("\n");
            sb.Append("  ServiceLevelAgreementPausedNextEventHours: ").Append(ServiceLevelAgreementPausedNextEventHours).Append("\n");
            sb.Append("  ServiceThermometerTemperature: ").Append(ServiceThermometerTemperature).Append("\n");
            sb.Append("  Source: ").Append(Source).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  SubIssueType: ").Append(SubIssueType).Append("\n");
            sb.Append("  TicketCategory: ").Append(TicketCategory).Append("\n");
            sb.Append("  TicketNumber: ").Append(TicketNumber).Append("\n");
            sb.Append("  TicketType: ").Append(TicketType).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  UserDefinedFields: ").Append(UserDefinedFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((TicketModel)obj);
        }

        /// <summary>
        /// Returns true if TicketModel instances are equal
        /// </summary>
        /// <param name="other">Instance of TicketModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TicketModel other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Id == other.Id ||
                    Id != null &&
                    Id.Equals(other.Id)
                ) && 
                (
                    ApiVendorID == other.ApiVendorID ||
                    ApiVendorID != null &&
                    ApiVendorID.Equals(other.ApiVendorID)
                ) && 
                (
                    AssignedResourceID == other.AssignedResourceID ||
                    AssignedResourceID != null &&
                    AssignedResourceID.Equals(other.AssignedResourceID)
                ) && 
                (
                    AssignedResourceRoleID == other.AssignedResourceRoleID ||
                    AssignedResourceRoleID != null &&
                    AssignedResourceRoleID.Equals(other.AssignedResourceRoleID)
                ) && 
                (
                    BillingCodeID == other.BillingCodeID ||
                    BillingCodeID != null &&
                    BillingCodeID.Equals(other.BillingCodeID)
                ) && 
                (
                    ChangeApprovalBoard == other.ChangeApprovalBoard ||
                    ChangeApprovalBoard != null &&
                    ChangeApprovalBoard.Equals(other.ChangeApprovalBoard)
                ) && 
                (
                    ChangeApprovalStatus == other.ChangeApprovalStatus ||
                    ChangeApprovalStatus != null &&
                    ChangeApprovalStatus.Equals(other.ChangeApprovalStatus)
                ) && 
                (
                    ChangeApprovalType == other.ChangeApprovalType ||
                    ChangeApprovalType != null &&
                    ChangeApprovalType.Equals(other.ChangeApprovalType)
                ) && 
                (
                    ChangeInfoField1 == other.ChangeInfoField1 ||
                    ChangeInfoField1 != null &&
                    ChangeInfoField1.Equals(other.ChangeInfoField1)
                ) && 
                (
                    ChangeInfoField2 == other.ChangeInfoField2 ||
                    ChangeInfoField2 != null &&
                    ChangeInfoField2.Equals(other.ChangeInfoField2)
                ) && 
                (
                    ChangeInfoField3 == other.ChangeInfoField3 ||
                    ChangeInfoField3 != null &&
                    ChangeInfoField3.Equals(other.ChangeInfoField3)
                ) && 
                (
                    ChangeInfoField4 == other.ChangeInfoField4 ||
                    ChangeInfoField4 != null &&
                    ChangeInfoField4.Equals(other.ChangeInfoField4)
                ) && 
                (
                    ChangeInfoField5 == other.ChangeInfoField5 ||
                    ChangeInfoField5 != null &&
                    ChangeInfoField5.Equals(other.ChangeInfoField5)
                ) && 
                (
                    CompanyID == other.CompanyID ||
                    CompanyID != null &&
                    CompanyID.Equals(other.CompanyID)
                ) && 
                (
                    CompanyLocationID == other.CompanyLocationID ||
                    CompanyLocationID != null &&
                    CompanyLocationID.Equals(other.CompanyLocationID)
                ) && 
                (
                    CompletedByResourceID == other.CompletedByResourceID ||
                    CompletedByResourceID != null &&
                    CompletedByResourceID.Equals(other.CompletedByResourceID)
                ) && 
                (
                    CompletedDate == other.CompletedDate ||
                    CompletedDate != null &&
                    CompletedDate.Equals(other.CompletedDate)
                ) && 
                (
                    ConfigurationItemID == other.ConfigurationItemID ||
                    ConfigurationItemID != null &&
                    ConfigurationItemID.Equals(other.ConfigurationItemID)
                ) && 
                (
                    ContactID == other.ContactID ||
                    ContactID != null &&
                    ContactID.Equals(other.ContactID)
                ) && 
                (
                    ContractID == other.ContractID ||
                    ContractID != null &&
                    ContractID.Equals(other.ContractID)
                ) && 
                (
                    ContractServiceBundleID == other.ContractServiceBundleID ||
                    ContractServiceBundleID != null &&
                    ContractServiceBundleID.Equals(other.ContractServiceBundleID)
                ) && 
                (
                    ContractServiceID == other.ContractServiceID ||
                    ContractServiceID != null &&
                    ContractServiceID.Equals(other.ContractServiceID)
                ) && 
                (
                    CreateDate == other.CreateDate ||
                    CreateDate != null &&
                    CreateDate.Equals(other.CreateDate)
                ) && 
                (
                    CreatedByContactID == other.CreatedByContactID ||
                    CreatedByContactID != null &&
                    CreatedByContactID.Equals(other.CreatedByContactID)
                ) && 
                (
                    CreatorResourceID == other.CreatorResourceID ||
                    CreatorResourceID != null &&
                    CreatorResourceID.Equals(other.CreatorResourceID)
                ) && 
                (
                    CreatorType == other.CreatorType ||
                    CreatorType != null &&
                    CreatorType.Equals(other.CreatorType)
                ) && 
                (
                    CurrentServiceThermometerRating == other.CurrentServiceThermometerRating ||
                    CurrentServiceThermometerRating != null &&
                    CurrentServiceThermometerRating.Equals(other.CurrentServiceThermometerRating)
                ) && 
                (
                    Description == other.Description ||
                    Description != null &&
                    Description.Equals(other.Description)
                ) && 
                (
                    DueDateTime == other.DueDateTime ||
                    DueDateTime != null &&
                    DueDateTime.Equals(other.DueDateTime)
                ) && 
                (
                    EstimatedHours == other.EstimatedHours ||
                    EstimatedHours != null &&
                    EstimatedHours.Equals(other.EstimatedHours)
                ) && 
                (
                    ExternalID == other.ExternalID ||
                    ExternalID != null &&
                    ExternalID.Equals(other.ExternalID)
                ) && 
                (
                    FirstResponseAssignedResourceID == other.FirstResponseAssignedResourceID ||
                    FirstResponseAssignedResourceID != null &&
                    FirstResponseAssignedResourceID.Equals(other.FirstResponseAssignedResourceID)
                ) && 
                (
                    FirstResponseDateTime == other.FirstResponseDateTime ||
                    FirstResponseDateTime != null &&
                    FirstResponseDateTime.Equals(other.FirstResponseDateTime)
                ) && 
                (
                    FirstResponseDueDateTime == other.FirstResponseDueDateTime ||
                    FirstResponseDueDateTime != null &&
                    FirstResponseDueDateTime.Equals(other.FirstResponseDueDateTime)
                ) && 
                (
                    FirstResponseInitiatingResourceID == other.FirstResponseInitiatingResourceID ||
                    FirstResponseInitiatingResourceID != null &&
                    FirstResponseInitiatingResourceID.Equals(other.FirstResponseInitiatingResourceID)
                ) && 
                (
                    HoursToBeScheduled == other.HoursToBeScheduled ||
                    HoursToBeScheduled != null &&
                    HoursToBeScheduled.Equals(other.HoursToBeScheduled)
                ) && 
                (
                    ImpersonatorCreatorResourceID == other.ImpersonatorCreatorResourceID ||
                    ImpersonatorCreatorResourceID != null &&
                    ImpersonatorCreatorResourceID.Equals(other.ImpersonatorCreatorResourceID)
                ) && 
                (
                    IssueType == other.IssueType ||
                    IssueType != null &&
                    IssueType.Equals(other.IssueType)
                ) && 
                (
                    LastActivityDate == other.LastActivityDate ||
                    LastActivityDate != null &&
                    LastActivityDate.Equals(other.LastActivityDate)
                ) && 
                (
                    LastActivityPersonType == other.LastActivityPersonType ||
                    LastActivityPersonType != null &&
                    LastActivityPersonType.Equals(other.LastActivityPersonType)
                ) && 
                (
                    LastActivityResourceID == other.LastActivityResourceID ||
                    LastActivityResourceID != null &&
                    LastActivityResourceID.Equals(other.LastActivityResourceID)
                ) && 
                (
                    LastCustomerNotificationDateTime == other.LastCustomerNotificationDateTime ||
                    LastCustomerNotificationDateTime != null &&
                    LastCustomerNotificationDateTime.Equals(other.LastCustomerNotificationDateTime)
                ) && 
                (
                    LastCustomerVisibleActivityDateTime == other.LastCustomerVisibleActivityDateTime ||
                    LastCustomerVisibleActivityDateTime != null &&
                    LastCustomerVisibleActivityDateTime.Equals(other.LastCustomerVisibleActivityDateTime)
                ) && 
                (
                    LastTrackedModificationDateTime == other.LastTrackedModificationDateTime ||
                    LastTrackedModificationDateTime != null &&
                    LastTrackedModificationDateTime.Equals(other.LastTrackedModificationDateTime)
                ) && 
                (
                    MonitorID == other.MonitorID ||
                    MonitorID != null &&
                    MonitorID.Equals(other.MonitorID)
                ) && 
                (
                    MonitorTypeID == other.MonitorTypeID ||
                    MonitorTypeID != null &&
                    MonitorTypeID.Equals(other.MonitorTypeID)
                ) && 
                (
                    OpportunityID == other.OpportunityID ||
                    OpportunityID != null &&
                    OpportunityID.Equals(other.OpportunityID)
                ) && 
                (
                    OrganizationalLevelAssociationID == other.OrganizationalLevelAssociationID ||
                    OrganizationalLevelAssociationID != null &&
                    OrganizationalLevelAssociationID.Equals(other.OrganizationalLevelAssociationID)
                ) && 
                (
                    PreviousServiceThermometerRating == other.PreviousServiceThermometerRating ||
                    PreviousServiceThermometerRating != null &&
                    PreviousServiceThermometerRating.Equals(other.PreviousServiceThermometerRating)
                ) && 
                (
                    Priority == other.Priority ||
                    Priority != null &&
                    Priority.Equals(other.Priority)
                ) && 
                (
                    ProblemTicketId == other.ProblemTicketId ||
                    ProblemTicketId != null &&
                    ProblemTicketId.Equals(other.ProblemTicketId)
                ) && 
                (
                    ProjectID == other.ProjectID ||
                    ProjectID != null &&
                    ProjectID.Equals(other.ProjectID)
                ) && 
                (
                    PurchaseOrderNumber == other.PurchaseOrderNumber ||
                    PurchaseOrderNumber != null &&
                    PurchaseOrderNumber.Equals(other.PurchaseOrderNumber)
                ) && 
                (
                    QueueID == other.QueueID ||
                    QueueID != null &&
                    QueueID.Equals(other.QueueID)
                ) && 
                (
                    Resolution == other.Resolution ||
                    Resolution != null &&
                    Resolution.Equals(other.Resolution)
                ) && 
                (
                    ResolutionPlanDateTime == other.ResolutionPlanDateTime ||
                    ResolutionPlanDateTime != null &&
                    ResolutionPlanDateTime.Equals(other.ResolutionPlanDateTime)
                ) && 
                (
                    ResolutionPlanDueDateTime == other.ResolutionPlanDueDateTime ||
                    ResolutionPlanDueDateTime != null &&
                    ResolutionPlanDueDateTime.Equals(other.ResolutionPlanDueDateTime)
                ) && 
                (
                    ResolvedDateTime == other.ResolvedDateTime ||
                    ResolvedDateTime != null &&
                    ResolvedDateTime.Equals(other.ResolvedDateTime)
                ) && 
                (
                    ResolvedDueDateTime == other.ResolvedDueDateTime ||
                    ResolvedDueDateTime != null &&
                    ResolvedDueDateTime.Equals(other.ResolvedDueDateTime)
                ) && 
                (
                    RmaStatus == other.RmaStatus ||
                    RmaStatus != null &&
                    RmaStatus.Equals(other.RmaStatus)
                ) && 
                (
                    RmaType == other.RmaType ||
                    RmaType != null &&
                    RmaType.Equals(other.RmaType)
                ) && 
                (
                    RmmAlertID == other.RmmAlertID ||
                    RmmAlertID != null &&
                    RmmAlertID.Equals(other.RmmAlertID)
                ) && 
                (
                    ServiceLevelAgreementHasBeenMet == other.ServiceLevelAgreementHasBeenMet ||
                    ServiceLevelAgreementHasBeenMet != null &&
                    ServiceLevelAgreementHasBeenMet.Equals(other.ServiceLevelAgreementHasBeenMet)
                ) && 
                (
                    ServiceLevelAgreementID == other.ServiceLevelAgreementID ||
                    ServiceLevelAgreementID != null &&
                    ServiceLevelAgreementID.Equals(other.ServiceLevelAgreementID)
                ) && 
                (
                    ServiceLevelAgreementPausedNextEventHours == other.ServiceLevelAgreementPausedNextEventHours ||
                    ServiceLevelAgreementPausedNextEventHours != null &&
                    ServiceLevelAgreementPausedNextEventHours.Equals(other.ServiceLevelAgreementPausedNextEventHours)
                ) && 
                (
                    ServiceThermometerTemperature == other.ServiceThermometerTemperature ||
                    ServiceThermometerTemperature != null &&
                    ServiceThermometerTemperature.Equals(other.ServiceThermometerTemperature)
                ) && 
                (
                    Source == other.Source ||
                    Source != null &&
                    Source.Equals(other.Source)
                ) && 
                (
                    Status == other.Status ||
                    Status != null &&
                    Status.Equals(other.Status)
                ) && 
                (
                    SubIssueType == other.SubIssueType ||
                    SubIssueType != null &&
                    SubIssueType.Equals(other.SubIssueType)
                ) && 
                (
                    TicketCategory == other.TicketCategory ||
                    TicketCategory != null &&
                    TicketCategory.Equals(other.TicketCategory)
                ) && 
                (
                    TicketNumber == other.TicketNumber ||
                    TicketNumber != null &&
                    TicketNumber.Equals(other.TicketNumber)
                ) && 
                (
                    TicketType == other.TicketType ||
                    TicketType != null &&
                    TicketType.Equals(other.TicketType)
                ) && 
                (
                    Title == other.Title ||
                    Title != null &&
                    Title.Equals(other.Title)
                ) && 
                (
                    UserDefinedFields == other.UserDefinedFields ||
                    UserDefinedFields != null &&
                    UserDefinedFields.SequenceEqual(other.UserDefinedFields)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Id != null)
                    hashCode = hashCode * 59 + Id.GetHashCode();
                    if (ApiVendorID != null)
                    hashCode = hashCode * 59 + ApiVendorID.GetHashCode();
                    if (AssignedResourceID != null)
                    hashCode = hashCode * 59 + AssignedResourceID.GetHashCode();
                    if (AssignedResourceRoleID != null)
                    hashCode = hashCode * 59 + AssignedResourceRoleID.GetHashCode();
                    if (BillingCodeID != null)
                    hashCode = hashCode * 59 + BillingCodeID.GetHashCode();
                    if (ChangeApprovalBoard != null)
                    hashCode = hashCode * 59 + ChangeApprovalBoard.GetHashCode();
                    if (ChangeApprovalStatus != null)
                    hashCode = hashCode * 59 + ChangeApprovalStatus.GetHashCode();
                    if (ChangeApprovalType != null)
                    hashCode = hashCode * 59 + ChangeApprovalType.GetHashCode();
                    if (ChangeInfoField1 != null)
                    hashCode = hashCode * 59 + ChangeInfoField1.GetHashCode();
                    if (ChangeInfoField2 != null)
                    hashCode = hashCode * 59 + ChangeInfoField2.GetHashCode();
                    if (ChangeInfoField3 != null)
                    hashCode = hashCode * 59 + ChangeInfoField3.GetHashCode();
                    if (ChangeInfoField4 != null)
                    hashCode = hashCode * 59 + ChangeInfoField4.GetHashCode();
                    if (ChangeInfoField5 != null)
                    hashCode = hashCode * 59 + ChangeInfoField5.GetHashCode();
                    if (CompanyID != null)
                    hashCode = hashCode * 59 + CompanyID.GetHashCode();
                    if (CompanyLocationID != null)
                    hashCode = hashCode * 59 + CompanyLocationID.GetHashCode();
                    if (CompletedByResourceID != null)
                    hashCode = hashCode * 59 + CompletedByResourceID.GetHashCode();
                    if (CompletedDate != null)
                    hashCode = hashCode * 59 + CompletedDate.GetHashCode();
                    if (ConfigurationItemID != null)
                    hashCode = hashCode * 59 + ConfigurationItemID.GetHashCode();
                    if (ContactID != null)
                    hashCode = hashCode * 59 + ContactID.GetHashCode();
                    if (ContractID != null)
                    hashCode = hashCode * 59 + ContractID.GetHashCode();
                    if (ContractServiceBundleID != null)
                    hashCode = hashCode * 59 + ContractServiceBundleID.GetHashCode();
                    if (ContractServiceID != null)
                    hashCode = hashCode * 59 + ContractServiceID.GetHashCode();
                    if (CreateDate != null)
                    hashCode = hashCode * 59 + CreateDate.GetHashCode();
                    if (CreatedByContactID != null)
                    hashCode = hashCode * 59 + CreatedByContactID.GetHashCode();
                    if (CreatorResourceID != null)
                    hashCode = hashCode * 59 + CreatorResourceID.GetHashCode();
                    if (CreatorType != null)
                    hashCode = hashCode * 59 + CreatorType.GetHashCode();
                    if (CurrentServiceThermometerRating != null)
                    hashCode = hashCode * 59 + CurrentServiceThermometerRating.GetHashCode();
                    if (Description != null)
                    hashCode = hashCode * 59 + Description.GetHashCode();
                    if (DueDateTime != null)
                    hashCode = hashCode * 59 + DueDateTime.GetHashCode();
                    if (EstimatedHours != null)
                    hashCode = hashCode * 59 + EstimatedHours.GetHashCode();
                    if (ExternalID != null)
                    hashCode = hashCode * 59 + ExternalID.GetHashCode();
                    if (FirstResponseAssignedResourceID != null)
                    hashCode = hashCode * 59 + FirstResponseAssignedResourceID.GetHashCode();
                    if (FirstResponseDateTime != null)
                    hashCode = hashCode * 59 + FirstResponseDateTime.GetHashCode();
                    if (FirstResponseDueDateTime != null)
                    hashCode = hashCode * 59 + FirstResponseDueDateTime.GetHashCode();
                    if (FirstResponseInitiatingResourceID != null)
                    hashCode = hashCode * 59 + FirstResponseInitiatingResourceID.GetHashCode();
                    if (HoursToBeScheduled != null)
                    hashCode = hashCode * 59 + HoursToBeScheduled.GetHashCode();
                    if (ImpersonatorCreatorResourceID != null)
                    hashCode = hashCode * 59 + ImpersonatorCreatorResourceID.GetHashCode();
                    if (IssueType != null)
                    hashCode = hashCode * 59 + IssueType.GetHashCode();
                    if (LastActivityDate != null)
                    hashCode = hashCode * 59 + LastActivityDate.GetHashCode();
                    if (LastActivityPersonType != null)
                    hashCode = hashCode * 59 + LastActivityPersonType.GetHashCode();
                    if (LastActivityResourceID != null)
                    hashCode = hashCode * 59 + LastActivityResourceID.GetHashCode();
                    if (LastCustomerNotificationDateTime != null)
                    hashCode = hashCode * 59 + LastCustomerNotificationDateTime.GetHashCode();
                    if (LastCustomerVisibleActivityDateTime != null)
                    hashCode = hashCode * 59 + LastCustomerVisibleActivityDateTime.GetHashCode();
                    if (LastTrackedModificationDateTime != null)
                    hashCode = hashCode * 59 + LastTrackedModificationDateTime.GetHashCode();
                    if (MonitorID != null)
                    hashCode = hashCode * 59 + MonitorID.GetHashCode();
                    if (MonitorTypeID != null)
                    hashCode = hashCode * 59 + MonitorTypeID.GetHashCode();
                    if (OpportunityID != null)
                    hashCode = hashCode * 59 + OpportunityID.GetHashCode();
                    if (OrganizationalLevelAssociationID != null)
                    hashCode = hashCode * 59 + OrganizationalLevelAssociationID.GetHashCode();
                    if (PreviousServiceThermometerRating != null)
                    hashCode = hashCode * 59 + PreviousServiceThermometerRating.GetHashCode();
                    if (Priority != null)
                    hashCode = hashCode * 59 + Priority.GetHashCode();
                    if (ProblemTicketId != null)
                    hashCode = hashCode * 59 + ProblemTicketId.GetHashCode();
                    if (ProjectID != null)
                    hashCode = hashCode * 59 + ProjectID.GetHashCode();
                    if (PurchaseOrderNumber != null)
                    hashCode = hashCode * 59 + PurchaseOrderNumber.GetHashCode();
                    if (QueueID != null)
                    hashCode = hashCode * 59 + QueueID.GetHashCode();
                    if (Resolution != null)
                    hashCode = hashCode * 59 + Resolution.GetHashCode();
                    if (ResolutionPlanDateTime != null)
                    hashCode = hashCode * 59 + ResolutionPlanDateTime.GetHashCode();
                    if (ResolutionPlanDueDateTime != null)
                    hashCode = hashCode * 59 + ResolutionPlanDueDateTime.GetHashCode();
                    if (ResolvedDateTime != null)
                    hashCode = hashCode * 59 + ResolvedDateTime.GetHashCode();
                    if (ResolvedDueDateTime != null)
                    hashCode = hashCode * 59 + ResolvedDueDateTime.GetHashCode();
                    if (RmaStatus != null)
                    hashCode = hashCode * 59 + RmaStatus.GetHashCode();
                    if (RmaType != null)
                    hashCode = hashCode * 59 + RmaType.GetHashCode();
                    if (RmmAlertID != null)
                    hashCode = hashCode * 59 + RmmAlertID.GetHashCode();
                    if (ServiceLevelAgreementHasBeenMet != null)
                    hashCode = hashCode * 59 + ServiceLevelAgreementHasBeenMet.GetHashCode();
                    if (ServiceLevelAgreementID != null)
                    hashCode = hashCode * 59 + ServiceLevelAgreementID.GetHashCode();
                    if (ServiceLevelAgreementPausedNextEventHours != null)
                    hashCode = hashCode * 59 + ServiceLevelAgreementPausedNextEventHours.GetHashCode();
                    if (ServiceThermometerTemperature != null)
                    hashCode = hashCode * 59 + ServiceThermometerTemperature.GetHashCode();
                    if (Source != null)
                    hashCode = hashCode * 59 + Source.GetHashCode();
                    if (Status != null)
                    hashCode = hashCode * 59 + Status.GetHashCode();
                    if (SubIssueType != null)
                    hashCode = hashCode * 59 + SubIssueType.GetHashCode();
                    if (TicketCategory != null)
                    hashCode = hashCode * 59 + TicketCategory.GetHashCode();
                    if (TicketNumber != null)
                    hashCode = hashCode * 59 + TicketNumber.GetHashCode();
                    if (TicketType != null)
                    hashCode = hashCode * 59 + TicketType.GetHashCode();
                    if (Title != null)
                    hashCode = hashCode * 59 + Title.GetHashCode();
                    if (UserDefinedFields != null)
                    hashCode = hashCode * 59 + UserDefinedFields.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(TicketModel left, TicketModel right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(TicketModel left, TicketModel right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
