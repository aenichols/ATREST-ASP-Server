/*
 * Datto|Autotask PSA Rest API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class ProjectModel : IEquatable<ProjectModel>
    { 
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id")]
        public long? Id { get; set; }

        /// <summary>
        /// Gets or Sets ActualBilledHours
        /// </summary>
        [DataMember(Name="actualBilledHours")]
        public double? ActualBilledHours { get; set; }

        /// <summary>
        /// Gets or Sets ActualHours
        /// </summary>
        [DataMember(Name="actualHours")]
        public double? ActualHours { get; set; }

        /// <summary>
        /// Gets or Sets ChangeOrdersBudget
        /// </summary>
        [DataMember(Name="changeOrdersBudget")]
        public double? ChangeOrdersBudget { get; set; }

        /// <summary>
        /// Gets or Sets ChangeOrdersRevenue
        /// </summary>
        [DataMember(Name="changeOrdersRevenue")]
        public double? ChangeOrdersRevenue { get; set; }

        /// <summary>
        /// Gets or Sets CompanyID
        /// </summary>
        [DataMember(Name="companyID")]
        public int? CompanyID { get; set; }

        /// <summary>
        /// Gets or Sets CompanyOwnerResourceID
        /// </summary>
        [DataMember(Name="companyOwnerResourceID")]
        public int? CompanyOwnerResourceID { get; set; }

        /// <summary>
        /// Gets or Sets CompletedDateTime
        /// </summary>
        [DataMember(Name="completedDateTime")]
        public DateTime? CompletedDateTime { get; set; }

        /// <summary>
        /// Gets or Sets CompletedPercentage
        /// </summary>
        [DataMember(Name="completedPercentage")]
        public int? CompletedPercentage { get; set; }

        /// <summary>
        /// Gets or Sets ContractID
        /// </summary>
        [DataMember(Name="contractID")]
        public int? ContractID { get; set; }

        /// <summary>
        /// Gets or Sets CreateDateTime
        /// </summary>
        [DataMember(Name="createDateTime")]
        public DateTime? CreateDateTime { get; set; }

        /// <summary>
        /// Gets or Sets CreatorResourceID
        /// </summary>
        [DataMember(Name="creatorResourceID")]
        public int? CreatorResourceID { get; set; }

        /// <summary>
        /// Gets or Sets Department
        /// </summary>
        [DataMember(Name="department")]
        public int? Department { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets Duration
        /// </summary>
        [DataMember(Name="duration")]
        public int? Duration { get; set; }

        /// <summary>
        /// Gets or Sets EndDateTime
        /// </summary>
        [DataMember(Name="endDateTime")]
        public DateTime? EndDateTime { get; set; }

        /// <summary>
        /// Gets or Sets EstimatedSalesCost
        /// </summary>
        [DataMember(Name="estimatedSalesCost")]
        public double? EstimatedSalesCost { get; set; }

        /// <summary>
        /// Gets or Sets EstimatedTime
        /// </summary>
        [DataMember(Name="estimatedTime")]
        public double? EstimatedTime { get; set; }

        /// <summary>
        /// Gets or Sets ExtProjectNumber
        /// </summary>
        [DataMember(Name="extProjectNumber")]
        public string ExtProjectNumber { get; set; }

        /// <summary>
        /// Gets or Sets ExtProjectType
        /// </summary>
        [DataMember(Name="extProjectType")]
        public int? ExtProjectType { get; set; }

        /// <summary>
        /// Gets or Sets ImpersonatorCreatorResourceID
        /// </summary>
        [DataMember(Name="impersonatorCreatorResourceID")]
        public int? ImpersonatorCreatorResourceID { get; set; }

        /// <summary>
        /// Gets or Sets LaborEstimatedCosts
        /// </summary>
        [DataMember(Name="laborEstimatedCosts")]
        public double? LaborEstimatedCosts { get; set; }

        /// <summary>
        /// Gets or Sets LaborEstimatedMarginPercentage
        /// </summary>
        [DataMember(Name="laborEstimatedMarginPercentage")]
        public double? LaborEstimatedMarginPercentage { get; set; }

        /// <summary>
        /// Gets or Sets LaborEstimatedRevenue
        /// </summary>
        [DataMember(Name="laborEstimatedRevenue")]
        public double? LaborEstimatedRevenue { get; set; }

        /// <summary>
        /// Gets or Sets LastActivityDateTime
        /// </summary>
        [DataMember(Name="lastActivityDateTime")]
        public DateTime? LastActivityDateTime { get; set; }

        /// <summary>
        /// Gets or Sets LastActivityPersonType
        /// </summary>
        [DataMember(Name="lastActivityPersonType")]
        public int? LastActivityPersonType { get; set; }

        /// <summary>
        /// Gets or Sets LastActivityResourceID
        /// </summary>
        [DataMember(Name="lastActivityResourceID")]
        public int? LastActivityResourceID { get; set; }

        /// <summary>
        /// Gets or Sets OpportunityID
        /// </summary>
        [DataMember(Name="opportunityID")]
        public int? OpportunityID { get; set; }

        /// <summary>
        /// Gets or Sets OrganizationalLevelAssociationID
        /// </summary>
        [DataMember(Name="organizationalLevelAssociationID")]
        public int? OrganizationalLevelAssociationID { get; set; }

        /// <summary>
        /// Gets or Sets OriginalEstimatedRevenue
        /// </summary>
        [DataMember(Name="originalEstimatedRevenue")]
        public double? OriginalEstimatedRevenue { get; set; }

        /// <summary>
        /// Gets or Sets ProjectCostEstimatedMarginPercentage
        /// </summary>
        [DataMember(Name="projectCostEstimatedMarginPercentage")]
        public double? ProjectCostEstimatedMarginPercentage { get; set; }

        /// <summary>
        /// Gets or Sets ProjectCostsBudget
        /// </summary>
        [DataMember(Name="projectCostsBudget")]
        public double? ProjectCostsBudget { get; set; }

        /// <summary>
        /// Gets or Sets ProjectCostsRevenue
        /// </summary>
        [DataMember(Name="projectCostsRevenue")]
        public double? ProjectCostsRevenue { get; set; }

        /// <summary>
        /// Gets or Sets ProjectLeadResourceID
        /// </summary>
        [DataMember(Name="projectLeadResourceID")]
        public int? ProjectLeadResourceID { get; set; }

        /// <summary>
        /// Gets or Sets ProjectName
        /// </summary>
        [DataMember(Name="projectName")]
        public string ProjectName { get; set; }

        /// <summary>
        /// Gets or Sets ProjectNumber
        /// </summary>
        [DataMember(Name="projectNumber")]
        public string ProjectNumber { get; set; }

        /// <summary>
        /// Gets or Sets ProjectType
        /// </summary>
        [DataMember(Name="projectType")]
        public int? ProjectType { get; set; }

        /// <summary>
        /// Gets or Sets PurchaseOrderNumber
        /// </summary>
        [DataMember(Name="purchaseOrderNumber")]
        public string PurchaseOrderNumber { get; set; }

        /// <summary>
        /// Gets or Sets Sgda
        /// </summary>
        [DataMember(Name="sgda")]
        public double? Sgda { get; set; }

        /// <summary>
        /// Gets or Sets StartDateTime
        /// </summary>
        [DataMember(Name="startDateTime")]
        public DateTime? StartDateTime { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status")]
        public int? Status { get; set; }

        /// <summary>
        /// Gets or Sets StatusDateTime
        /// </summary>
        [DataMember(Name="statusDateTime")]
        public DateTime? StatusDateTime { get; set; }

        /// <summary>
        /// Gets or Sets StatusDetail
        /// </summary>
        [DataMember(Name="statusDetail")]
        public string StatusDetail { get; set; }

        /// <summary>
        /// Gets or Sets UserDefinedFields
        /// </summary>
        [DataMember(Name="userDefinedFields")]
        public List<UserDefinedField> UserDefinedFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ProjectModel {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  ActualBilledHours: ").Append(ActualBilledHours).Append("\n");
            sb.Append("  ActualHours: ").Append(ActualHours).Append("\n");
            sb.Append("  ChangeOrdersBudget: ").Append(ChangeOrdersBudget).Append("\n");
            sb.Append("  ChangeOrdersRevenue: ").Append(ChangeOrdersRevenue).Append("\n");
            sb.Append("  CompanyID: ").Append(CompanyID).Append("\n");
            sb.Append("  CompanyOwnerResourceID: ").Append(CompanyOwnerResourceID).Append("\n");
            sb.Append("  CompletedDateTime: ").Append(CompletedDateTime).Append("\n");
            sb.Append("  CompletedPercentage: ").Append(CompletedPercentage).Append("\n");
            sb.Append("  ContractID: ").Append(ContractID).Append("\n");
            sb.Append("  CreateDateTime: ").Append(CreateDateTime).Append("\n");
            sb.Append("  CreatorResourceID: ").Append(CreatorResourceID).Append("\n");
            sb.Append("  Department: ").Append(Department).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Duration: ").Append(Duration).Append("\n");
            sb.Append("  EndDateTime: ").Append(EndDateTime).Append("\n");
            sb.Append("  EstimatedSalesCost: ").Append(EstimatedSalesCost).Append("\n");
            sb.Append("  EstimatedTime: ").Append(EstimatedTime).Append("\n");
            sb.Append("  ExtProjectNumber: ").Append(ExtProjectNumber).Append("\n");
            sb.Append("  ExtProjectType: ").Append(ExtProjectType).Append("\n");
            sb.Append("  ImpersonatorCreatorResourceID: ").Append(ImpersonatorCreatorResourceID).Append("\n");
            sb.Append("  LaborEstimatedCosts: ").Append(LaborEstimatedCosts).Append("\n");
            sb.Append("  LaborEstimatedMarginPercentage: ").Append(LaborEstimatedMarginPercentage).Append("\n");
            sb.Append("  LaborEstimatedRevenue: ").Append(LaborEstimatedRevenue).Append("\n");
            sb.Append("  LastActivityDateTime: ").Append(LastActivityDateTime).Append("\n");
            sb.Append("  LastActivityPersonType: ").Append(LastActivityPersonType).Append("\n");
            sb.Append("  LastActivityResourceID: ").Append(LastActivityResourceID).Append("\n");
            sb.Append("  OpportunityID: ").Append(OpportunityID).Append("\n");
            sb.Append("  OrganizationalLevelAssociationID: ").Append(OrganizationalLevelAssociationID).Append("\n");
            sb.Append("  OriginalEstimatedRevenue: ").Append(OriginalEstimatedRevenue).Append("\n");
            sb.Append("  ProjectCostEstimatedMarginPercentage: ").Append(ProjectCostEstimatedMarginPercentage).Append("\n");
            sb.Append("  ProjectCostsBudget: ").Append(ProjectCostsBudget).Append("\n");
            sb.Append("  ProjectCostsRevenue: ").Append(ProjectCostsRevenue).Append("\n");
            sb.Append("  ProjectLeadResourceID: ").Append(ProjectLeadResourceID).Append("\n");
            sb.Append("  ProjectName: ").Append(ProjectName).Append("\n");
            sb.Append("  ProjectNumber: ").Append(ProjectNumber).Append("\n");
            sb.Append("  ProjectType: ").Append(ProjectType).Append("\n");
            sb.Append("  PurchaseOrderNumber: ").Append(PurchaseOrderNumber).Append("\n");
            sb.Append("  Sgda: ").Append(Sgda).Append("\n");
            sb.Append("  StartDateTime: ").Append(StartDateTime).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  StatusDateTime: ").Append(StatusDateTime).Append("\n");
            sb.Append("  StatusDetail: ").Append(StatusDetail).Append("\n");
            sb.Append("  UserDefinedFields: ").Append(UserDefinedFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((ProjectModel)obj);
        }

        /// <summary>
        /// Returns true if ProjectModel instances are equal
        /// </summary>
        /// <param name="other">Instance of ProjectModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ProjectModel other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Id == other.Id ||
                    Id != null &&
                    Id.Equals(other.Id)
                ) && 
                (
                    ActualBilledHours == other.ActualBilledHours ||
                    ActualBilledHours != null &&
                    ActualBilledHours.Equals(other.ActualBilledHours)
                ) && 
                (
                    ActualHours == other.ActualHours ||
                    ActualHours != null &&
                    ActualHours.Equals(other.ActualHours)
                ) && 
                (
                    ChangeOrdersBudget == other.ChangeOrdersBudget ||
                    ChangeOrdersBudget != null &&
                    ChangeOrdersBudget.Equals(other.ChangeOrdersBudget)
                ) && 
                (
                    ChangeOrdersRevenue == other.ChangeOrdersRevenue ||
                    ChangeOrdersRevenue != null &&
                    ChangeOrdersRevenue.Equals(other.ChangeOrdersRevenue)
                ) && 
                (
                    CompanyID == other.CompanyID ||
                    CompanyID != null &&
                    CompanyID.Equals(other.CompanyID)
                ) && 
                (
                    CompanyOwnerResourceID == other.CompanyOwnerResourceID ||
                    CompanyOwnerResourceID != null &&
                    CompanyOwnerResourceID.Equals(other.CompanyOwnerResourceID)
                ) && 
                (
                    CompletedDateTime == other.CompletedDateTime ||
                    CompletedDateTime != null &&
                    CompletedDateTime.Equals(other.CompletedDateTime)
                ) && 
                (
                    CompletedPercentage == other.CompletedPercentage ||
                    CompletedPercentage != null &&
                    CompletedPercentage.Equals(other.CompletedPercentage)
                ) && 
                (
                    ContractID == other.ContractID ||
                    ContractID != null &&
                    ContractID.Equals(other.ContractID)
                ) && 
                (
                    CreateDateTime == other.CreateDateTime ||
                    CreateDateTime != null &&
                    CreateDateTime.Equals(other.CreateDateTime)
                ) && 
                (
                    CreatorResourceID == other.CreatorResourceID ||
                    CreatorResourceID != null &&
                    CreatorResourceID.Equals(other.CreatorResourceID)
                ) && 
                (
                    Department == other.Department ||
                    Department != null &&
                    Department.Equals(other.Department)
                ) && 
                (
                    Description == other.Description ||
                    Description != null &&
                    Description.Equals(other.Description)
                ) && 
                (
                    Duration == other.Duration ||
                    Duration != null &&
                    Duration.Equals(other.Duration)
                ) && 
                (
                    EndDateTime == other.EndDateTime ||
                    EndDateTime != null &&
                    EndDateTime.Equals(other.EndDateTime)
                ) && 
                (
                    EstimatedSalesCost == other.EstimatedSalesCost ||
                    EstimatedSalesCost != null &&
                    EstimatedSalesCost.Equals(other.EstimatedSalesCost)
                ) && 
                (
                    EstimatedTime == other.EstimatedTime ||
                    EstimatedTime != null &&
                    EstimatedTime.Equals(other.EstimatedTime)
                ) && 
                (
                    ExtProjectNumber == other.ExtProjectNumber ||
                    ExtProjectNumber != null &&
                    ExtProjectNumber.Equals(other.ExtProjectNumber)
                ) && 
                (
                    ExtProjectType == other.ExtProjectType ||
                    ExtProjectType != null &&
                    ExtProjectType.Equals(other.ExtProjectType)
                ) && 
                (
                    ImpersonatorCreatorResourceID == other.ImpersonatorCreatorResourceID ||
                    ImpersonatorCreatorResourceID != null &&
                    ImpersonatorCreatorResourceID.Equals(other.ImpersonatorCreatorResourceID)
                ) && 
                (
                    LaborEstimatedCosts == other.LaborEstimatedCosts ||
                    LaborEstimatedCosts != null &&
                    LaborEstimatedCosts.Equals(other.LaborEstimatedCosts)
                ) && 
                (
                    LaborEstimatedMarginPercentage == other.LaborEstimatedMarginPercentage ||
                    LaborEstimatedMarginPercentage != null &&
                    LaborEstimatedMarginPercentage.Equals(other.LaborEstimatedMarginPercentage)
                ) && 
                (
                    LaborEstimatedRevenue == other.LaborEstimatedRevenue ||
                    LaborEstimatedRevenue != null &&
                    LaborEstimatedRevenue.Equals(other.LaborEstimatedRevenue)
                ) && 
                (
                    LastActivityDateTime == other.LastActivityDateTime ||
                    LastActivityDateTime != null &&
                    LastActivityDateTime.Equals(other.LastActivityDateTime)
                ) && 
                (
                    LastActivityPersonType == other.LastActivityPersonType ||
                    LastActivityPersonType != null &&
                    LastActivityPersonType.Equals(other.LastActivityPersonType)
                ) && 
                (
                    LastActivityResourceID == other.LastActivityResourceID ||
                    LastActivityResourceID != null &&
                    LastActivityResourceID.Equals(other.LastActivityResourceID)
                ) && 
                (
                    OpportunityID == other.OpportunityID ||
                    OpportunityID != null &&
                    OpportunityID.Equals(other.OpportunityID)
                ) && 
                (
                    OrganizationalLevelAssociationID == other.OrganizationalLevelAssociationID ||
                    OrganizationalLevelAssociationID != null &&
                    OrganizationalLevelAssociationID.Equals(other.OrganizationalLevelAssociationID)
                ) && 
                (
                    OriginalEstimatedRevenue == other.OriginalEstimatedRevenue ||
                    OriginalEstimatedRevenue != null &&
                    OriginalEstimatedRevenue.Equals(other.OriginalEstimatedRevenue)
                ) && 
                (
                    ProjectCostEstimatedMarginPercentage == other.ProjectCostEstimatedMarginPercentage ||
                    ProjectCostEstimatedMarginPercentage != null &&
                    ProjectCostEstimatedMarginPercentage.Equals(other.ProjectCostEstimatedMarginPercentage)
                ) && 
                (
                    ProjectCostsBudget == other.ProjectCostsBudget ||
                    ProjectCostsBudget != null &&
                    ProjectCostsBudget.Equals(other.ProjectCostsBudget)
                ) && 
                (
                    ProjectCostsRevenue == other.ProjectCostsRevenue ||
                    ProjectCostsRevenue != null &&
                    ProjectCostsRevenue.Equals(other.ProjectCostsRevenue)
                ) && 
                (
                    ProjectLeadResourceID == other.ProjectLeadResourceID ||
                    ProjectLeadResourceID != null &&
                    ProjectLeadResourceID.Equals(other.ProjectLeadResourceID)
                ) && 
                (
                    ProjectName == other.ProjectName ||
                    ProjectName != null &&
                    ProjectName.Equals(other.ProjectName)
                ) && 
                (
                    ProjectNumber == other.ProjectNumber ||
                    ProjectNumber != null &&
                    ProjectNumber.Equals(other.ProjectNumber)
                ) && 
                (
                    ProjectType == other.ProjectType ||
                    ProjectType != null &&
                    ProjectType.Equals(other.ProjectType)
                ) && 
                (
                    PurchaseOrderNumber == other.PurchaseOrderNumber ||
                    PurchaseOrderNumber != null &&
                    PurchaseOrderNumber.Equals(other.PurchaseOrderNumber)
                ) && 
                (
                    Sgda == other.Sgda ||
                    Sgda != null &&
                    Sgda.Equals(other.Sgda)
                ) && 
                (
                    StartDateTime == other.StartDateTime ||
                    StartDateTime != null &&
                    StartDateTime.Equals(other.StartDateTime)
                ) && 
                (
                    Status == other.Status ||
                    Status != null &&
                    Status.Equals(other.Status)
                ) && 
                (
                    StatusDateTime == other.StatusDateTime ||
                    StatusDateTime != null &&
                    StatusDateTime.Equals(other.StatusDateTime)
                ) && 
                (
                    StatusDetail == other.StatusDetail ||
                    StatusDetail != null &&
                    StatusDetail.Equals(other.StatusDetail)
                ) && 
                (
                    UserDefinedFields == other.UserDefinedFields ||
                    UserDefinedFields != null &&
                    UserDefinedFields.SequenceEqual(other.UserDefinedFields)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Id != null)
                    hashCode = hashCode * 59 + Id.GetHashCode();
                    if (ActualBilledHours != null)
                    hashCode = hashCode * 59 + ActualBilledHours.GetHashCode();
                    if (ActualHours != null)
                    hashCode = hashCode * 59 + ActualHours.GetHashCode();
                    if (ChangeOrdersBudget != null)
                    hashCode = hashCode * 59 + ChangeOrdersBudget.GetHashCode();
                    if (ChangeOrdersRevenue != null)
                    hashCode = hashCode * 59 + ChangeOrdersRevenue.GetHashCode();
                    if (CompanyID != null)
                    hashCode = hashCode * 59 + CompanyID.GetHashCode();
                    if (CompanyOwnerResourceID != null)
                    hashCode = hashCode * 59 + CompanyOwnerResourceID.GetHashCode();
                    if (CompletedDateTime != null)
                    hashCode = hashCode * 59 + CompletedDateTime.GetHashCode();
                    if (CompletedPercentage != null)
                    hashCode = hashCode * 59 + CompletedPercentage.GetHashCode();
                    if (ContractID != null)
                    hashCode = hashCode * 59 + ContractID.GetHashCode();
                    if (CreateDateTime != null)
                    hashCode = hashCode * 59 + CreateDateTime.GetHashCode();
                    if (CreatorResourceID != null)
                    hashCode = hashCode * 59 + CreatorResourceID.GetHashCode();
                    if (Department != null)
                    hashCode = hashCode * 59 + Department.GetHashCode();
                    if (Description != null)
                    hashCode = hashCode * 59 + Description.GetHashCode();
                    if (Duration != null)
                    hashCode = hashCode * 59 + Duration.GetHashCode();
                    if (EndDateTime != null)
                    hashCode = hashCode * 59 + EndDateTime.GetHashCode();
                    if (EstimatedSalesCost != null)
                    hashCode = hashCode * 59 + EstimatedSalesCost.GetHashCode();
                    if (EstimatedTime != null)
                    hashCode = hashCode * 59 + EstimatedTime.GetHashCode();
                    if (ExtProjectNumber != null)
                    hashCode = hashCode * 59 + ExtProjectNumber.GetHashCode();
                    if (ExtProjectType != null)
                    hashCode = hashCode * 59 + ExtProjectType.GetHashCode();
                    if (ImpersonatorCreatorResourceID != null)
                    hashCode = hashCode * 59 + ImpersonatorCreatorResourceID.GetHashCode();
                    if (LaborEstimatedCosts != null)
                    hashCode = hashCode * 59 + LaborEstimatedCosts.GetHashCode();
                    if (LaborEstimatedMarginPercentage != null)
                    hashCode = hashCode * 59 + LaborEstimatedMarginPercentage.GetHashCode();
                    if (LaborEstimatedRevenue != null)
                    hashCode = hashCode * 59 + LaborEstimatedRevenue.GetHashCode();
                    if (LastActivityDateTime != null)
                    hashCode = hashCode * 59 + LastActivityDateTime.GetHashCode();
                    if (LastActivityPersonType != null)
                    hashCode = hashCode * 59 + LastActivityPersonType.GetHashCode();
                    if (LastActivityResourceID != null)
                    hashCode = hashCode * 59 + LastActivityResourceID.GetHashCode();
                    if (OpportunityID != null)
                    hashCode = hashCode * 59 + OpportunityID.GetHashCode();
                    if (OrganizationalLevelAssociationID != null)
                    hashCode = hashCode * 59 + OrganizationalLevelAssociationID.GetHashCode();
                    if (OriginalEstimatedRevenue != null)
                    hashCode = hashCode * 59 + OriginalEstimatedRevenue.GetHashCode();
                    if (ProjectCostEstimatedMarginPercentage != null)
                    hashCode = hashCode * 59 + ProjectCostEstimatedMarginPercentage.GetHashCode();
                    if (ProjectCostsBudget != null)
                    hashCode = hashCode * 59 + ProjectCostsBudget.GetHashCode();
                    if (ProjectCostsRevenue != null)
                    hashCode = hashCode * 59 + ProjectCostsRevenue.GetHashCode();
                    if (ProjectLeadResourceID != null)
                    hashCode = hashCode * 59 + ProjectLeadResourceID.GetHashCode();
                    if (ProjectName != null)
                    hashCode = hashCode * 59 + ProjectName.GetHashCode();
                    if (ProjectNumber != null)
                    hashCode = hashCode * 59 + ProjectNumber.GetHashCode();
                    if (ProjectType != null)
                    hashCode = hashCode * 59 + ProjectType.GetHashCode();
                    if (PurchaseOrderNumber != null)
                    hashCode = hashCode * 59 + PurchaseOrderNumber.GetHashCode();
                    if (Sgda != null)
                    hashCode = hashCode * 59 + Sgda.GetHashCode();
                    if (StartDateTime != null)
                    hashCode = hashCode * 59 + StartDateTime.GetHashCode();
                    if (Status != null)
                    hashCode = hashCode * 59 + Status.GetHashCode();
                    if (StatusDateTime != null)
                    hashCode = hashCode * 59 + StatusDateTime.GetHashCode();
                    if (StatusDetail != null)
                    hashCode = hashCode * 59 + StatusDetail.GetHashCode();
                    if (UserDefinedFields != null)
                    hashCode = hashCode * 59 + UserDefinedFields.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(ProjectModel left, ProjectModel right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(ProjectModel left, ProjectModel right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
