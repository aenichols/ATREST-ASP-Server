/*
 * Datto|Autotask PSA Rest API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class ContactModel : IEquatable<ContactModel>
    { 
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id")]
        public long? Id { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalAddressInformation
        /// </summary>
        [DataMember(Name="additionalAddressInformation")]
        public string AdditionalAddressInformation { get; set; }

        /// <summary>
        /// Gets or Sets AddressLine
        /// </summary>
        [DataMember(Name="addressLine")]
        public string AddressLine { get; set; }

        /// <summary>
        /// Gets or Sets AddressLine1
        /// </summary>
        [DataMember(Name="addressLine1")]
        public string AddressLine1 { get; set; }

        /// <summary>
        /// Gets or Sets AlternatePhone
        /// </summary>
        [DataMember(Name="alternatePhone")]
        public string AlternatePhone { get; set; }

        /// <summary>
        /// Gets or Sets ApiVendorID
        /// </summary>
        [DataMember(Name="apiVendorID")]
        public int? ApiVendorID { get; set; }

        /// <summary>
        /// Gets or Sets BulkEmailOptOutTime
        /// </summary>
        [DataMember(Name="bulkEmailOptOutTime")]
        public DateTime? BulkEmailOptOutTime { get; set; }

        /// <summary>
        /// Gets or Sets City
        /// </summary>
        [DataMember(Name="city")]
        public string City { get; set; }

        /// <summary>
        /// Gets or Sets CompanyID
        /// </summary>
        [DataMember(Name="companyID")]
        public int? CompanyID { get; set; }

        /// <summary>
        /// Gets or Sets CompanyLocationID
        /// </summary>
        [DataMember(Name="companyLocationID")]
        public int? CompanyLocationID { get; set; }

        /// <summary>
        /// Gets or Sets CountryID
        /// </summary>
        [DataMember(Name="countryID")]
        public int? CountryID { get; set; }

        /// <summary>
        /// Gets or Sets CreateDate
        /// </summary>
        [DataMember(Name="createDate")]
        public DateTime? CreateDate { get; set; }

        /// <summary>
        /// Gets or Sets EmailAddress
        /// </summary>
        [DataMember(Name="emailAddress")]
        public string EmailAddress { get; set; }

        /// <summary>
        /// Gets or Sets EmailAddress2
        /// </summary>
        [DataMember(Name="emailAddress2")]
        public string EmailAddress2 { get; set; }

        /// <summary>
        /// Gets or Sets EmailAddress3
        /// </summary>
        [DataMember(Name="emailAddress3")]
        public string EmailAddress3 { get; set; }

        /// <summary>
        /// Gets or Sets Extension
        /// </summary>
        [DataMember(Name="extension")]
        public string Extension { get; set; }

        /// <summary>
        /// Gets or Sets ExternalID
        /// </summary>
        [DataMember(Name="externalID")]
        public string ExternalID { get; set; }

        /// <summary>
        /// Gets or Sets FacebookUrl
        /// </summary>
        [DataMember(Name="facebookUrl")]
        public string FacebookUrl { get; set; }

        /// <summary>
        /// Gets or Sets FaxNumber
        /// </summary>
        [DataMember(Name="faxNumber")]
        public string FaxNumber { get; set; }

        /// <summary>
        /// Gets or Sets FirstName
        /// </summary>
        [DataMember(Name="firstName")]
        public string FirstName { get; set; }

        /// <summary>
        /// Gets or Sets ImpersonatorCreatorResourceID
        /// </summary>
        [DataMember(Name="impersonatorCreatorResourceID")]
        public int? ImpersonatorCreatorResourceID { get; set; }

        /// <summary>
        /// Gets or Sets IsActive
        /// </summary>
        [DataMember(Name="isActive")]
        public int? IsActive { get; set; }

        /// <summary>
        /// Gets or Sets IsOptedOutFromBulkEmail
        /// </summary>
        [DataMember(Name="isOptedOutFromBulkEmail")]
        public bool? IsOptedOutFromBulkEmail { get; set; }

        /// <summary>
        /// Gets or Sets LastActivityDate
        /// </summary>
        [DataMember(Name="lastActivityDate")]
        public DateTime? LastActivityDate { get; set; }

        /// <summary>
        /// Gets or Sets LastModifiedDate
        /// </summary>
        [DataMember(Name="lastModifiedDate")]
        public DateTime? LastModifiedDate { get; set; }

        /// <summary>
        /// Gets or Sets LastName
        /// </summary>
        [DataMember(Name="lastName")]
        public string LastName { get; set; }

        /// <summary>
        /// Gets or Sets LinkedInUrl
        /// </summary>
        [DataMember(Name="linkedInUrl")]
        public string LinkedInUrl { get; set; }

        /// <summary>
        /// Gets or Sets MiddleInitial
        /// </summary>
        [DataMember(Name="middleInitial")]
        public string MiddleInitial { get; set; }

        /// <summary>
        /// Gets or Sets MobilePhone
        /// </summary>
        [DataMember(Name="mobilePhone")]
        public string MobilePhone { get; set; }

        /// <summary>
        /// Gets or Sets NamePrefix
        /// </summary>
        [DataMember(Name="namePrefix")]
        public int? NamePrefix { get; set; }

        /// <summary>
        /// Gets or Sets NameSuffix
        /// </summary>
        [DataMember(Name="nameSuffix")]
        public int? NameSuffix { get; set; }

        /// <summary>
        /// Gets or Sets Note
        /// </summary>
        [DataMember(Name="note")]
        public string Note { get; set; }

        /// <summary>
        /// Gets or Sets ReceivesEmailNotifications
        /// </summary>
        [DataMember(Name="receivesEmailNotifications")]
        public bool? ReceivesEmailNotifications { get; set; }

        /// <summary>
        /// Gets or Sets Phone
        /// </summary>
        [DataMember(Name="phone")]
        public string Phone { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryContact
        /// </summary>
        [DataMember(Name="primaryContact")]
        public bool? PrimaryContact { get; set; }

        /// <summary>
        /// Gets or Sets RoomNumber
        /// </summary>
        [DataMember(Name="roomNumber")]
        public string RoomNumber { get; set; }

        /// <summary>
        /// Gets or Sets SolicitationOptOut
        /// </summary>
        [DataMember(Name="solicitationOptOut")]
        public bool? SolicitationOptOut { get; set; }

        /// <summary>
        /// Gets or Sets SolicitationOptOutTime
        /// </summary>
        [DataMember(Name="solicitationOptOutTime")]
        public DateTime? SolicitationOptOutTime { get; set; }

        /// <summary>
        /// Gets or Sets State
        /// </summary>
        [DataMember(Name="state")]
        public string State { get; set; }

        /// <summary>
        /// Gets or Sets SurveyOptOut
        /// </summary>
        [DataMember(Name="surveyOptOut")]
        public bool? SurveyOptOut { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name="title")]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets TwitterUrl
        /// </summary>
        [DataMember(Name="twitterUrl")]
        public string TwitterUrl { get; set; }

        /// <summary>
        /// Gets or Sets ZipCode
        /// </summary>
        [DataMember(Name="zipCode")]
        public string ZipCode { get; set; }

        /// <summary>
        /// Gets or Sets SoapParentPropertyId
        /// </summary>
        [DataMember(Name="soapParentPropertyId")]
        public ExpressionFuncContactInt64 SoapParentPropertyId { get; private set; }

        /// <summary>
        /// Gets or Sets UserDefinedFields
        /// </summary>
        [DataMember(Name="userDefinedFields")]
        public List<UserDefinedField> UserDefinedFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ContactModel {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  AdditionalAddressInformation: ").Append(AdditionalAddressInformation).Append("\n");
            sb.Append("  AddressLine: ").Append(AddressLine).Append("\n");
            sb.Append("  AddressLine1: ").Append(AddressLine1).Append("\n");
            sb.Append("  AlternatePhone: ").Append(AlternatePhone).Append("\n");
            sb.Append("  ApiVendorID: ").Append(ApiVendorID).Append("\n");
            sb.Append("  BulkEmailOptOutTime: ").Append(BulkEmailOptOutTime).Append("\n");
            sb.Append("  City: ").Append(City).Append("\n");
            sb.Append("  CompanyID: ").Append(CompanyID).Append("\n");
            sb.Append("  CompanyLocationID: ").Append(CompanyLocationID).Append("\n");
            sb.Append("  CountryID: ").Append(CountryID).Append("\n");
            sb.Append("  CreateDate: ").Append(CreateDate).Append("\n");
            sb.Append("  EmailAddress: ").Append(EmailAddress).Append("\n");
            sb.Append("  EmailAddress2: ").Append(EmailAddress2).Append("\n");
            sb.Append("  EmailAddress3: ").Append(EmailAddress3).Append("\n");
            sb.Append("  Extension: ").Append(Extension).Append("\n");
            sb.Append("  ExternalID: ").Append(ExternalID).Append("\n");
            sb.Append("  FacebookUrl: ").Append(FacebookUrl).Append("\n");
            sb.Append("  FaxNumber: ").Append(FaxNumber).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  ImpersonatorCreatorResourceID: ").Append(ImpersonatorCreatorResourceID).Append("\n");
            sb.Append("  IsActive: ").Append(IsActive).Append("\n");
            sb.Append("  IsOptedOutFromBulkEmail: ").Append(IsOptedOutFromBulkEmail).Append("\n");
            sb.Append("  LastActivityDate: ").Append(LastActivityDate).Append("\n");
            sb.Append("  LastModifiedDate: ").Append(LastModifiedDate).Append("\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  LinkedInUrl: ").Append(LinkedInUrl).Append("\n");
            sb.Append("  MiddleInitial: ").Append(MiddleInitial).Append("\n");
            sb.Append("  MobilePhone: ").Append(MobilePhone).Append("\n");
            sb.Append("  NamePrefix: ").Append(NamePrefix).Append("\n");
            sb.Append("  NameSuffix: ").Append(NameSuffix).Append("\n");
            sb.Append("  Note: ").Append(Note).Append("\n");
            sb.Append("  ReceivesEmailNotifications: ").Append(ReceivesEmailNotifications).Append("\n");
            sb.Append("  Phone: ").Append(Phone).Append("\n");
            sb.Append("  PrimaryContact: ").Append(PrimaryContact).Append("\n");
            sb.Append("  RoomNumber: ").Append(RoomNumber).Append("\n");
            sb.Append("  SolicitationOptOut: ").Append(SolicitationOptOut).Append("\n");
            sb.Append("  SolicitationOptOutTime: ").Append(SolicitationOptOutTime).Append("\n");
            sb.Append("  State: ").Append(State).Append("\n");
            sb.Append("  SurveyOptOut: ").Append(SurveyOptOut).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  TwitterUrl: ").Append(TwitterUrl).Append("\n");
            sb.Append("  ZipCode: ").Append(ZipCode).Append("\n");
            sb.Append("  SoapParentPropertyId: ").Append(SoapParentPropertyId).Append("\n");
            sb.Append("  UserDefinedFields: ").Append(UserDefinedFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((ContactModel)obj);
        }

        /// <summary>
        /// Returns true if ContactModel instances are equal
        /// </summary>
        /// <param name="other">Instance of ContactModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ContactModel other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Id == other.Id ||
                    Id != null &&
                    Id.Equals(other.Id)
                ) && 
                (
                    AdditionalAddressInformation == other.AdditionalAddressInformation ||
                    AdditionalAddressInformation != null &&
                    AdditionalAddressInformation.Equals(other.AdditionalAddressInformation)
                ) && 
                (
                    AddressLine == other.AddressLine ||
                    AddressLine != null &&
                    AddressLine.Equals(other.AddressLine)
                ) && 
                (
                    AddressLine1 == other.AddressLine1 ||
                    AddressLine1 != null &&
                    AddressLine1.Equals(other.AddressLine1)
                ) && 
                (
                    AlternatePhone == other.AlternatePhone ||
                    AlternatePhone != null &&
                    AlternatePhone.Equals(other.AlternatePhone)
                ) && 
                (
                    ApiVendorID == other.ApiVendorID ||
                    ApiVendorID != null &&
                    ApiVendorID.Equals(other.ApiVendorID)
                ) && 
                (
                    BulkEmailOptOutTime == other.BulkEmailOptOutTime ||
                    BulkEmailOptOutTime != null &&
                    BulkEmailOptOutTime.Equals(other.BulkEmailOptOutTime)
                ) && 
                (
                    City == other.City ||
                    City != null &&
                    City.Equals(other.City)
                ) && 
                (
                    CompanyID == other.CompanyID ||
                    CompanyID != null &&
                    CompanyID.Equals(other.CompanyID)
                ) && 
                (
                    CompanyLocationID == other.CompanyLocationID ||
                    CompanyLocationID != null &&
                    CompanyLocationID.Equals(other.CompanyLocationID)
                ) && 
                (
                    CountryID == other.CountryID ||
                    CountryID != null &&
                    CountryID.Equals(other.CountryID)
                ) && 
                (
                    CreateDate == other.CreateDate ||
                    CreateDate != null &&
                    CreateDate.Equals(other.CreateDate)
                ) && 
                (
                    EmailAddress == other.EmailAddress ||
                    EmailAddress != null &&
                    EmailAddress.Equals(other.EmailAddress)
                ) && 
                (
                    EmailAddress2 == other.EmailAddress2 ||
                    EmailAddress2 != null &&
                    EmailAddress2.Equals(other.EmailAddress2)
                ) && 
                (
                    EmailAddress3 == other.EmailAddress3 ||
                    EmailAddress3 != null &&
                    EmailAddress3.Equals(other.EmailAddress3)
                ) && 
                (
                    Extension == other.Extension ||
                    Extension != null &&
                    Extension.Equals(other.Extension)
                ) && 
                (
                    ExternalID == other.ExternalID ||
                    ExternalID != null &&
                    ExternalID.Equals(other.ExternalID)
                ) && 
                (
                    FacebookUrl == other.FacebookUrl ||
                    FacebookUrl != null &&
                    FacebookUrl.Equals(other.FacebookUrl)
                ) && 
                (
                    FaxNumber == other.FaxNumber ||
                    FaxNumber != null &&
                    FaxNumber.Equals(other.FaxNumber)
                ) && 
                (
                    FirstName == other.FirstName ||
                    FirstName != null &&
                    FirstName.Equals(other.FirstName)
                ) && 
                (
                    ImpersonatorCreatorResourceID == other.ImpersonatorCreatorResourceID ||
                    ImpersonatorCreatorResourceID != null &&
                    ImpersonatorCreatorResourceID.Equals(other.ImpersonatorCreatorResourceID)
                ) && 
                (
                    IsActive == other.IsActive ||
                    IsActive != null &&
                    IsActive.Equals(other.IsActive)
                ) && 
                (
                    IsOptedOutFromBulkEmail == other.IsOptedOutFromBulkEmail ||
                    IsOptedOutFromBulkEmail != null &&
                    IsOptedOutFromBulkEmail.Equals(other.IsOptedOutFromBulkEmail)
                ) && 
                (
                    LastActivityDate == other.LastActivityDate ||
                    LastActivityDate != null &&
                    LastActivityDate.Equals(other.LastActivityDate)
                ) && 
                (
                    LastModifiedDate == other.LastModifiedDate ||
                    LastModifiedDate != null &&
                    LastModifiedDate.Equals(other.LastModifiedDate)
                ) && 
                (
                    LastName == other.LastName ||
                    LastName != null &&
                    LastName.Equals(other.LastName)
                ) && 
                (
                    LinkedInUrl == other.LinkedInUrl ||
                    LinkedInUrl != null &&
                    LinkedInUrl.Equals(other.LinkedInUrl)
                ) && 
                (
                    MiddleInitial == other.MiddleInitial ||
                    MiddleInitial != null &&
                    MiddleInitial.Equals(other.MiddleInitial)
                ) && 
                (
                    MobilePhone == other.MobilePhone ||
                    MobilePhone != null &&
                    MobilePhone.Equals(other.MobilePhone)
                ) && 
                (
                    NamePrefix == other.NamePrefix ||
                    NamePrefix != null &&
                    NamePrefix.Equals(other.NamePrefix)
                ) && 
                (
                    NameSuffix == other.NameSuffix ||
                    NameSuffix != null &&
                    NameSuffix.Equals(other.NameSuffix)
                ) && 
                (
                    Note == other.Note ||
                    Note != null &&
                    Note.Equals(other.Note)
                ) && 
                (
                    ReceivesEmailNotifications == other.ReceivesEmailNotifications ||
                    ReceivesEmailNotifications != null &&
                    ReceivesEmailNotifications.Equals(other.ReceivesEmailNotifications)
                ) && 
                (
                    Phone == other.Phone ||
                    Phone != null &&
                    Phone.Equals(other.Phone)
                ) && 
                (
                    PrimaryContact == other.PrimaryContact ||
                    PrimaryContact != null &&
                    PrimaryContact.Equals(other.PrimaryContact)
                ) && 
                (
                    RoomNumber == other.RoomNumber ||
                    RoomNumber != null &&
                    RoomNumber.Equals(other.RoomNumber)
                ) && 
                (
                    SolicitationOptOut == other.SolicitationOptOut ||
                    SolicitationOptOut != null &&
                    SolicitationOptOut.Equals(other.SolicitationOptOut)
                ) && 
                (
                    SolicitationOptOutTime == other.SolicitationOptOutTime ||
                    SolicitationOptOutTime != null &&
                    SolicitationOptOutTime.Equals(other.SolicitationOptOutTime)
                ) && 
                (
                    State == other.State ||
                    State != null &&
                    State.Equals(other.State)
                ) && 
                (
                    SurveyOptOut == other.SurveyOptOut ||
                    SurveyOptOut != null &&
                    SurveyOptOut.Equals(other.SurveyOptOut)
                ) && 
                (
                    Title == other.Title ||
                    Title != null &&
                    Title.Equals(other.Title)
                ) && 
                (
                    TwitterUrl == other.TwitterUrl ||
                    TwitterUrl != null &&
                    TwitterUrl.Equals(other.TwitterUrl)
                ) && 
                (
                    ZipCode == other.ZipCode ||
                    ZipCode != null &&
                    ZipCode.Equals(other.ZipCode)
                ) && 
                (
                    SoapParentPropertyId == other.SoapParentPropertyId ||
                    SoapParentPropertyId != null &&
                    SoapParentPropertyId.Equals(other.SoapParentPropertyId)
                ) && 
                (
                    UserDefinedFields == other.UserDefinedFields ||
                    UserDefinedFields != null &&
                    UserDefinedFields.SequenceEqual(other.UserDefinedFields)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Id != null)
                    hashCode = hashCode * 59 + Id.GetHashCode();
                    if (AdditionalAddressInformation != null)
                    hashCode = hashCode * 59 + AdditionalAddressInformation.GetHashCode();
                    if (AddressLine != null)
                    hashCode = hashCode * 59 + AddressLine.GetHashCode();
                    if (AddressLine1 != null)
                    hashCode = hashCode * 59 + AddressLine1.GetHashCode();
                    if (AlternatePhone != null)
                    hashCode = hashCode * 59 + AlternatePhone.GetHashCode();
                    if (ApiVendorID != null)
                    hashCode = hashCode * 59 + ApiVendorID.GetHashCode();
                    if (BulkEmailOptOutTime != null)
                    hashCode = hashCode * 59 + BulkEmailOptOutTime.GetHashCode();
                    if (City != null)
                    hashCode = hashCode * 59 + City.GetHashCode();
                    if (CompanyID != null)
                    hashCode = hashCode * 59 + CompanyID.GetHashCode();
                    if (CompanyLocationID != null)
                    hashCode = hashCode * 59 + CompanyLocationID.GetHashCode();
                    if (CountryID != null)
                    hashCode = hashCode * 59 + CountryID.GetHashCode();
                    if (CreateDate != null)
                    hashCode = hashCode * 59 + CreateDate.GetHashCode();
                    if (EmailAddress != null)
                    hashCode = hashCode * 59 + EmailAddress.GetHashCode();
                    if (EmailAddress2 != null)
                    hashCode = hashCode * 59 + EmailAddress2.GetHashCode();
                    if (EmailAddress3 != null)
                    hashCode = hashCode * 59 + EmailAddress3.GetHashCode();
                    if (Extension != null)
                    hashCode = hashCode * 59 + Extension.GetHashCode();
                    if (ExternalID != null)
                    hashCode = hashCode * 59 + ExternalID.GetHashCode();
                    if (FacebookUrl != null)
                    hashCode = hashCode * 59 + FacebookUrl.GetHashCode();
                    if (FaxNumber != null)
                    hashCode = hashCode * 59 + FaxNumber.GetHashCode();
                    if (FirstName != null)
                    hashCode = hashCode * 59 + FirstName.GetHashCode();
                    if (ImpersonatorCreatorResourceID != null)
                    hashCode = hashCode * 59 + ImpersonatorCreatorResourceID.GetHashCode();
                    if (IsActive != null)
                    hashCode = hashCode * 59 + IsActive.GetHashCode();
                    if (IsOptedOutFromBulkEmail != null)
                    hashCode = hashCode * 59 + IsOptedOutFromBulkEmail.GetHashCode();
                    if (LastActivityDate != null)
                    hashCode = hashCode * 59 + LastActivityDate.GetHashCode();
                    if (LastModifiedDate != null)
                    hashCode = hashCode * 59 + LastModifiedDate.GetHashCode();
                    if (LastName != null)
                    hashCode = hashCode * 59 + LastName.GetHashCode();
                    if (LinkedInUrl != null)
                    hashCode = hashCode * 59 + LinkedInUrl.GetHashCode();
                    if (MiddleInitial != null)
                    hashCode = hashCode * 59 + MiddleInitial.GetHashCode();
                    if (MobilePhone != null)
                    hashCode = hashCode * 59 + MobilePhone.GetHashCode();
                    if (NamePrefix != null)
                    hashCode = hashCode * 59 + NamePrefix.GetHashCode();
                    if (NameSuffix != null)
                    hashCode = hashCode * 59 + NameSuffix.GetHashCode();
                    if (Note != null)
                    hashCode = hashCode * 59 + Note.GetHashCode();
                    if (ReceivesEmailNotifications != null)
                    hashCode = hashCode * 59 + ReceivesEmailNotifications.GetHashCode();
                    if (Phone != null)
                    hashCode = hashCode * 59 + Phone.GetHashCode();
                    if (PrimaryContact != null)
                    hashCode = hashCode * 59 + PrimaryContact.GetHashCode();
                    if (RoomNumber != null)
                    hashCode = hashCode * 59 + RoomNumber.GetHashCode();
                    if (SolicitationOptOut != null)
                    hashCode = hashCode * 59 + SolicitationOptOut.GetHashCode();
                    if (SolicitationOptOutTime != null)
                    hashCode = hashCode * 59 + SolicitationOptOutTime.GetHashCode();
                    if (State != null)
                    hashCode = hashCode * 59 + State.GetHashCode();
                    if (SurveyOptOut != null)
                    hashCode = hashCode * 59 + SurveyOptOut.GetHashCode();
                    if (Title != null)
                    hashCode = hashCode * 59 + Title.GetHashCode();
                    if (TwitterUrl != null)
                    hashCode = hashCode * 59 + TwitterUrl.GetHashCode();
                    if (ZipCode != null)
                    hashCode = hashCode * 59 + ZipCode.GetHashCode();
                    if (SoapParentPropertyId != null)
                    hashCode = hashCode * 59 + SoapParentPropertyId.GetHashCode();
                    if (UserDefinedFields != null)
                    hashCode = hashCode * 59 + UserDefinedFields.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(ContactModel left, ContactModel right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(ContactModel left, ContactModel right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
