/*
 * Datto|Autotask PSA Rest API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class BillingItemModel : IEquatable<BillingItemModel>
    { 
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id")]
        public long? Id { get; set; }

        /// <summary>
        /// Gets or Sets AccountManagerWhenApprovedID
        /// </summary>
        [DataMember(Name="accountManagerWhenApprovedID")]
        public int? AccountManagerWhenApprovedID { get; set; }

        /// <summary>
        /// Gets or Sets BillingCodeID
        /// </summary>
        [DataMember(Name="billingCodeID")]
        public int? BillingCodeID { get; set; }

        /// <summary>
        /// Gets or Sets BillingItemType
        /// </summary>
        [DataMember(Name="billingItemType")]
        public int? BillingItemType { get; set; }

        /// <summary>
        /// Gets or Sets CompanyID
        /// </summary>
        [DataMember(Name="companyID")]
        public int? CompanyID { get; set; }

        /// <summary>
        /// Gets or Sets ConfigurationItemID
        /// </summary>
        [DataMember(Name="configurationItemID")]
        public long? ConfigurationItemID { get; set; }

        /// <summary>
        /// Gets or Sets ContractChargeID
        /// </summary>
        [DataMember(Name="contractChargeID")]
        public long? ContractChargeID { get; set; }

        /// <summary>
        /// Gets or Sets ContractID
        /// </summary>
        [DataMember(Name="contractID")]
        public int? ContractID { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets ExpenseItemID
        /// </summary>
        [DataMember(Name="expenseItemID")]
        public int? ExpenseItemID { get; set; }

        /// <summary>
        /// Gets or Sets ExtendedPrice
        /// </summary>
        [DataMember(Name="extendedPrice")]
        public double? ExtendedPrice { get; set; }

        /// <summary>
        /// Gets or Sets InternalCurrencyExtendedPrice
        /// </summary>
        [DataMember(Name="internalCurrencyExtendedPrice")]
        public double? InternalCurrencyExtendedPrice { get; set; }

        /// <summary>
        /// Gets or Sets InternalCurrencyRate
        /// </summary>
        [DataMember(Name="internalCurrencyRate")]
        public double? InternalCurrencyRate { get; set; }

        /// <summary>
        /// Gets or Sets InternalCurrencyTaxDollars
        /// </summary>
        [DataMember(Name="internalCurrencyTaxDollars")]
        public double? InternalCurrencyTaxDollars { get; set; }

        /// <summary>
        /// Gets or Sets InternalCurrencyTotalAmount
        /// </summary>
        [DataMember(Name="internalCurrencyTotalAmount")]
        public double? InternalCurrencyTotalAmount { get; set; }

        /// <summary>
        /// Gets or Sets InvoiceID
        /// </summary>
        [DataMember(Name="invoiceID")]
        public int? InvoiceID { get; set; }

        /// <summary>
        /// Gets or Sets ItemApproverID
        /// </summary>
        [DataMember(Name="itemApproverID")]
        public int? ItemApproverID { get; set; }

        /// <summary>
        /// Gets or Sets ItemDate
        /// </summary>
        [DataMember(Name="itemDate")]
        public DateTime? ItemDate { get; set; }

        /// <summary>
        /// Gets or Sets ItemName
        /// </summary>
        [DataMember(Name="itemName")]
        public string ItemName { get; set; }

        /// <summary>
        /// Gets or Sets LineItemFullDescription
        /// </summary>
        [DataMember(Name="lineItemFullDescription")]
        public string LineItemFullDescription { get; set; }

        /// <summary>
        /// Gets or Sets LineItemGroupDescription
        /// </summary>
        [DataMember(Name="lineItemGroupDescription")]
        public string LineItemGroupDescription { get; set; }

        /// <summary>
        /// Gets or Sets MilestoneID
        /// </summary>
        [DataMember(Name="milestoneID")]
        public long? MilestoneID { get; set; }

        /// <summary>
        /// Gets or Sets NonBillable
        /// </summary>
        [DataMember(Name="nonBillable")]
        public int? NonBillable { get; set; }

        /// <summary>
        /// Gets or Sets OrganizationalLevelAssociationID
        /// </summary>
        [DataMember(Name="organizationalLevelAssociationID")]
        public int? OrganizationalLevelAssociationID { get; set; }

        /// <summary>
        /// Gets or Sets OurCost
        /// </summary>
        [DataMember(Name="ourCost")]
        public double? OurCost { get; set; }

        /// <summary>
        /// Gets or Sets PostedDate
        /// </summary>
        [DataMember(Name="postedDate")]
        public DateTime? PostedDate { get; set; }

        /// <summary>
        /// Gets or Sets PostedOnTime
        /// </summary>
        [DataMember(Name="postedOnTime")]
        public DateTime? PostedOnTime { get; set; }

        /// <summary>
        /// Gets or Sets ProjectChargeID
        /// </summary>
        [DataMember(Name="projectChargeID")]
        public long? ProjectChargeID { get; set; }

        /// <summary>
        /// Gets or Sets ProjectID
        /// </summary>
        [DataMember(Name="projectID")]
        public int? ProjectID { get; set; }

        /// <summary>
        /// Gets or Sets PurchaseOrderNumber
        /// </summary>
        [DataMember(Name="purchaseOrderNumber")]
        public string PurchaseOrderNumber { get; set; }

        /// <summary>
        /// Gets or Sets Quantity
        /// </summary>
        [DataMember(Name="quantity")]
        public double? Quantity { get; set; }

        /// <summary>
        /// Gets or Sets Rate
        /// </summary>
        [DataMember(Name="rate")]
        public double? Rate { get; set; }

        /// <summary>
        /// Gets or Sets RoleID
        /// </summary>
        [DataMember(Name="roleID")]
        public int? RoleID { get; set; }

        /// <summary>
        /// Gets or Sets ServiceBundleID
        /// </summary>
        [DataMember(Name="serviceBundleID")]
        public long? ServiceBundleID { get; set; }

        /// <summary>
        /// Gets or Sets ServiceID
        /// </summary>
        [DataMember(Name="serviceID")]
        public long? ServiceID { get; set; }

        /// <summary>
        /// Gets or Sets SortOrderID
        /// </summary>
        [DataMember(Name="sortOrderID")]
        public long? SortOrderID { get; set; }

        /// <summary>
        /// Gets or Sets SubType
        /// </summary>
        [DataMember(Name="subType")]
        public int? SubType { get; set; }

        /// <summary>
        /// Gets or Sets TaskID
        /// </summary>
        [DataMember(Name="taskID")]
        public int? TaskID { get; set; }

        /// <summary>
        /// Gets or Sets TaxDollars
        /// </summary>
        [DataMember(Name="taxDollars")]
        public double? TaxDollars { get; set; }

        /// <summary>
        /// Gets or Sets TicketChargeID
        /// </summary>
        [DataMember(Name="ticketChargeID")]
        public long? TicketChargeID { get; set; }

        /// <summary>
        /// Gets or Sets TicketID
        /// </summary>
        [DataMember(Name="ticketID")]
        public int? TicketID { get; set; }

        /// <summary>
        /// Gets or Sets TimeEntryID
        /// </summary>
        [DataMember(Name="timeEntryID")]
        public int? TimeEntryID { get; set; }

        /// <summary>
        /// Gets or Sets TotalAmount
        /// </summary>
        [DataMember(Name="totalAmount")]
        public double? TotalAmount { get; set; }

        /// <summary>
        /// Gets or Sets VendorID
        /// </summary>
        [DataMember(Name="vendorID")]
        public long? VendorID { get; set; }

        /// <summary>
        /// Gets or Sets WebServiceDate
        /// </summary>
        [DataMember(Name="webServiceDate")]
        public DateTime? WebServiceDate { get; set; }

        /// <summary>
        /// Gets or Sets UserDefinedFields
        /// </summary>
        [DataMember(Name="userDefinedFields")]
        public List<UserDefinedField> UserDefinedFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class BillingItemModel {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  AccountManagerWhenApprovedID: ").Append(AccountManagerWhenApprovedID).Append("\n");
            sb.Append("  BillingCodeID: ").Append(BillingCodeID).Append("\n");
            sb.Append("  BillingItemType: ").Append(BillingItemType).Append("\n");
            sb.Append("  CompanyID: ").Append(CompanyID).Append("\n");
            sb.Append("  ConfigurationItemID: ").Append(ConfigurationItemID).Append("\n");
            sb.Append("  ContractChargeID: ").Append(ContractChargeID).Append("\n");
            sb.Append("  ContractID: ").Append(ContractID).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  ExpenseItemID: ").Append(ExpenseItemID).Append("\n");
            sb.Append("  ExtendedPrice: ").Append(ExtendedPrice).Append("\n");
            sb.Append("  InternalCurrencyExtendedPrice: ").Append(InternalCurrencyExtendedPrice).Append("\n");
            sb.Append("  InternalCurrencyRate: ").Append(InternalCurrencyRate).Append("\n");
            sb.Append("  InternalCurrencyTaxDollars: ").Append(InternalCurrencyTaxDollars).Append("\n");
            sb.Append("  InternalCurrencyTotalAmount: ").Append(InternalCurrencyTotalAmount).Append("\n");
            sb.Append("  InvoiceID: ").Append(InvoiceID).Append("\n");
            sb.Append("  ItemApproverID: ").Append(ItemApproverID).Append("\n");
            sb.Append("  ItemDate: ").Append(ItemDate).Append("\n");
            sb.Append("  ItemName: ").Append(ItemName).Append("\n");
            sb.Append("  LineItemFullDescription: ").Append(LineItemFullDescription).Append("\n");
            sb.Append("  LineItemGroupDescription: ").Append(LineItemGroupDescription).Append("\n");
            sb.Append("  MilestoneID: ").Append(MilestoneID).Append("\n");
            sb.Append("  NonBillable: ").Append(NonBillable).Append("\n");
            sb.Append("  OrganizationalLevelAssociationID: ").Append(OrganizationalLevelAssociationID).Append("\n");
            sb.Append("  OurCost: ").Append(OurCost).Append("\n");
            sb.Append("  PostedDate: ").Append(PostedDate).Append("\n");
            sb.Append("  PostedOnTime: ").Append(PostedOnTime).Append("\n");
            sb.Append("  ProjectChargeID: ").Append(ProjectChargeID).Append("\n");
            sb.Append("  ProjectID: ").Append(ProjectID).Append("\n");
            sb.Append("  PurchaseOrderNumber: ").Append(PurchaseOrderNumber).Append("\n");
            sb.Append("  Quantity: ").Append(Quantity).Append("\n");
            sb.Append("  Rate: ").Append(Rate).Append("\n");
            sb.Append("  RoleID: ").Append(RoleID).Append("\n");
            sb.Append("  ServiceBundleID: ").Append(ServiceBundleID).Append("\n");
            sb.Append("  ServiceID: ").Append(ServiceID).Append("\n");
            sb.Append("  SortOrderID: ").Append(SortOrderID).Append("\n");
            sb.Append("  SubType: ").Append(SubType).Append("\n");
            sb.Append("  TaskID: ").Append(TaskID).Append("\n");
            sb.Append("  TaxDollars: ").Append(TaxDollars).Append("\n");
            sb.Append("  TicketChargeID: ").Append(TicketChargeID).Append("\n");
            sb.Append("  TicketID: ").Append(TicketID).Append("\n");
            sb.Append("  TimeEntryID: ").Append(TimeEntryID).Append("\n");
            sb.Append("  TotalAmount: ").Append(TotalAmount).Append("\n");
            sb.Append("  VendorID: ").Append(VendorID).Append("\n");
            sb.Append("  WebServiceDate: ").Append(WebServiceDate).Append("\n");
            sb.Append("  UserDefinedFields: ").Append(UserDefinedFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((BillingItemModel)obj);
        }

        /// <summary>
        /// Returns true if BillingItemModel instances are equal
        /// </summary>
        /// <param name="other">Instance of BillingItemModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BillingItemModel other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Id == other.Id ||
                    Id != null &&
                    Id.Equals(other.Id)
                ) && 
                (
                    AccountManagerWhenApprovedID == other.AccountManagerWhenApprovedID ||
                    AccountManagerWhenApprovedID != null &&
                    AccountManagerWhenApprovedID.Equals(other.AccountManagerWhenApprovedID)
                ) && 
                (
                    BillingCodeID == other.BillingCodeID ||
                    BillingCodeID != null &&
                    BillingCodeID.Equals(other.BillingCodeID)
                ) && 
                (
                    BillingItemType == other.BillingItemType ||
                    BillingItemType != null &&
                    BillingItemType.Equals(other.BillingItemType)
                ) && 
                (
                    CompanyID == other.CompanyID ||
                    CompanyID != null &&
                    CompanyID.Equals(other.CompanyID)
                ) && 
                (
                    ConfigurationItemID == other.ConfigurationItemID ||
                    ConfigurationItemID != null &&
                    ConfigurationItemID.Equals(other.ConfigurationItemID)
                ) && 
                (
                    ContractChargeID == other.ContractChargeID ||
                    ContractChargeID != null &&
                    ContractChargeID.Equals(other.ContractChargeID)
                ) && 
                (
                    ContractID == other.ContractID ||
                    ContractID != null &&
                    ContractID.Equals(other.ContractID)
                ) && 
                (
                    Description == other.Description ||
                    Description != null &&
                    Description.Equals(other.Description)
                ) && 
                (
                    ExpenseItemID == other.ExpenseItemID ||
                    ExpenseItemID != null &&
                    ExpenseItemID.Equals(other.ExpenseItemID)
                ) && 
                (
                    ExtendedPrice == other.ExtendedPrice ||
                    ExtendedPrice != null &&
                    ExtendedPrice.Equals(other.ExtendedPrice)
                ) && 
                (
                    InternalCurrencyExtendedPrice == other.InternalCurrencyExtendedPrice ||
                    InternalCurrencyExtendedPrice != null &&
                    InternalCurrencyExtendedPrice.Equals(other.InternalCurrencyExtendedPrice)
                ) && 
                (
                    InternalCurrencyRate == other.InternalCurrencyRate ||
                    InternalCurrencyRate != null &&
                    InternalCurrencyRate.Equals(other.InternalCurrencyRate)
                ) && 
                (
                    InternalCurrencyTaxDollars == other.InternalCurrencyTaxDollars ||
                    InternalCurrencyTaxDollars != null &&
                    InternalCurrencyTaxDollars.Equals(other.InternalCurrencyTaxDollars)
                ) && 
                (
                    InternalCurrencyTotalAmount == other.InternalCurrencyTotalAmount ||
                    InternalCurrencyTotalAmount != null &&
                    InternalCurrencyTotalAmount.Equals(other.InternalCurrencyTotalAmount)
                ) && 
                (
                    InvoiceID == other.InvoiceID ||
                    InvoiceID != null &&
                    InvoiceID.Equals(other.InvoiceID)
                ) && 
                (
                    ItemApproverID == other.ItemApproverID ||
                    ItemApproverID != null &&
                    ItemApproverID.Equals(other.ItemApproverID)
                ) && 
                (
                    ItemDate == other.ItemDate ||
                    ItemDate != null &&
                    ItemDate.Equals(other.ItemDate)
                ) && 
                (
                    ItemName == other.ItemName ||
                    ItemName != null &&
                    ItemName.Equals(other.ItemName)
                ) && 
                (
                    LineItemFullDescription == other.LineItemFullDescription ||
                    LineItemFullDescription != null &&
                    LineItemFullDescription.Equals(other.LineItemFullDescription)
                ) && 
                (
                    LineItemGroupDescription == other.LineItemGroupDescription ||
                    LineItemGroupDescription != null &&
                    LineItemGroupDescription.Equals(other.LineItemGroupDescription)
                ) && 
                (
                    MilestoneID == other.MilestoneID ||
                    MilestoneID != null &&
                    MilestoneID.Equals(other.MilestoneID)
                ) && 
                (
                    NonBillable == other.NonBillable ||
                    NonBillable != null &&
                    NonBillable.Equals(other.NonBillable)
                ) && 
                (
                    OrganizationalLevelAssociationID == other.OrganizationalLevelAssociationID ||
                    OrganizationalLevelAssociationID != null &&
                    OrganizationalLevelAssociationID.Equals(other.OrganizationalLevelAssociationID)
                ) && 
                (
                    OurCost == other.OurCost ||
                    OurCost != null &&
                    OurCost.Equals(other.OurCost)
                ) && 
                (
                    PostedDate == other.PostedDate ||
                    PostedDate != null &&
                    PostedDate.Equals(other.PostedDate)
                ) && 
                (
                    PostedOnTime == other.PostedOnTime ||
                    PostedOnTime != null &&
                    PostedOnTime.Equals(other.PostedOnTime)
                ) && 
                (
                    ProjectChargeID == other.ProjectChargeID ||
                    ProjectChargeID != null &&
                    ProjectChargeID.Equals(other.ProjectChargeID)
                ) && 
                (
                    ProjectID == other.ProjectID ||
                    ProjectID != null &&
                    ProjectID.Equals(other.ProjectID)
                ) && 
                (
                    PurchaseOrderNumber == other.PurchaseOrderNumber ||
                    PurchaseOrderNumber != null &&
                    PurchaseOrderNumber.Equals(other.PurchaseOrderNumber)
                ) && 
                (
                    Quantity == other.Quantity ||
                    Quantity != null &&
                    Quantity.Equals(other.Quantity)
                ) && 
                (
                    Rate == other.Rate ||
                    Rate != null &&
                    Rate.Equals(other.Rate)
                ) && 
                (
                    RoleID == other.RoleID ||
                    RoleID != null &&
                    RoleID.Equals(other.RoleID)
                ) && 
                (
                    ServiceBundleID == other.ServiceBundleID ||
                    ServiceBundleID != null &&
                    ServiceBundleID.Equals(other.ServiceBundleID)
                ) && 
                (
                    ServiceID == other.ServiceID ||
                    ServiceID != null &&
                    ServiceID.Equals(other.ServiceID)
                ) && 
                (
                    SortOrderID == other.SortOrderID ||
                    SortOrderID != null &&
                    SortOrderID.Equals(other.SortOrderID)
                ) && 
                (
                    SubType == other.SubType ||
                    SubType != null &&
                    SubType.Equals(other.SubType)
                ) && 
                (
                    TaskID == other.TaskID ||
                    TaskID != null &&
                    TaskID.Equals(other.TaskID)
                ) && 
                (
                    TaxDollars == other.TaxDollars ||
                    TaxDollars != null &&
                    TaxDollars.Equals(other.TaxDollars)
                ) && 
                (
                    TicketChargeID == other.TicketChargeID ||
                    TicketChargeID != null &&
                    TicketChargeID.Equals(other.TicketChargeID)
                ) && 
                (
                    TicketID == other.TicketID ||
                    TicketID != null &&
                    TicketID.Equals(other.TicketID)
                ) && 
                (
                    TimeEntryID == other.TimeEntryID ||
                    TimeEntryID != null &&
                    TimeEntryID.Equals(other.TimeEntryID)
                ) && 
                (
                    TotalAmount == other.TotalAmount ||
                    TotalAmount != null &&
                    TotalAmount.Equals(other.TotalAmount)
                ) && 
                (
                    VendorID == other.VendorID ||
                    VendorID != null &&
                    VendorID.Equals(other.VendorID)
                ) && 
                (
                    WebServiceDate == other.WebServiceDate ||
                    WebServiceDate != null &&
                    WebServiceDate.Equals(other.WebServiceDate)
                ) && 
                (
                    UserDefinedFields == other.UserDefinedFields ||
                    UserDefinedFields != null &&
                    UserDefinedFields.SequenceEqual(other.UserDefinedFields)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Id != null)
                    hashCode = hashCode * 59 + Id.GetHashCode();
                    if (AccountManagerWhenApprovedID != null)
                    hashCode = hashCode * 59 + AccountManagerWhenApprovedID.GetHashCode();
                    if (BillingCodeID != null)
                    hashCode = hashCode * 59 + BillingCodeID.GetHashCode();
                    if (BillingItemType != null)
                    hashCode = hashCode * 59 + BillingItemType.GetHashCode();
                    if (CompanyID != null)
                    hashCode = hashCode * 59 + CompanyID.GetHashCode();
                    if (ConfigurationItemID != null)
                    hashCode = hashCode * 59 + ConfigurationItemID.GetHashCode();
                    if (ContractChargeID != null)
                    hashCode = hashCode * 59 + ContractChargeID.GetHashCode();
                    if (ContractID != null)
                    hashCode = hashCode * 59 + ContractID.GetHashCode();
                    if (Description != null)
                    hashCode = hashCode * 59 + Description.GetHashCode();
                    if (ExpenseItemID != null)
                    hashCode = hashCode * 59 + ExpenseItemID.GetHashCode();
                    if (ExtendedPrice != null)
                    hashCode = hashCode * 59 + ExtendedPrice.GetHashCode();
                    if (InternalCurrencyExtendedPrice != null)
                    hashCode = hashCode * 59 + InternalCurrencyExtendedPrice.GetHashCode();
                    if (InternalCurrencyRate != null)
                    hashCode = hashCode * 59 + InternalCurrencyRate.GetHashCode();
                    if (InternalCurrencyTaxDollars != null)
                    hashCode = hashCode * 59 + InternalCurrencyTaxDollars.GetHashCode();
                    if (InternalCurrencyTotalAmount != null)
                    hashCode = hashCode * 59 + InternalCurrencyTotalAmount.GetHashCode();
                    if (InvoiceID != null)
                    hashCode = hashCode * 59 + InvoiceID.GetHashCode();
                    if (ItemApproverID != null)
                    hashCode = hashCode * 59 + ItemApproverID.GetHashCode();
                    if (ItemDate != null)
                    hashCode = hashCode * 59 + ItemDate.GetHashCode();
                    if (ItemName != null)
                    hashCode = hashCode * 59 + ItemName.GetHashCode();
                    if (LineItemFullDescription != null)
                    hashCode = hashCode * 59 + LineItemFullDescription.GetHashCode();
                    if (LineItemGroupDescription != null)
                    hashCode = hashCode * 59 + LineItemGroupDescription.GetHashCode();
                    if (MilestoneID != null)
                    hashCode = hashCode * 59 + MilestoneID.GetHashCode();
                    if (NonBillable != null)
                    hashCode = hashCode * 59 + NonBillable.GetHashCode();
                    if (OrganizationalLevelAssociationID != null)
                    hashCode = hashCode * 59 + OrganizationalLevelAssociationID.GetHashCode();
                    if (OurCost != null)
                    hashCode = hashCode * 59 + OurCost.GetHashCode();
                    if (PostedDate != null)
                    hashCode = hashCode * 59 + PostedDate.GetHashCode();
                    if (PostedOnTime != null)
                    hashCode = hashCode * 59 + PostedOnTime.GetHashCode();
                    if (ProjectChargeID != null)
                    hashCode = hashCode * 59 + ProjectChargeID.GetHashCode();
                    if (ProjectID != null)
                    hashCode = hashCode * 59 + ProjectID.GetHashCode();
                    if (PurchaseOrderNumber != null)
                    hashCode = hashCode * 59 + PurchaseOrderNumber.GetHashCode();
                    if (Quantity != null)
                    hashCode = hashCode * 59 + Quantity.GetHashCode();
                    if (Rate != null)
                    hashCode = hashCode * 59 + Rate.GetHashCode();
                    if (RoleID != null)
                    hashCode = hashCode * 59 + RoleID.GetHashCode();
                    if (ServiceBundleID != null)
                    hashCode = hashCode * 59 + ServiceBundleID.GetHashCode();
                    if (ServiceID != null)
                    hashCode = hashCode * 59 + ServiceID.GetHashCode();
                    if (SortOrderID != null)
                    hashCode = hashCode * 59 + SortOrderID.GetHashCode();
                    if (SubType != null)
                    hashCode = hashCode * 59 + SubType.GetHashCode();
                    if (TaskID != null)
                    hashCode = hashCode * 59 + TaskID.GetHashCode();
                    if (TaxDollars != null)
                    hashCode = hashCode * 59 + TaxDollars.GetHashCode();
                    if (TicketChargeID != null)
                    hashCode = hashCode * 59 + TicketChargeID.GetHashCode();
                    if (TicketID != null)
                    hashCode = hashCode * 59 + TicketID.GetHashCode();
                    if (TimeEntryID != null)
                    hashCode = hashCode * 59 + TimeEntryID.GetHashCode();
                    if (TotalAmount != null)
                    hashCode = hashCode * 59 + TotalAmount.GetHashCode();
                    if (VendorID != null)
                    hashCode = hashCode * 59 + VendorID.GetHashCode();
                    if (WebServiceDate != null)
                    hashCode = hashCode * 59 + WebServiceDate.GetHashCode();
                    if (UserDefinedFields != null)
                    hashCode = hashCode * 59 + UserDefinedFields.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(BillingItemModel left, BillingItemModel right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(BillingItemModel left, BillingItemModel right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
