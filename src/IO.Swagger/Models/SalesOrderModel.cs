/*
 * Datto|Autotask PSA Rest API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class SalesOrderModel : IEquatable<SalesOrderModel>
    { 
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id")]
        public long? Id { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalBillToAddressInformation
        /// </summary>
        [DataMember(Name="additionalBillToAddressInformation")]
        public string AdditionalBillToAddressInformation { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalShipToAddressInformation
        /// </summary>
        [DataMember(Name="additionalShipToAddressInformation")]
        public string AdditionalShipToAddressInformation { get; set; }

        /// <summary>
        /// Gets or Sets BillingAddress1
        /// </summary>
        [DataMember(Name="billingAddress1")]
        public string BillingAddress1 { get; set; }

        /// <summary>
        /// Gets or Sets BillingAddress2
        /// </summary>
        [DataMember(Name="billingAddress2")]
        public string BillingAddress2 { get; set; }

        /// <summary>
        /// Gets or Sets BillToCity
        /// </summary>
        [DataMember(Name="billToCity")]
        public string BillToCity { get; set; }

        /// <summary>
        /// Gets or Sets BillToCountryID
        /// </summary>
        [DataMember(Name="billToCountryID")]
        public int? BillToCountryID { get; set; }

        /// <summary>
        /// Gets or Sets BillToPostalCode
        /// </summary>
        [DataMember(Name="billToPostalCode")]
        public string BillToPostalCode { get; set; }

        /// <summary>
        /// Gets or Sets BillToState
        /// </summary>
        [DataMember(Name="billToState")]
        public string BillToState { get; set; }

        /// <summary>
        /// Gets or Sets CompanyID
        /// </summary>
        [DataMember(Name="companyID")]
        public int? CompanyID { get; set; }

        /// <summary>
        /// Gets or Sets ContactID
        /// </summary>
        [DataMember(Name="contactID")]
        public int? ContactID { get; set; }

        /// <summary>
        /// Gets or Sets ImpersonatorCreatorResourceID
        /// </summary>
        [DataMember(Name="impersonatorCreatorResourceID")]
        public int? ImpersonatorCreatorResourceID { get; set; }

        /// <summary>
        /// Gets or Sets OpportunityID
        /// </summary>
        [DataMember(Name="opportunityID")]
        public int? OpportunityID { get; set; }

        /// <summary>
        /// Gets or Sets OrganizationalLevelAssociationID
        /// </summary>
        [DataMember(Name="organizationalLevelAssociationID")]
        public int? OrganizationalLevelAssociationID { get; set; }

        /// <summary>
        /// Gets or Sets OwnerResourceID
        /// </summary>
        [DataMember(Name="ownerResourceID")]
        public int? OwnerResourceID { get; set; }

        /// <summary>
        /// Gets or Sets PromisedFulfillmentDate
        /// </summary>
        [DataMember(Name="promisedFulfillmentDate")]
        public DateTime? PromisedFulfillmentDate { get; set; }

        /// <summary>
        /// Gets or Sets SalesOrderDate
        /// </summary>
        [DataMember(Name="salesOrderDate")]
        public DateTime? SalesOrderDate { get; set; }

        /// <summary>
        /// Gets or Sets ShipToAddress1
        /// </summary>
        [DataMember(Name="shipToAddress1")]
        public string ShipToAddress1 { get; set; }

        /// <summary>
        /// Gets or Sets ShipToAddress2
        /// </summary>
        [DataMember(Name="shipToAddress2")]
        public string ShipToAddress2 { get; set; }

        /// <summary>
        /// Gets or Sets ShipToCity
        /// </summary>
        [DataMember(Name="shipToCity")]
        public string ShipToCity { get; set; }

        /// <summary>
        /// Gets or Sets ShipToCountryID
        /// </summary>
        [DataMember(Name="shipToCountryID")]
        public int? ShipToCountryID { get; set; }

        /// <summary>
        /// Gets or Sets ShipToPostalCode
        /// </summary>
        [DataMember(Name="shipToPostalCode")]
        public string ShipToPostalCode { get; set; }

        /// <summary>
        /// Gets or Sets ShipToState
        /// </summary>
        [DataMember(Name="shipToState")]
        public string ShipToState { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status")]
        public int? Status { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name="title")]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets SoapParentPropertyId
        /// </summary>
        [DataMember(Name="soapParentPropertyId")]
        public ExpressionFuncSalesOrderInt64 SoapParentPropertyId { get; private set; }

        /// <summary>
        /// Gets or Sets UserDefinedFields
        /// </summary>
        [DataMember(Name="userDefinedFields")]
        public List<UserDefinedField> UserDefinedFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SalesOrderModel {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  AdditionalBillToAddressInformation: ").Append(AdditionalBillToAddressInformation).Append("\n");
            sb.Append("  AdditionalShipToAddressInformation: ").Append(AdditionalShipToAddressInformation).Append("\n");
            sb.Append("  BillingAddress1: ").Append(BillingAddress1).Append("\n");
            sb.Append("  BillingAddress2: ").Append(BillingAddress2).Append("\n");
            sb.Append("  BillToCity: ").Append(BillToCity).Append("\n");
            sb.Append("  BillToCountryID: ").Append(BillToCountryID).Append("\n");
            sb.Append("  BillToPostalCode: ").Append(BillToPostalCode).Append("\n");
            sb.Append("  BillToState: ").Append(BillToState).Append("\n");
            sb.Append("  CompanyID: ").Append(CompanyID).Append("\n");
            sb.Append("  ContactID: ").Append(ContactID).Append("\n");
            sb.Append("  ImpersonatorCreatorResourceID: ").Append(ImpersonatorCreatorResourceID).Append("\n");
            sb.Append("  OpportunityID: ").Append(OpportunityID).Append("\n");
            sb.Append("  OrganizationalLevelAssociationID: ").Append(OrganizationalLevelAssociationID).Append("\n");
            sb.Append("  OwnerResourceID: ").Append(OwnerResourceID).Append("\n");
            sb.Append("  PromisedFulfillmentDate: ").Append(PromisedFulfillmentDate).Append("\n");
            sb.Append("  SalesOrderDate: ").Append(SalesOrderDate).Append("\n");
            sb.Append("  ShipToAddress1: ").Append(ShipToAddress1).Append("\n");
            sb.Append("  ShipToAddress2: ").Append(ShipToAddress2).Append("\n");
            sb.Append("  ShipToCity: ").Append(ShipToCity).Append("\n");
            sb.Append("  ShipToCountryID: ").Append(ShipToCountryID).Append("\n");
            sb.Append("  ShipToPostalCode: ").Append(ShipToPostalCode).Append("\n");
            sb.Append("  ShipToState: ").Append(ShipToState).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  SoapParentPropertyId: ").Append(SoapParentPropertyId).Append("\n");
            sb.Append("  UserDefinedFields: ").Append(UserDefinedFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((SalesOrderModel)obj);
        }

        /// <summary>
        /// Returns true if SalesOrderModel instances are equal
        /// </summary>
        /// <param name="other">Instance of SalesOrderModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SalesOrderModel other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Id == other.Id ||
                    Id != null &&
                    Id.Equals(other.Id)
                ) && 
                (
                    AdditionalBillToAddressInformation == other.AdditionalBillToAddressInformation ||
                    AdditionalBillToAddressInformation != null &&
                    AdditionalBillToAddressInformation.Equals(other.AdditionalBillToAddressInformation)
                ) && 
                (
                    AdditionalShipToAddressInformation == other.AdditionalShipToAddressInformation ||
                    AdditionalShipToAddressInformation != null &&
                    AdditionalShipToAddressInformation.Equals(other.AdditionalShipToAddressInformation)
                ) && 
                (
                    BillingAddress1 == other.BillingAddress1 ||
                    BillingAddress1 != null &&
                    BillingAddress1.Equals(other.BillingAddress1)
                ) && 
                (
                    BillingAddress2 == other.BillingAddress2 ||
                    BillingAddress2 != null &&
                    BillingAddress2.Equals(other.BillingAddress2)
                ) && 
                (
                    BillToCity == other.BillToCity ||
                    BillToCity != null &&
                    BillToCity.Equals(other.BillToCity)
                ) && 
                (
                    BillToCountryID == other.BillToCountryID ||
                    BillToCountryID != null &&
                    BillToCountryID.Equals(other.BillToCountryID)
                ) && 
                (
                    BillToPostalCode == other.BillToPostalCode ||
                    BillToPostalCode != null &&
                    BillToPostalCode.Equals(other.BillToPostalCode)
                ) && 
                (
                    BillToState == other.BillToState ||
                    BillToState != null &&
                    BillToState.Equals(other.BillToState)
                ) && 
                (
                    CompanyID == other.CompanyID ||
                    CompanyID != null &&
                    CompanyID.Equals(other.CompanyID)
                ) && 
                (
                    ContactID == other.ContactID ||
                    ContactID != null &&
                    ContactID.Equals(other.ContactID)
                ) && 
                (
                    ImpersonatorCreatorResourceID == other.ImpersonatorCreatorResourceID ||
                    ImpersonatorCreatorResourceID != null &&
                    ImpersonatorCreatorResourceID.Equals(other.ImpersonatorCreatorResourceID)
                ) && 
                (
                    OpportunityID == other.OpportunityID ||
                    OpportunityID != null &&
                    OpportunityID.Equals(other.OpportunityID)
                ) && 
                (
                    OrganizationalLevelAssociationID == other.OrganizationalLevelAssociationID ||
                    OrganizationalLevelAssociationID != null &&
                    OrganizationalLevelAssociationID.Equals(other.OrganizationalLevelAssociationID)
                ) && 
                (
                    OwnerResourceID == other.OwnerResourceID ||
                    OwnerResourceID != null &&
                    OwnerResourceID.Equals(other.OwnerResourceID)
                ) && 
                (
                    PromisedFulfillmentDate == other.PromisedFulfillmentDate ||
                    PromisedFulfillmentDate != null &&
                    PromisedFulfillmentDate.Equals(other.PromisedFulfillmentDate)
                ) && 
                (
                    SalesOrderDate == other.SalesOrderDate ||
                    SalesOrderDate != null &&
                    SalesOrderDate.Equals(other.SalesOrderDate)
                ) && 
                (
                    ShipToAddress1 == other.ShipToAddress1 ||
                    ShipToAddress1 != null &&
                    ShipToAddress1.Equals(other.ShipToAddress1)
                ) && 
                (
                    ShipToAddress2 == other.ShipToAddress2 ||
                    ShipToAddress2 != null &&
                    ShipToAddress2.Equals(other.ShipToAddress2)
                ) && 
                (
                    ShipToCity == other.ShipToCity ||
                    ShipToCity != null &&
                    ShipToCity.Equals(other.ShipToCity)
                ) && 
                (
                    ShipToCountryID == other.ShipToCountryID ||
                    ShipToCountryID != null &&
                    ShipToCountryID.Equals(other.ShipToCountryID)
                ) && 
                (
                    ShipToPostalCode == other.ShipToPostalCode ||
                    ShipToPostalCode != null &&
                    ShipToPostalCode.Equals(other.ShipToPostalCode)
                ) && 
                (
                    ShipToState == other.ShipToState ||
                    ShipToState != null &&
                    ShipToState.Equals(other.ShipToState)
                ) && 
                (
                    Status == other.Status ||
                    Status != null &&
                    Status.Equals(other.Status)
                ) && 
                (
                    Title == other.Title ||
                    Title != null &&
                    Title.Equals(other.Title)
                ) && 
                (
                    SoapParentPropertyId == other.SoapParentPropertyId ||
                    SoapParentPropertyId != null &&
                    SoapParentPropertyId.Equals(other.SoapParentPropertyId)
                ) && 
                (
                    UserDefinedFields == other.UserDefinedFields ||
                    UserDefinedFields != null &&
                    UserDefinedFields.SequenceEqual(other.UserDefinedFields)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Id != null)
                    hashCode = hashCode * 59 + Id.GetHashCode();
                    if (AdditionalBillToAddressInformation != null)
                    hashCode = hashCode * 59 + AdditionalBillToAddressInformation.GetHashCode();
                    if (AdditionalShipToAddressInformation != null)
                    hashCode = hashCode * 59 + AdditionalShipToAddressInformation.GetHashCode();
                    if (BillingAddress1 != null)
                    hashCode = hashCode * 59 + BillingAddress1.GetHashCode();
                    if (BillingAddress2 != null)
                    hashCode = hashCode * 59 + BillingAddress2.GetHashCode();
                    if (BillToCity != null)
                    hashCode = hashCode * 59 + BillToCity.GetHashCode();
                    if (BillToCountryID != null)
                    hashCode = hashCode * 59 + BillToCountryID.GetHashCode();
                    if (BillToPostalCode != null)
                    hashCode = hashCode * 59 + BillToPostalCode.GetHashCode();
                    if (BillToState != null)
                    hashCode = hashCode * 59 + BillToState.GetHashCode();
                    if (CompanyID != null)
                    hashCode = hashCode * 59 + CompanyID.GetHashCode();
                    if (ContactID != null)
                    hashCode = hashCode * 59 + ContactID.GetHashCode();
                    if (ImpersonatorCreatorResourceID != null)
                    hashCode = hashCode * 59 + ImpersonatorCreatorResourceID.GetHashCode();
                    if (OpportunityID != null)
                    hashCode = hashCode * 59 + OpportunityID.GetHashCode();
                    if (OrganizationalLevelAssociationID != null)
                    hashCode = hashCode * 59 + OrganizationalLevelAssociationID.GetHashCode();
                    if (OwnerResourceID != null)
                    hashCode = hashCode * 59 + OwnerResourceID.GetHashCode();
                    if (PromisedFulfillmentDate != null)
                    hashCode = hashCode * 59 + PromisedFulfillmentDate.GetHashCode();
                    if (SalesOrderDate != null)
                    hashCode = hashCode * 59 + SalesOrderDate.GetHashCode();
                    if (ShipToAddress1 != null)
                    hashCode = hashCode * 59 + ShipToAddress1.GetHashCode();
                    if (ShipToAddress2 != null)
                    hashCode = hashCode * 59 + ShipToAddress2.GetHashCode();
                    if (ShipToCity != null)
                    hashCode = hashCode * 59 + ShipToCity.GetHashCode();
                    if (ShipToCountryID != null)
                    hashCode = hashCode * 59 + ShipToCountryID.GetHashCode();
                    if (ShipToPostalCode != null)
                    hashCode = hashCode * 59 + ShipToPostalCode.GetHashCode();
                    if (ShipToState != null)
                    hashCode = hashCode * 59 + ShipToState.GetHashCode();
                    if (Status != null)
                    hashCode = hashCode * 59 + Status.GetHashCode();
                    if (Title != null)
                    hashCode = hashCode * 59 + Title.GetHashCode();
                    if (SoapParentPropertyId != null)
                    hashCode = hashCode * 59 + SoapParentPropertyId.GetHashCode();
                    if (UserDefinedFields != null)
                    hashCode = hashCode * 59 + UserDefinedFields.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(SalesOrderModel left, SalesOrderModel right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(SalesOrderModel left, SalesOrderModel right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
