/*
 * Datto|Autotask PSA Rest API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class CompanyModel : IEquatable<CompanyModel>
    { 
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id")]
        public long? Id { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalAddressInformation
        /// </summary>
        [DataMember(Name="additionalAddressInformation")]
        public string AdditionalAddressInformation { get; set; }

        /// <summary>
        /// Gets or Sets Address1
        /// </summary>
        [DataMember(Name="address1")]
        public string Address1 { get; set; }

        /// <summary>
        /// Gets or Sets Address2
        /// </summary>
        [DataMember(Name="address2")]
        public string Address2 { get; set; }

        /// <summary>
        /// Gets or Sets AlternatePhone1
        /// </summary>
        [DataMember(Name="alternatePhone1")]
        public string AlternatePhone1 { get; set; }

        /// <summary>
        /// Gets or Sets AlternatePhone2
        /// </summary>
        [DataMember(Name="alternatePhone2")]
        public string AlternatePhone2 { get; set; }

        /// <summary>
        /// Gets or Sets ApiVendorID
        /// </summary>
        [DataMember(Name="apiVendorID")]
        public int? ApiVendorID { get; set; }

        /// <summary>
        /// Gets or Sets AssetValue
        /// </summary>
        [DataMember(Name="assetValue")]
        public double? AssetValue { get; set; }

        /// <summary>
        /// Gets or Sets BillToCompanyLocationID
        /// </summary>
        [DataMember(Name="billToCompanyLocationID")]
        public int? BillToCompanyLocationID { get; set; }

        /// <summary>
        /// Gets or Sets BillToAdditionalAddressInformation
        /// </summary>
        [DataMember(Name="billToAdditionalAddressInformation")]
        public string BillToAdditionalAddressInformation { get; set; }

        /// <summary>
        /// Gets or Sets BillingAddress1
        /// </summary>
        [DataMember(Name="billingAddress1")]
        public string BillingAddress1 { get; set; }

        /// <summary>
        /// Gets or Sets BillingAddress2
        /// </summary>
        [DataMember(Name="billingAddress2")]
        public string BillingAddress2 { get; set; }

        /// <summary>
        /// Gets or Sets BillToAddressToUse
        /// </summary>
        [DataMember(Name="billToAddressToUse")]
        public int? BillToAddressToUse { get; set; }

        /// <summary>
        /// Gets or Sets BillToAttention
        /// </summary>
        [DataMember(Name="billToAttention")]
        public string BillToAttention { get; set; }

        /// <summary>
        /// Gets or Sets BillToCity
        /// </summary>
        [DataMember(Name="billToCity")]
        public string BillToCity { get; set; }

        /// <summary>
        /// Gets or Sets BillToCountryID
        /// </summary>
        [DataMember(Name="billToCountryID")]
        public int? BillToCountryID { get; set; }

        /// <summary>
        /// Gets or Sets BillToState
        /// </summary>
        [DataMember(Name="billToState")]
        public string BillToState { get; set; }

        /// <summary>
        /// Gets or Sets BillToZipCode
        /// </summary>
        [DataMember(Name="billToZipCode")]
        public string BillToZipCode { get; set; }

        /// <summary>
        /// Gets or Sets City
        /// </summary>
        [DataMember(Name="city")]
        public string City { get; set; }

        /// <summary>
        /// Gets or Sets Classification
        /// </summary>
        [DataMember(Name="classification")]
        public int? Classification { get; set; }

        /// <summary>
        /// Gets or Sets CompanyName
        /// </summary>
        [DataMember(Name="companyName")]
        public string CompanyName { get; set; }

        /// <summary>
        /// Gets or Sets CompanyNumber
        /// </summary>
        [DataMember(Name="companyNumber")]
        public string CompanyNumber { get; set; }

        /// <summary>
        /// Gets or Sets CompanyType
        /// </summary>
        [DataMember(Name="companyType")]
        public int? CompanyType { get; set; }

        /// <summary>
        /// Gets or Sets CompetitorID
        /// </summary>
        [DataMember(Name="competitorID")]
        public int? CompetitorID { get; set; }

        /// <summary>
        /// Gets or Sets CountryID
        /// </summary>
        [DataMember(Name="countryID")]
        public int? CountryID { get; set; }

        /// <summary>
        /// Gets or Sets CreateDate
        /// </summary>
        [DataMember(Name="createDate")]
        public DateTime? CreateDate { get; set; }

        /// <summary>
        /// Gets or Sets CreatedByResourceID
        /// </summary>
        [DataMember(Name="createdByResourceID")]
        public int? CreatedByResourceID { get; set; }

        /// <summary>
        /// Gets or Sets CurrencyID
        /// </summary>
        [DataMember(Name="currencyID")]
        public int? CurrencyID { get; set; }

        /// <summary>
        /// Gets or Sets Fax
        /// </summary>
        [DataMember(Name="fax")]
        public string Fax { get; set; }

        /// <summary>
        /// Gets or Sets ImpersonatorCreatorResourceID
        /// </summary>
        [DataMember(Name="impersonatorCreatorResourceID")]
        public int? ImpersonatorCreatorResourceID { get; set; }

        /// <summary>
        /// Gets or Sets InvoiceEmailMessageID
        /// </summary>
        [DataMember(Name="invoiceEmailMessageID")]
        public int? InvoiceEmailMessageID { get; set; }

        /// <summary>
        /// Gets or Sets InvoiceMethod
        /// </summary>
        [DataMember(Name="invoiceMethod")]
        public int? InvoiceMethod { get; set; }

        /// <summary>
        /// Gets or Sets InvoiceNonContractItemsToParentCompany
        /// </summary>
        [DataMember(Name="invoiceNonContractItemsToParentCompany")]
        public bool? InvoiceNonContractItemsToParentCompany { get; set; }

        /// <summary>
        /// Gets or Sets InvoiceTemplateID
        /// </summary>
        [DataMember(Name="invoiceTemplateID")]
        public int? InvoiceTemplateID { get; set; }

        /// <summary>
        /// Gets or Sets IsActive
        /// </summary>
        [DataMember(Name="isActive")]
        public bool? IsActive { get; set; }

        /// <summary>
        /// Gets or Sets IsClientPortalActive
        /// </summary>
        [DataMember(Name="isClientPortalActive")]
        public bool? IsClientPortalActive { get; set; }

        /// <summary>
        /// Gets or Sets IsEnabledForComanaged
        /// </summary>
        [DataMember(Name="isEnabledForComanaged")]
        public bool? IsEnabledForComanaged { get; set; }

        /// <summary>
        /// Gets or Sets IsTaskFireActive
        /// </summary>
        [DataMember(Name="isTaskFireActive")]
        public bool? IsTaskFireActive { get; set; }

        /// <summary>
        /// Gets or Sets IsTaxExempt
        /// </summary>
        [DataMember(Name="isTaxExempt")]
        public bool? IsTaxExempt { get; set; }

        /// <summary>
        /// Gets or Sets LastActivityDate
        /// </summary>
        [DataMember(Name="lastActivityDate")]
        public DateTime? LastActivityDate { get; set; }

        /// <summary>
        /// Gets or Sets LastTrackedModifiedDateTime
        /// </summary>
        [DataMember(Name="lastTrackedModifiedDateTime")]
        public DateTime? LastTrackedModifiedDateTime { get; set; }

        /// <summary>
        /// Gets or Sets MarketSegmentID
        /// </summary>
        [DataMember(Name="marketSegmentID")]
        public int? MarketSegmentID { get; set; }

        /// <summary>
        /// Gets or Sets OwnerResourceID
        /// </summary>
        [DataMember(Name="ownerResourceID")]
        public int? OwnerResourceID { get; set; }

        /// <summary>
        /// Gets or Sets ParentCompanyID
        /// </summary>
        [DataMember(Name="parentCompanyID")]
        public int? ParentCompanyID { get; set; }

        /// <summary>
        /// Gets or Sets Phone
        /// </summary>
        [DataMember(Name="phone")]
        public string Phone { get; set; }

        /// <summary>
        /// Gets or Sets PostalCode
        /// </summary>
        [DataMember(Name="postalCode")]
        public string PostalCode { get; set; }

        /// <summary>
        /// Gets or Sets PurchaseOrderTemplateID
        /// </summary>
        [DataMember(Name="purchaseOrderTemplateID")]
        public int? PurchaseOrderTemplateID { get; set; }

        /// <summary>
        /// Gets or Sets QuoteEmailMessageID
        /// </summary>
        [DataMember(Name="quoteEmailMessageID")]
        public int? QuoteEmailMessageID { get; set; }

        /// <summary>
        /// Gets or Sets QuoteTemplateID
        /// </summary>
        [DataMember(Name="quoteTemplateID")]
        public int? QuoteTemplateID { get; set; }

        /// <summary>
        /// Gets or Sets SicCode
        /// </summary>
        [DataMember(Name="sicCode")]
        public string SicCode { get; set; }

        /// <summary>
        /// Gets or Sets State
        /// </summary>
        [DataMember(Name="state")]
        public string State { get; set; }

        /// <summary>
        /// Gets or Sets StockMarket
        /// </summary>
        [DataMember(Name="stockMarket")]
        public string StockMarket { get; set; }

        /// <summary>
        /// Gets or Sets StockSymbol
        /// </summary>
        [DataMember(Name="stockSymbol")]
        public string StockSymbol { get; set; }

        /// <summary>
        /// Gets or Sets SurveyCompanyRating
        /// </summary>
        [DataMember(Name="surveyCompanyRating")]
        public double? SurveyCompanyRating { get; set; }

        /// <summary>
        /// Gets or Sets TaxID
        /// </summary>
        [DataMember(Name="taxID")]
        public string TaxID { get; set; }

        /// <summary>
        /// Gets or Sets TaxRegionID
        /// </summary>
        [DataMember(Name="taxRegionID")]
        public int? TaxRegionID { get; set; }

        /// <summary>
        /// Gets or Sets TerritoryID
        /// </summary>
        [DataMember(Name="territoryID")]
        public int? TerritoryID { get; set; }

        /// <summary>
        /// Gets or Sets WebAddress
        /// </summary>
        [DataMember(Name="webAddress")]
        public string WebAddress { get; set; }

        /// <summary>
        /// Gets or Sets UserDefinedFields
        /// </summary>
        [DataMember(Name="userDefinedFields")]
        public List<UserDefinedField> UserDefinedFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CompanyModel {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  AdditionalAddressInformation: ").Append(AdditionalAddressInformation).Append("\n");
            sb.Append("  Address1: ").Append(Address1).Append("\n");
            sb.Append("  Address2: ").Append(Address2).Append("\n");
            sb.Append("  AlternatePhone1: ").Append(AlternatePhone1).Append("\n");
            sb.Append("  AlternatePhone2: ").Append(AlternatePhone2).Append("\n");
            sb.Append("  ApiVendorID: ").Append(ApiVendorID).Append("\n");
            sb.Append("  AssetValue: ").Append(AssetValue).Append("\n");
            sb.Append("  BillToCompanyLocationID: ").Append(BillToCompanyLocationID).Append("\n");
            sb.Append("  BillToAdditionalAddressInformation: ").Append(BillToAdditionalAddressInformation).Append("\n");
            sb.Append("  BillingAddress1: ").Append(BillingAddress1).Append("\n");
            sb.Append("  BillingAddress2: ").Append(BillingAddress2).Append("\n");
            sb.Append("  BillToAddressToUse: ").Append(BillToAddressToUse).Append("\n");
            sb.Append("  BillToAttention: ").Append(BillToAttention).Append("\n");
            sb.Append("  BillToCity: ").Append(BillToCity).Append("\n");
            sb.Append("  BillToCountryID: ").Append(BillToCountryID).Append("\n");
            sb.Append("  BillToState: ").Append(BillToState).Append("\n");
            sb.Append("  BillToZipCode: ").Append(BillToZipCode).Append("\n");
            sb.Append("  City: ").Append(City).Append("\n");
            sb.Append("  Classification: ").Append(Classification).Append("\n");
            sb.Append("  CompanyName: ").Append(CompanyName).Append("\n");
            sb.Append("  CompanyNumber: ").Append(CompanyNumber).Append("\n");
            sb.Append("  CompanyType: ").Append(CompanyType).Append("\n");
            sb.Append("  CompetitorID: ").Append(CompetitorID).Append("\n");
            sb.Append("  CountryID: ").Append(CountryID).Append("\n");
            sb.Append("  CreateDate: ").Append(CreateDate).Append("\n");
            sb.Append("  CreatedByResourceID: ").Append(CreatedByResourceID).Append("\n");
            sb.Append("  CurrencyID: ").Append(CurrencyID).Append("\n");
            sb.Append("  Fax: ").Append(Fax).Append("\n");
            sb.Append("  ImpersonatorCreatorResourceID: ").Append(ImpersonatorCreatorResourceID).Append("\n");
            sb.Append("  InvoiceEmailMessageID: ").Append(InvoiceEmailMessageID).Append("\n");
            sb.Append("  InvoiceMethod: ").Append(InvoiceMethod).Append("\n");
            sb.Append("  InvoiceNonContractItemsToParentCompany: ").Append(InvoiceNonContractItemsToParentCompany).Append("\n");
            sb.Append("  InvoiceTemplateID: ").Append(InvoiceTemplateID).Append("\n");
            sb.Append("  IsActive: ").Append(IsActive).Append("\n");
            sb.Append("  IsClientPortalActive: ").Append(IsClientPortalActive).Append("\n");
            sb.Append("  IsEnabledForComanaged: ").Append(IsEnabledForComanaged).Append("\n");
            sb.Append("  IsTaskFireActive: ").Append(IsTaskFireActive).Append("\n");
            sb.Append("  IsTaxExempt: ").Append(IsTaxExempt).Append("\n");
            sb.Append("  LastActivityDate: ").Append(LastActivityDate).Append("\n");
            sb.Append("  LastTrackedModifiedDateTime: ").Append(LastTrackedModifiedDateTime).Append("\n");
            sb.Append("  MarketSegmentID: ").Append(MarketSegmentID).Append("\n");
            sb.Append("  OwnerResourceID: ").Append(OwnerResourceID).Append("\n");
            sb.Append("  ParentCompanyID: ").Append(ParentCompanyID).Append("\n");
            sb.Append("  Phone: ").Append(Phone).Append("\n");
            sb.Append("  PostalCode: ").Append(PostalCode).Append("\n");
            sb.Append("  PurchaseOrderTemplateID: ").Append(PurchaseOrderTemplateID).Append("\n");
            sb.Append("  QuoteEmailMessageID: ").Append(QuoteEmailMessageID).Append("\n");
            sb.Append("  QuoteTemplateID: ").Append(QuoteTemplateID).Append("\n");
            sb.Append("  SicCode: ").Append(SicCode).Append("\n");
            sb.Append("  State: ").Append(State).Append("\n");
            sb.Append("  StockMarket: ").Append(StockMarket).Append("\n");
            sb.Append("  StockSymbol: ").Append(StockSymbol).Append("\n");
            sb.Append("  SurveyCompanyRating: ").Append(SurveyCompanyRating).Append("\n");
            sb.Append("  TaxID: ").Append(TaxID).Append("\n");
            sb.Append("  TaxRegionID: ").Append(TaxRegionID).Append("\n");
            sb.Append("  TerritoryID: ").Append(TerritoryID).Append("\n");
            sb.Append("  WebAddress: ").Append(WebAddress).Append("\n");
            sb.Append("  UserDefinedFields: ").Append(UserDefinedFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((CompanyModel)obj);
        }

        /// <summary>
        /// Returns true if CompanyModel instances are equal
        /// </summary>
        /// <param name="other">Instance of CompanyModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CompanyModel other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Id == other.Id ||
                    Id != null &&
                    Id.Equals(other.Id)
                ) && 
                (
                    AdditionalAddressInformation == other.AdditionalAddressInformation ||
                    AdditionalAddressInformation != null &&
                    AdditionalAddressInformation.Equals(other.AdditionalAddressInformation)
                ) && 
                (
                    Address1 == other.Address1 ||
                    Address1 != null &&
                    Address1.Equals(other.Address1)
                ) && 
                (
                    Address2 == other.Address2 ||
                    Address2 != null &&
                    Address2.Equals(other.Address2)
                ) && 
                (
                    AlternatePhone1 == other.AlternatePhone1 ||
                    AlternatePhone1 != null &&
                    AlternatePhone1.Equals(other.AlternatePhone1)
                ) && 
                (
                    AlternatePhone2 == other.AlternatePhone2 ||
                    AlternatePhone2 != null &&
                    AlternatePhone2.Equals(other.AlternatePhone2)
                ) && 
                (
                    ApiVendorID == other.ApiVendorID ||
                    ApiVendorID != null &&
                    ApiVendorID.Equals(other.ApiVendorID)
                ) && 
                (
                    AssetValue == other.AssetValue ||
                    AssetValue != null &&
                    AssetValue.Equals(other.AssetValue)
                ) && 
                (
                    BillToCompanyLocationID == other.BillToCompanyLocationID ||
                    BillToCompanyLocationID != null &&
                    BillToCompanyLocationID.Equals(other.BillToCompanyLocationID)
                ) && 
                (
                    BillToAdditionalAddressInformation == other.BillToAdditionalAddressInformation ||
                    BillToAdditionalAddressInformation != null &&
                    BillToAdditionalAddressInformation.Equals(other.BillToAdditionalAddressInformation)
                ) && 
                (
                    BillingAddress1 == other.BillingAddress1 ||
                    BillingAddress1 != null &&
                    BillingAddress1.Equals(other.BillingAddress1)
                ) && 
                (
                    BillingAddress2 == other.BillingAddress2 ||
                    BillingAddress2 != null &&
                    BillingAddress2.Equals(other.BillingAddress2)
                ) && 
                (
                    BillToAddressToUse == other.BillToAddressToUse ||
                    BillToAddressToUse != null &&
                    BillToAddressToUse.Equals(other.BillToAddressToUse)
                ) && 
                (
                    BillToAttention == other.BillToAttention ||
                    BillToAttention != null &&
                    BillToAttention.Equals(other.BillToAttention)
                ) && 
                (
                    BillToCity == other.BillToCity ||
                    BillToCity != null &&
                    BillToCity.Equals(other.BillToCity)
                ) && 
                (
                    BillToCountryID == other.BillToCountryID ||
                    BillToCountryID != null &&
                    BillToCountryID.Equals(other.BillToCountryID)
                ) && 
                (
                    BillToState == other.BillToState ||
                    BillToState != null &&
                    BillToState.Equals(other.BillToState)
                ) && 
                (
                    BillToZipCode == other.BillToZipCode ||
                    BillToZipCode != null &&
                    BillToZipCode.Equals(other.BillToZipCode)
                ) && 
                (
                    City == other.City ||
                    City != null &&
                    City.Equals(other.City)
                ) && 
                (
                    Classification == other.Classification ||
                    Classification != null &&
                    Classification.Equals(other.Classification)
                ) && 
                (
                    CompanyName == other.CompanyName ||
                    CompanyName != null &&
                    CompanyName.Equals(other.CompanyName)
                ) && 
                (
                    CompanyNumber == other.CompanyNumber ||
                    CompanyNumber != null &&
                    CompanyNumber.Equals(other.CompanyNumber)
                ) && 
                (
                    CompanyType == other.CompanyType ||
                    CompanyType != null &&
                    CompanyType.Equals(other.CompanyType)
                ) && 
                (
                    CompetitorID == other.CompetitorID ||
                    CompetitorID != null &&
                    CompetitorID.Equals(other.CompetitorID)
                ) && 
                (
                    CountryID == other.CountryID ||
                    CountryID != null &&
                    CountryID.Equals(other.CountryID)
                ) && 
                (
                    CreateDate == other.CreateDate ||
                    CreateDate != null &&
                    CreateDate.Equals(other.CreateDate)
                ) && 
                (
                    CreatedByResourceID == other.CreatedByResourceID ||
                    CreatedByResourceID != null &&
                    CreatedByResourceID.Equals(other.CreatedByResourceID)
                ) && 
                (
                    CurrencyID == other.CurrencyID ||
                    CurrencyID != null &&
                    CurrencyID.Equals(other.CurrencyID)
                ) && 
                (
                    Fax == other.Fax ||
                    Fax != null &&
                    Fax.Equals(other.Fax)
                ) && 
                (
                    ImpersonatorCreatorResourceID == other.ImpersonatorCreatorResourceID ||
                    ImpersonatorCreatorResourceID != null &&
                    ImpersonatorCreatorResourceID.Equals(other.ImpersonatorCreatorResourceID)
                ) && 
                (
                    InvoiceEmailMessageID == other.InvoiceEmailMessageID ||
                    InvoiceEmailMessageID != null &&
                    InvoiceEmailMessageID.Equals(other.InvoiceEmailMessageID)
                ) && 
                (
                    InvoiceMethod == other.InvoiceMethod ||
                    InvoiceMethod != null &&
                    InvoiceMethod.Equals(other.InvoiceMethod)
                ) && 
                (
                    InvoiceNonContractItemsToParentCompany == other.InvoiceNonContractItemsToParentCompany ||
                    InvoiceNonContractItemsToParentCompany != null &&
                    InvoiceNonContractItemsToParentCompany.Equals(other.InvoiceNonContractItemsToParentCompany)
                ) && 
                (
                    InvoiceTemplateID == other.InvoiceTemplateID ||
                    InvoiceTemplateID != null &&
                    InvoiceTemplateID.Equals(other.InvoiceTemplateID)
                ) && 
                (
                    IsActive == other.IsActive ||
                    IsActive != null &&
                    IsActive.Equals(other.IsActive)
                ) && 
                (
                    IsClientPortalActive == other.IsClientPortalActive ||
                    IsClientPortalActive != null &&
                    IsClientPortalActive.Equals(other.IsClientPortalActive)
                ) && 
                (
                    IsEnabledForComanaged == other.IsEnabledForComanaged ||
                    IsEnabledForComanaged != null &&
                    IsEnabledForComanaged.Equals(other.IsEnabledForComanaged)
                ) && 
                (
                    IsTaskFireActive == other.IsTaskFireActive ||
                    IsTaskFireActive != null &&
                    IsTaskFireActive.Equals(other.IsTaskFireActive)
                ) && 
                (
                    IsTaxExempt == other.IsTaxExempt ||
                    IsTaxExempt != null &&
                    IsTaxExempt.Equals(other.IsTaxExempt)
                ) && 
                (
                    LastActivityDate == other.LastActivityDate ||
                    LastActivityDate != null &&
                    LastActivityDate.Equals(other.LastActivityDate)
                ) && 
                (
                    LastTrackedModifiedDateTime == other.LastTrackedModifiedDateTime ||
                    LastTrackedModifiedDateTime != null &&
                    LastTrackedModifiedDateTime.Equals(other.LastTrackedModifiedDateTime)
                ) && 
                (
                    MarketSegmentID == other.MarketSegmentID ||
                    MarketSegmentID != null &&
                    MarketSegmentID.Equals(other.MarketSegmentID)
                ) && 
                (
                    OwnerResourceID == other.OwnerResourceID ||
                    OwnerResourceID != null &&
                    OwnerResourceID.Equals(other.OwnerResourceID)
                ) && 
                (
                    ParentCompanyID == other.ParentCompanyID ||
                    ParentCompanyID != null &&
                    ParentCompanyID.Equals(other.ParentCompanyID)
                ) && 
                (
                    Phone == other.Phone ||
                    Phone != null &&
                    Phone.Equals(other.Phone)
                ) && 
                (
                    PostalCode == other.PostalCode ||
                    PostalCode != null &&
                    PostalCode.Equals(other.PostalCode)
                ) && 
                (
                    PurchaseOrderTemplateID == other.PurchaseOrderTemplateID ||
                    PurchaseOrderTemplateID != null &&
                    PurchaseOrderTemplateID.Equals(other.PurchaseOrderTemplateID)
                ) && 
                (
                    QuoteEmailMessageID == other.QuoteEmailMessageID ||
                    QuoteEmailMessageID != null &&
                    QuoteEmailMessageID.Equals(other.QuoteEmailMessageID)
                ) && 
                (
                    QuoteTemplateID == other.QuoteTemplateID ||
                    QuoteTemplateID != null &&
                    QuoteTemplateID.Equals(other.QuoteTemplateID)
                ) && 
                (
                    SicCode == other.SicCode ||
                    SicCode != null &&
                    SicCode.Equals(other.SicCode)
                ) && 
                (
                    State == other.State ||
                    State != null &&
                    State.Equals(other.State)
                ) && 
                (
                    StockMarket == other.StockMarket ||
                    StockMarket != null &&
                    StockMarket.Equals(other.StockMarket)
                ) && 
                (
                    StockSymbol == other.StockSymbol ||
                    StockSymbol != null &&
                    StockSymbol.Equals(other.StockSymbol)
                ) && 
                (
                    SurveyCompanyRating == other.SurveyCompanyRating ||
                    SurveyCompanyRating != null &&
                    SurveyCompanyRating.Equals(other.SurveyCompanyRating)
                ) && 
                (
                    TaxID == other.TaxID ||
                    TaxID != null &&
                    TaxID.Equals(other.TaxID)
                ) && 
                (
                    TaxRegionID == other.TaxRegionID ||
                    TaxRegionID != null &&
                    TaxRegionID.Equals(other.TaxRegionID)
                ) && 
                (
                    TerritoryID == other.TerritoryID ||
                    TerritoryID != null &&
                    TerritoryID.Equals(other.TerritoryID)
                ) && 
                (
                    WebAddress == other.WebAddress ||
                    WebAddress != null &&
                    WebAddress.Equals(other.WebAddress)
                ) && 
                (
                    UserDefinedFields == other.UserDefinedFields ||
                    UserDefinedFields != null &&
                    UserDefinedFields.SequenceEqual(other.UserDefinedFields)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Id != null)
                    hashCode = hashCode * 59 + Id.GetHashCode();
                    if (AdditionalAddressInformation != null)
                    hashCode = hashCode * 59 + AdditionalAddressInformation.GetHashCode();
                    if (Address1 != null)
                    hashCode = hashCode * 59 + Address1.GetHashCode();
                    if (Address2 != null)
                    hashCode = hashCode * 59 + Address2.GetHashCode();
                    if (AlternatePhone1 != null)
                    hashCode = hashCode * 59 + AlternatePhone1.GetHashCode();
                    if (AlternatePhone2 != null)
                    hashCode = hashCode * 59 + AlternatePhone2.GetHashCode();
                    if (ApiVendorID != null)
                    hashCode = hashCode * 59 + ApiVendorID.GetHashCode();
                    if (AssetValue != null)
                    hashCode = hashCode * 59 + AssetValue.GetHashCode();
                    if (BillToCompanyLocationID != null)
                    hashCode = hashCode * 59 + BillToCompanyLocationID.GetHashCode();
                    if (BillToAdditionalAddressInformation != null)
                    hashCode = hashCode * 59 + BillToAdditionalAddressInformation.GetHashCode();
                    if (BillingAddress1 != null)
                    hashCode = hashCode * 59 + BillingAddress1.GetHashCode();
                    if (BillingAddress2 != null)
                    hashCode = hashCode * 59 + BillingAddress2.GetHashCode();
                    if (BillToAddressToUse != null)
                    hashCode = hashCode * 59 + BillToAddressToUse.GetHashCode();
                    if (BillToAttention != null)
                    hashCode = hashCode * 59 + BillToAttention.GetHashCode();
                    if (BillToCity != null)
                    hashCode = hashCode * 59 + BillToCity.GetHashCode();
                    if (BillToCountryID != null)
                    hashCode = hashCode * 59 + BillToCountryID.GetHashCode();
                    if (BillToState != null)
                    hashCode = hashCode * 59 + BillToState.GetHashCode();
                    if (BillToZipCode != null)
                    hashCode = hashCode * 59 + BillToZipCode.GetHashCode();
                    if (City != null)
                    hashCode = hashCode * 59 + City.GetHashCode();
                    if (Classification != null)
                    hashCode = hashCode * 59 + Classification.GetHashCode();
                    if (CompanyName != null)
                    hashCode = hashCode * 59 + CompanyName.GetHashCode();
                    if (CompanyNumber != null)
                    hashCode = hashCode * 59 + CompanyNumber.GetHashCode();
                    if (CompanyType != null)
                    hashCode = hashCode * 59 + CompanyType.GetHashCode();
                    if (CompetitorID != null)
                    hashCode = hashCode * 59 + CompetitorID.GetHashCode();
                    if (CountryID != null)
                    hashCode = hashCode * 59 + CountryID.GetHashCode();
                    if (CreateDate != null)
                    hashCode = hashCode * 59 + CreateDate.GetHashCode();
                    if (CreatedByResourceID != null)
                    hashCode = hashCode * 59 + CreatedByResourceID.GetHashCode();
                    if (CurrencyID != null)
                    hashCode = hashCode * 59 + CurrencyID.GetHashCode();
                    if (Fax != null)
                    hashCode = hashCode * 59 + Fax.GetHashCode();
                    if (ImpersonatorCreatorResourceID != null)
                    hashCode = hashCode * 59 + ImpersonatorCreatorResourceID.GetHashCode();
                    if (InvoiceEmailMessageID != null)
                    hashCode = hashCode * 59 + InvoiceEmailMessageID.GetHashCode();
                    if (InvoiceMethod != null)
                    hashCode = hashCode * 59 + InvoiceMethod.GetHashCode();
                    if (InvoiceNonContractItemsToParentCompany != null)
                    hashCode = hashCode * 59 + InvoiceNonContractItemsToParentCompany.GetHashCode();
                    if (InvoiceTemplateID != null)
                    hashCode = hashCode * 59 + InvoiceTemplateID.GetHashCode();
                    if (IsActive != null)
                    hashCode = hashCode * 59 + IsActive.GetHashCode();
                    if (IsClientPortalActive != null)
                    hashCode = hashCode * 59 + IsClientPortalActive.GetHashCode();
                    if (IsEnabledForComanaged != null)
                    hashCode = hashCode * 59 + IsEnabledForComanaged.GetHashCode();
                    if (IsTaskFireActive != null)
                    hashCode = hashCode * 59 + IsTaskFireActive.GetHashCode();
                    if (IsTaxExempt != null)
                    hashCode = hashCode * 59 + IsTaxExempt.GetHashCode();
                    if (LastActivityDate != null)
                    hashCode = hashCode * 59 + LastActivityDate.GetHashCode();
                    if (LastTrackedModifiedDateTime != null)
                    hashCode = hashCode * 59 + LastTrackedModifiedDateTime.GetHashCode();
                    if (MarketSegmentID != null)
                    hashCode = hashCode * 59 + MarketSegmentID.GetHashCode();
                    if (OwnerResourceID != null)
                    hashCode = hashCode * 59 + OwnerResourceID.GetHashCode();
                    if (ParentCompanyID != null)
                    hashCode = hashCode * 59 + ParentCompanyID.GetHashCode();
                    if (Phone != null)
                    hashCode = hashCode * 59 + Phone.GetHashCode();
                    if (PostalCode != null)
                    hashCode = hashCode * 59 + PostalCode.GetHashCode();
                    if (PurchaseOrderTemplateID != null)
                    hashCode = hashCode * 59 + PurchaseOrderTemplateID.GetHashCode();
                    if (QuoteEmailMessageID != null)
                    hashCode = hashCode * 59 + QuoteEmailMessageID.GetHashCode();
                    if (QuoteTemplateID != null)
                    hashCode = hashCode * 59 + QuoteTemplateID.GetHashCode();
                    if (SicCode != null)
                    hashCode = hashCode * 59 + SicCode.GetHashCode();
                    if (State != null)
                    hashCode = hashCode * 59 + State.GetHashCode();
                    if (StockMarket != null)
                    hashCode = hashCode * 59 + StockMarket.GetHashCode();
                    if (StockSymbol != null)
                    hashCode = hashCode * 59 + StockSymbol.GetHashCode();
                    if (SurveyCompanyRating != null)
                    hashCode = hashCode * 59 + SurveyCompanyRating.GetHashCode();
                    if (TaxID != null)
                    hashCode = hashCode * 59 + TaxID.GetHashCode();
                    if (TaxRegionID != null)
                    hashCode = hashCode * 59 + TaxRegionID.GetHashCode();
                    if (TerritoryID != null)
                    hashCode = hashCode * 59 + TerritoryID.GetHashCode();
                    if (WebAddress != null)
                    hashCode = hashCode * 59 + WebAddress.GetHashCode();
                    if (UserDefinedFields != null)
                    hashCode = hashCode * 59 + UserDefinedFields.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(CompanyModel left, CompanyModel right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(CompanyModel left, CompanyModel right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
