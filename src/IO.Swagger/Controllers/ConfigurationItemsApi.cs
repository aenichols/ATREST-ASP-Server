/*
 * Datto|Autotask PSA Rest API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;

using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ConfigurationItemsApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="restModelInput"></param>
        /// <param name="apiIntegrationCode">API Integration Code</param>
        /// <param name="userName">User Name</param>
        /// <param name="secret">Secret</param>
        /// <param name="impersonationResourceId">Impersonation Resource Key</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpPost]
        [Route("/ATServicesRest/V1.0/ConfigurationItems")]
        [ValidateModelState]
        [SwaggerOperation("ConfigurationItemsCreateEntity")]
        [SwaggerResponse(statusCode: 200, type: typeof(OperationResultModel), description: "OK")]
        public virtual IActionResult ConfigurationItemsCreateEntity([FromBody]ConfigurationItemModel restModelInput, [FromHeader][Required()]string apiIntegrationCode, [FromHeader][Required()]string userName, [FromHeader][Required()]string secret, [FromHeader]string impersonationResourceId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(OperationResultModel));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            string exampleJson = null;
            exampleJson = "{\n  \"itemId\" : { }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<OperationResultModel>(exampleJson)
            : default(OperationResultModel);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="restModelInput"></param>
        /// <param name="apiIntegrationCode">API Integration Code</param>
        /// <param name="userName">User Name</param>
        /// <param name="secret">Secret</param>
        /// <param name="impersonationResourceId">Impersonation Resource Key</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpPatch]
        [Route("/ATServicesRest/V1.0/ConfigurationItems")]
        [ValidateModelState]
        [SwaggerOperation("ConfigurationItemsPatchEntity")]
        [SwaggerResponse(statusCode: 200, type: typeof(OperationResultModel), description: "OK")]
        public virtual IActionResult ConfigurationItemsPatchEntity([FromBody]ConfigurationItemModel restModelInput, [FromHeader][Required()]string apiIntegrationCode, [FromHeader][Required()]string userName, [FromHeader][Required()]string secret, [FromHeader]string impersonationResourceId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(OperationResultModel));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            string exampleJson = null;
            exampleJson = "{\n  \"itemId\" : { }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<OperationResultModel>(exampleJson)
            : default(OperationResultModel);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="queryModel"></param>
        /// <param name="apiIntegrationCode">API Integration Code</param>
        /// <param name="userName">User Name</param>
        /// <param name="secret">Secret</param>
        /// <param name="impersonationResourceId">Impersonation Resource Key</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpPost]
        [Route("/ATServicesRest/V1.0/ConfigurationItems/query")]
        [ValidateModelState]
        [SwaggerOperation("ConfigurationItemsQuery")]
        [SwaggerResponse(statusCode: 200, type: typeof(QueryActionResultConfigurationItemModelInstalledProduct), description: "OK")]
        public virtual IActionResult ConfigurationItemsQuery([FromBody]QueryModel queryModel, [FromHeader][Required()]string apiIntegrationCode, [FromHeader][Required()]string userName, [FromHeader][Required()]string secret, [FromHeader]string impersonationResourceId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(QueryActionResultConfigurationItemModelInstalledProduct));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            string exampleJson = null;
            exampleJson = "{\n  \"pageDetails\" : {\n    \"requestCount\" : 5,\n    \"nextPageUrl\" : \"nextPageUrl\",\n    \"count\" : 1,\n    \"prevPageUrl\" : \"prevPageUrl\"\n  },\n  \"items\" : [ {\n    \"rmmDeviceAuditManufacturerID\" : 3,\n    \"serviceLevelAgreementID\" : 0,\n    \"dattoRemoteIP\" : \"dattoRemoteIP\",\n    \"productID\" : 0,\n    \"dattoNumberOfVolumes\" : 4,\n    \"rmmDeviceAuditDeviceTypeID\" : 4,\n    \"rmmDeviceAuditMemoryBytes\" : 3,\n    \"dattoProtectedKilobytes\" : 6,\n    \"referenceNumber\" : \"referenceNumber\",\n    \"dailyCost\" : 7.386281948385884,\n    \"id\" : 0,\n    \"rmmDeviceUID\" : \"rmmDeviceUID\",\n    \"lastActivityPersonID\" : 6,\n    \"apiVendorID\" : 6,\n    \"sslLocation\" : \"sslLocation\",\n    \"dattoOSVersionID\" : 9,\n    \"sslValidFromDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"rmmDeviceAuditMobileNumber\" : \"rmmDeviceAuditMobileNumber\",\n    \"rmmDeviceAuditDescription\" : \"rmmDeviceAuditDescription\",\n    \"rmmDeviceAuditMotherboardID\" : 4,\n    \"rmmOpenAlertCount\" : 9,\n    \"sourceChargeType\" : 4,\n    \"userDefinedFields\" : [ {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    }, {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    } ],\n    \"rmmDeviceAuditProcessorID\" : 6,\n    \"domain\" : \"domain\",\n    \"createdByPersonID\" : 4,\n    \"rmmDeviceAuditOperatingSystem\" : \"rmmDeviceAuditOperatingSystem\",\n    \"lastActivityPersonType\" : 5,\n    \"monthlyCost\" : 6.704019297950036,\n    \"dattoNumberOfAgents\" : 7,\n    \"impersonatorCreatorResourceID\" : 1,\n    \"rmmDeviceAuditSNMPContact\" : \"rmmDeviceAuditSNMPContact\",\n    \"contactID\" : 7,\n    \"domainExpirationDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"sslSignatureAlgorithm\" : \"sslSignatureAlgorithm\",\n    \"configurationItemType\" : 2,\n    \"rmmDeviceAuditHostname\" : \"rmmDeviceAuditHostname\",\n    \"dattoDeviceMemoryMegabytes\" : 1,\n    \"installedByID\" : 6,\n    \"rmmDeviceAuditStorageBytes\" : 4,\n    \"installDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"sslValidUntilDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"dattoInternalIP\" : \"dattoInternalIP\",\n    \"sourceChargeID\" : 5,\n    \"setupFee\" : 7.933506881737151,\n    \"deviceNetworkingID\" : \"deviceNetworkingID\",\n    \"rmmDeviceAuditServicePackID\" : 4,\n    \"createDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"rmmDeviceAuditBackupStatusID\" : 0,\n    \"rmmDeviceAuditIPAddress\" : \"rmmDeviceAuditIPAddress\",\n    \"rmmDeviceAuditSoftwareStatusID\" : 1,\n    \"contractServiceID\" : 2,\n    \"vendorID\" : 6,\n    \"contractServiceBundleID\" : 3,\n    \"rmmDeviceAuditExternalIPAddress\" : \"rmmDeviceAuditExternalIPAddress\",\n    \"rmmDeviceAuditDisplayAdaptorID\" : 8,\n    \"rmmDeviceAuditAntivirusStatusID\" : 7,\n    \"domainRegistrarID\" : 3,\n    \"rmmDeviceAuditArchitectureID\" : 6,\n    \"parentConfigurationItemID\" : 3,\n    \"rmmDeviceAuditLastUser\" : \"rmmDeviceAuditLastUser\",\n    \"notes\" : \"notes\",\n    \"isActive\" : true,\n    \"rmmDeviceAuditPatchStatusID\" : 0,\n    \"companyID\" : 5,\n    \"warrantyExpirationDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"rmmDeviceID\" : 7,\n    \"sslIssuedBy\" : \"sslIssuedBy\",\n    \"contractID\" : 9,\n    \"rmmDeviceAuditModelID\" : 3,\n    \"serialNumber\" : \"serialNumber\",\n    \"dattoHostname\" : \"dattoHostname\",\n    \"dattoLastCheckInDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"domainRegistrationDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"rmmDeviceAuditMacAddress\" : \"rmmDeviceAuditMacAddress\",\n    \"dattoAvailableKilobytes\" : 1,\n    \"sslSource\" : \"sslSource\",\n    \"configurationItemCategoryID\" : 1,\n    \"rmmDeviceAuditSNMPLocation\" : \"rmmDeviceAuditSNMPLocation\",\n    \"companyLocationID\" : 5,\n    \"lastModifiedTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"rmmDeviceAuditMissingPatchCount\" : 7,\n    \"rmmDeviceAuditDomainID\" : 7,\n    \"sslSerialNumber\" : \"sslSerialNumber\",\n    \"dattoNICSpeedKilobitsPerSecond\" : 6,\n    \"sslCommonName\" : \"sslCommonName\",\n    \"perUseCost\" : 7.143538047012306,\n    \"dattoOffsiteUsedBytes\" : 5,\n    \"numberOfUsers\" : 3.353193347011243,\n    \"sslOrganization\" : \"sslOrganization\",\n    \"domainLastUpdatedDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"hourlyCost\" : 6.965117697638846,\n    \"dattoKernelVersionID\" : 1,\n    \"serviceBundleID\" : 0,\n    \"dattoPercentageUsed\" : 9.369310271410669,\n    \"dattoNumberOfDrives\" : 1,\n    \"rmmDeviceAuditMobileNetworkOperatorID\" : 5,\n    \"dattoZFSVersionID\" : 6,\n    \"dattoUptimeSeconds\" : 8,\n    \"dattoUsedKilobytes\" : 9,\n    \"dattoSerialNumber\" : \"dattoSerialNumber\",\n    \"dattoDrivesErrors\" : true,\n    \"referenceTitle\" : \"referenceTitle\",\n    \"installedByContactID\" : 2,\n    \"location\" : \"location\",\n    \"rmmDeviceAuditSNMPName\" : \"rmmDeviceAuditSNMPName\",\n    \"serviceID\" : 9,\n    \"sslOrganizationUnit\" : \"sslOrganizationUnit\"\n  }, {\n    \"rmmDeviceAuditManufacturerID\" : 3,\n    \"serviceLevelAgreementID\" : 0,\n    \"dattoRemoteIP\" : \"dattoRemoteIP\",\n    \"productID\" : 0,\n    \"dattoNumberOfVolumes\" : 4,\n    \"rmmDeviceAuditDeviceTypeID\" : 4,\n    \"rmmDeviceAuditMemoryBytes\" : 3,\n    \"dattoProtectedKilobytes\" : 6,\n    \"referenceNumber\" : \"referenceNumber\",\n    \"dailyCost\" : 7.386281948385884,\n    \"id\" : 0,\n    \"rmmDeviceUID\" : \"rmmDeviceUID\",\n    \"lastActivityPersonID\" : 6,\n    \"apiVendorID\" : 6,\n    \"sslLocation\" : \"sslLocation\",\n    \"dattoOSVersionID\" : 9,\n    \"sslValidFromDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"rmmDeviceAuditMobileNumber\" : \"rmmDeviceAuditMobileNumber\",\n    \"rmmDeviceAuditDescription\" : \"rmmDeviceAuditDescription\",\n    \"rmmDeviceAuditMotherboardID\" : 4,\n    \"rmmOpenAlertCount\" : 9,\n    \"sourceChargeType\" : 4,\n    \"userDefinedFields\" : [ {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    }, {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    } ],\n    \"rmmDeviceAuditProcessorID\" : 6,\n    \"domain\" : \"domain\",\n    \"createdByPersonID\" : 4,\n    \"rmmDeviceAuditOperatingSystem\" : \"rmmDeviceAuditOperatingSystem\",\n    \"lastActivityPersonType\" : 5,\n    \"monthlyCost\" : 6.704019297950036,\n    \"dattoNumberOfAgents\" : 7,\n    \"impersonatorCreatorResourceID\" : 1,\n    \"rmmDeviceAuditSNMPContact\" : \"rmmDeviceAuditSNMPContact\",\n    \"contactID\" : 7,\n    \"domainExpirationDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"sslSignatureAlgorithm\" : \"sslSignatureAlgorithm\",\n    \"configurationItemType\" : 2,\n    \"rmmDeviceAuditHostname\" : \"rmmDeviceAuditHostname\",\n    \"dattoDeviceMemoryMegabytes\" : 1,\n    \"installedByID\" : 6,\n    \"rmmDeviceAuditStorageBytes\" : 4,\n    \"installDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"sslValidUntilDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"dattoInternalIP\" : \"dattoInternalIP\",\n    \"sourceChargeID\" : 5,\n    \"setupFee\" : 7.933506881737151,\n    \"deviceNetworkingID\" : \"deviceNetworkingID\",\n    \"rmmDeviceAuditServicePackID\" : 4,\n    \"createDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"rmmDeviceAuditBackupStatusID\" : 0,\n    \"rmmDeviceAuditIPAddress\" : \"rmmDeviceAuditIPAddress\",\n    \"rmmDeviceAuditSoftwareStatusID\" : 1,\n    \"contractServiceID\" : 2,\n    \"vendorID\" : 6,\n    \"contractServiceBundleID\" : 3,\n    \"rmmDeviceAuditExternalIPAddress\" : \"rmmDeviceAuditExternalIPAddress\",\n    \"rmmDeviceAuditDisplayAdaptorID\" : 8,\n    \"rmmDeviceAuditAntivirusStatusID\" : 7,\n    \"domainRegistrarID\" : 3,\n    \"rmmDeviceAuditArchitectureID\" : 6,\n    \"parentConfigurationItemID\" : 3,\n    \"rmmDeviceAuditLastUser\" : \"rmmDeviceAuditLastUser\",\n    \"notes\" : \"notes\",\n    \"isActive\" : true,\n    \"rmmDeviceAuditPatchStatusID\" : 0,\n    \"companyID\" : 5,\n    \"warrantyExpirationDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"rmmDeviceID\" : 7,\n    \"sslIssuedBy\" : \"sslIssuedBy\",\n    \"contractID\" : 9,\n    \"rmmDeviceAuditModelID\" : 3,\n    \"serialNumber\" : \"serialNumber\",\n    \"dattoHostname\" : \"dattoHostname\",\n    \"dattoLastCheckInDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"domainRegistrationDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"rmmDeviceAuditMacAddress\" : \"rmmDeviceAuditMacAddress\",\n    \"dattoAvailableKilobytes\" : 1,\n    \"sslSource\" : \"sslSource\",\n    \"configurationItemCategoryID\" : 1,\n    \"rmmDeviceAuditSNMPLocation\" : \"rmmDeviceAuditSNMPLocation\",\n    \"companyLocationID\" : 5,\n    \"lastModifiedTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"rmmDeviceAuditMissingPatchCount\" : 7,\n    \"rmmDeviceAuditDomainID\" : 7,\n    \"sslSerialNumber\" : \"sslSerialNumber\",\n    \"dattoNICSpeedKilobitsPerSecond\" : 6,\n    \"sslCommonName\" : \"sslCommonName\",\n    \"perUseCost\" : 7.143538047012306,\n    \"dattoOffsiteUsedBytes\" : 5,\n    \"numberOfUsers\" : 3.353193347011243,\n    \"sslOrganization\" : \"sslOrganization\",\n    \"domainLastUpdatedDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"hourlyCost\" : 6.965117697638846,\n    \"dattoKernelVersionID\" : 1,\n    \"serviceBundleID\" : 0,\n    \"dattoPercentageUsed\" : 9.369310271410669,\n    \"dattoNumberOfDrives\" : 1,\n    \"rmmDeviceAuditMobileNetworkOperatorID\" : 5,\n    \"dattoZFSVersionID\" : 6,\n    \"dattoUptimeSeconds\" : 8,\n    \"dattoUsedKilobytes\" : 9,\n    \"dattoSerialNumber\" : \"dattoSerialNumber\",\n    \"dattoDrivesErrors\" : true,\n    \"referenceTitle\" : \"referenceTitle\",\n    \"installedByContactID\" : 2,\n    \"location\" : \"location\",\n    \"rmmDeviceAuditSNMPName\" : \"rmmDeviceAuditSNMPName\",\n    \"serviceID\" : 9,\n    \"sslOrganizationUnit\" : \"sslOrganizationUnit\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<QueryActionResultConfigurationItemModelInstalledProduct>(exampleJson)
            : default(QueryActionResultConfigurationItemModelInstalledProduct);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="queryModel"></param>
        /// <param name="apiIntegrationCode">API Integration Code</param>
        /// <param name="userName">User Name</param>
        /// <param name="secret">Secret</param>
        /// <param name="impersonationResourceId">Impersonation Resource Key</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpPost]
        [Route("/ATServicesRest/V1.0/ConfigurationItems/query/count")]
        [ValidateModelState]
        [SwaggerOperation("ConfigurationItemsQueryCount")]
        [SwaggerResponse(statusCode: 200, type: typeof(QueryCountResultModel), description: "OK")]
        public virtual IActionResult ConfigurationItemsQueryCount([FromBody]QueryModel queryModel, [FromHeader][Required()]string apiIntegrationCode, [FromHeader][Required()]string userName, [FromHeader][Required()]string secret, [FromHeader]string impersonationResourceId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(QueryCountResultModel));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            string exampleJson = null;
            exampleJson = "{\n  \"queryCount\" : 0\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<QueryCountResultModel>(exampleJson)
            : default(QueryCountResultModel);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="apiIntegrationCode">API Integration Code</param>
        /// <param name="userName">User Name</param>
        /// <param name="secret">Secret</param>
        /// <param name="impersonationResourceId">Impersonation Resource Key</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpGet]
        [Route("/ATServicesRest/V1.0/ConfigurationItems/entityInformation")]
        [ValidateModelState]
        [SwaggerOperation("ConfigurationItemsQueryEntityInformation")]
        [SwaggerResponse(statusCode: 200, type: typeof(EntityInformationResultModel), description: "OK")]
        public virtual IActionResult ConfigurationItemsQueryEntityInformation([FromHeader][Required()]string apiIntegrationCode, [FromHeader][Required()]string userName, [FromHeader][Required()]string secret, [FromHeader]string impersonationResourceId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(EntityInformationResultModel));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            string exampleJson = null;
            exampleJson = "{\n  \"info\" : {\n    \"canUpdate\" : true,\n    \"supportsWebhookCallouts\" : true,\n    \"userAccessForCreate\" : { },\n    \"name\" : \"name\",\n    \"canDelete\" : true,\n    \"canQuery\" : true,\n    \"canCreate\" : true,\n    \"hasUserDefinedFields\" : true\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<EntityInformationResultModel>(exampleJson)
            : default(EntityInformationResultModel);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="apiIntegrationCode">API Integration Code</param>
        /// <param name="userName">User Name</param>
        /// <param name="secret">Secret</param>
        /// <param name="impersonationResourceId">Impersonation Resource Key</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpGet]
        [Route("/ATServicesRest/V1.0/ConfigurationItems/entityInformation/fields")]
        [ValidateModelState]
        [SwaggerOperation("ConfigurationItemsQueryFieldDefinitions")]
        [SwaggerResponse(statusCode: 200, type: typeof(FieldInformationResultModel), description: "OK")]
        public virtual IActionResult ConfigurationItemsQueryFieldDefinitions([FromHeader][Required()]string apiIntegrationCode, [FromHeader][Required()]string userName, [FromHeader][Required()]string secret, [FromHeader]string impersonationResourceId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FieldInformationResultModel));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            string exampleJson = null;
            exampleJson = "{\n  \"fields\" : [ {\n    \"picklistValues\" : [ {\n      \"isSystem\" : true,\n      \"sortOrder\" : 6,\n      \"label\" : \"label\",\n      \"parentValue\" : \"parentValue\",\n      \"isActive\" : true,\n      \"value\" : \"value\",\n      \"isDefaultValue\" : true\n    }, {\n      \"isSystem\" : true,\n      \"sortOrder\" : 6,\n      \"label\" : \"label\",\n      \"parentValue\" : \"parentValue\",\n      \"isActive\" : true,\n      \"value\" : \"value\",\n      \"isDefaultValue\" : true\n    } ],\n    \"isRequired\" : true,\n    \"isReadOnly\" : true,\n    \"picklistParentValueField\" : \"picklistParentValueField\",\n    \"dataType\" : \"dataType\",\n    \"name\" : \"name\",\n    \"length\" : 0,\n    \"isQueryable\" : true,\n    \"isPickList\" : true,\n    \"isReference\" : true,\n    \"referenceEntityType\" : \"referenceEntityType\",\n    \"isSupportedWebhookField\" : { }\n  }, {\n    \"picklistValues\" : [ {\n      \"isSystem\" : true,\n      \"sortOrder\" : 6,\n      \"label\" : \"label\",\n      \"parentValue\" : \"parentValue\",\n      \"isActive\" : true,\n      \"value\" : \"value\",\n      \"isDefaultValue\" : true\n    }, {\n      \"isSystem\" : true,\n      \"sortOrder\" : 6,\n      \"label\" : \"label\",\n      \"parentValue\" : \"parentValue\",\n      \"isActive\" : true,\n      \"value\" : \"value\",\n      \"isDefaultValue\" : true\n    } ],\n    \"isRequired\" : true,\n    \"isReadOnly\" : true,\n    \"picklistParentValueField\" : \"picklistParentValueField\",\n    \"dataType\" : \"dataType\",\n    \"name\" : \"name\",\n    \"length\" : 0,\n    \"isQueryable\" : true,\n    \"isPickList\" : true,\n    \"isReference\" : true,\n    \"referenceEntityType\" : \"referenceEntityType\",\n    \"isSupportedWebhookField\" : { }\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FieldInformationResultModel>(exampleJson)
            : default(FieldInformationResultModel);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="id"></param>
        /// <param name="apiIntegrationCode">API Integration Code</param>
        /// <param name="userName">User Name</param>
        /// <param name="secret">Secret</param>
        /// <param name="impersonationResourceId">Impersonation Resource Key</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpGet]
        [Route("/ATServicesRest/V1.0/ConfigurationItems/{id}")]
        [ValidateModelState]
        [SwaggerOperation("ConfigurationItemsQueryItem")]
        [SwaggerResponse(statusCode: 200, type: typeof(ItemQueryResultModelConfigurationItemModelInstalledProduct), description: "OK")]
        public virtual IActionResult ConfigurationItemsQueryItem([FromRoute][Required]long? id, [FromHeader][Required()]string apiIntegrationCode, [FromHeader][Required()]string userName, [FromHeader][Required()]string secret, [FromHeader]string impersonationResourceId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ItemQueryResultModelConfigurationItemModelInstalledProduct));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            string exampleJson = null;
            exampleJson = "{\n  \"item\" : {\n    \"rmmDeviceAuditManufacturerID\" : 3,\n    \"serviceLevelAgreementID\" : 0,\n    \"dattoRemoteIP\" : \"dattoRemoteIP\",\n    \"productID\" : 0,\n    \"dattoNumberOfVolumes\" : 4,\n    \"rmmDeviceAuditDeviceTypeID\" : 4,\n    \"rmmDeviceAuditMemoryBytes\" : 3,\n    \"dattoProtectedKilobytes\" : 6,\n    \"referenceNumber\" : \"referenceNumber\",\n    \"dailyCost\" : 7.386281948385884,\n    \"id\" : 0,\n    \"rmmDeviceUID\" : \"rmmDeviceUID\",\n    \"lastActivityPersonID\" : 6,\n    \"apiVendorID\" : 6,\n    \"sslLocation\" : \"sslLocation\",\n    \"dattoOSVersionID\" : 9,\n    \"sslValidFromDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"rmmDeviceAuditMobileNumber\" : \"rmmDeviceAuditMobileNumber\",\n    \"rmmDeviceAuditDescription\" : \"rmmDeviceAuditDescription\",\n    \"rmmDeviceAuditMotherboardID\" : 4,\n    \"rmmOpenAlertCount\" : 9,\n    \"sourceChargeType\" : 4,\n    \"userDefinedFields\" : [ {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    }, {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    } ],\n    \"rmmDeviceAuditProcessorID\" : 6,\n    \"domain\" : \"domain\",\n    \"createdByPersonID\" : 4,\n    \"rmmDeviceAuditOperatingSystem\" : \"rmmDeviceAuditOperatingSystem\",\n    \"lastActivityPersonType\" : 5,\n    \"monthlyCost\" : 6.704019297950036,\n    \"dattoNumberOfAgents\" : 7,\n    \"impersonatorCreatorResourceID\" : 1,\n    \"rmmDeviceAuditSNMPContact\" : \"rmmDeviceAuditSNMPContact\",\n    \"contactID\" : 7,\n    \"domainExpirationDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"sslSignatureAlgorithm\" : \"sslSignatureAlgorithm\",\n    \"configurationItemType\" : 2,\n    \"rmmDeviceAuditHostname\" : \"rmmDeviceAuditHostname\",\n    \"dattoDeviceMemoryMegabytes\" : 1,\n    \"installedByID\" : 6,\n    \"rmmDeviceAuditStorageBytes\" : 4,\n    \"installDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"sslValidUntilDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"dattoInternalIP\" : \"dattoInternalIP\",\n    \"sourceChargeID\" : 5,\n    \"setupFee\" : 7.933506881737151,\n    \"deviceNetworkingID\" : \"deviceNetworkingID\",\n    \"rmmDeviceAuditServicePackID\" : 4,\n    \"createDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"rmmDeviceAuditBackupStatusID\" : 0,\n    \"rmmDeviceAuditIPAddress\" : \"rmmDeviceAuditIPAddress\",\n    \"rmmDeviceAuditSoftwareStatusID\" : 1,\n    \"contractServiceID\" : 2,\n    \"vendorID\" : 6,\n    \"contractServiceBundleID\" : 3,\n    \"rmmDeviceAuditExternalIPAddress\" : \"rmmDeviceAuditExternalIPAddress\",\n    \"rmmDeviceAuditDisplayAdaptorID\" : 8,\n    \"rmmDeviceAuditAntivirusStatusID\" : 7,\n    \"domainRegistrarID\" : 3,\n    \"rmmDeviceAuditArchitectureID\" : 6,\n    \"parentConfigurationItemID\" : 3,\n    \"rmmDeviceAuditLastUser\" : \"rmmDeviceAuditLastUser\",\n    \"notes\" : \"notes\",\n    \"isActive\" : true,\n    \"rmmDeviceAuditPatchStatusID\" : 0,\n    \"companyID\" : 5,\n    \"warrantyExpirationDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"rmmDeviceID\" : 7,\n    \"sslIssuedBy\" : \"sslIssuedBy\",\n    \"contractID\" : 9,\n    \"rmmDeviceAuditModelID\" : 3,\n    \"serialNumber\" : \"serialNumber\",\n    \"dattoHostname\" : \"dattoHostname\",\n    \"dattoLastCheckInDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"domainRegistrationDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"rmmDeviceAuditMacAddress\" : \"rmmDeviceAuditMacAddress\",\n    \"dattoAvailableKilobytes\" : 1,\n    \"sslSource\" : \"sslSource\",\n    \"configurationItemCategoryID\" : 1,\n    \"rmmDeviceAuditSNMPLocation\" : \"rmmDeviceAuditSNMPLocation\",\n    \"companyLocationID\" : 5,\n    \"lastModifiedTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"rmmDeviceAuditMissingPatchCount\" : 7,\n    \"rmmDeviceAuditDomainID\" : 7,\n    \"sslSerialNumber\" : \"sslSerialNumber\",\n    \"dattoNICSpeedKilobitsPerSecond\" : 6,\n    \"sslCommonName\" : \"sslCommonName\",\n    \"perUseCost\" : 7.143538047012306,\n    \"dattoOffsiteUsedBytes\" : 5,\n    \"numberOfUsers\" : 3.353193347011243,\n    \"sslOrganization\" : \"sslOrganization\",\n    \"domainLastUpdatedDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"hourlyCost\" : 6.965117697638846,\n    \"dattoKernelVersionID\" : 1,\n    \"serviceBundleID\" : 0,\n    \"dattoPercentageUsed\" : 9.369310271410669,\n    \"dattoNumberOfDrives\" : 1,\n    \"rmmDeviceAuditMobileNetworkOperatorID\" : 5,\n    \"dattoZFSVersionID\" : 6,\n    \"dattoUptimeSeconds\" : 8,\n    \"dattoUsedKilobytes\" : 9,\n    \"dattoSerialNumber\" : \"dattoSerialNumber\",\n    \"dattoDrivesErrors\" : true,\n    \"referenceTitle\" : \"referenceTitle\",\n    \"installedByContactID\" : 2,\n    \"location\" : \"location\",\n    \"rmmDeviceAuditSNMPName\" : \"rmmDeviceAuditSNMPName\",\n    \"serviceID\" : 9,\n    \"sslOrganizationUnit\" : \"sslOrganizationUnit\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ItemQueryResultModelConfigurationItemModelInstalledProduct>(exampleJson)
            : default(ItemQueryResultModelConfigurationItemModelInstalledProduct);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="apiIntegrationCode">API Integration Code</param>
        /// <param name="userName">User Name</param>
        /// <param name="secret">Secret</param>
        /// <param name="impersonationResourceId">Impersonation Resource Key</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpGet]
        [Route("/ATServicesRest/V1.0/ConfigurationItems/entityInformation/userDefinedFields")]
        [ValidateModelState]
        [SwaggerOperation("ConfigurationItemsQueryUserDefinedFieldDefinitions")]
        [SwaggerResponse(statusCode: 200, type: typeof(UserDefinedFieldInformationResultModel), description: "OK")]
        public virtual IActionResult ConfigurationItemsQueryUserDefinedFieldDefinitions([FromHeader][Required()]string apiIntegrationCode, [FromHeader][Required()]string userName, [FromHeader][Required()]string secret, [FromHeader]string impersonationResourceId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(UserDefinedFieldInformationResultModel));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            string exampleJson = null;
            exampleJson = "{\n  \"fields\" : [ {\n    \"picklistValues\" : [ {\n      \"isSystem\" : true,\n      \"sortOrder\" : 6,\n      \"label\" : \"label\",\n      \"parentValue\" : \"parentValue\",\n      \"isActive\" : true,\n      \"value\" : \"value\",\n      \"isDefaultValue\" : true\n    }, {\n      \"isSystem\" : true,\n      \"sortOrder\" : 6,\n      \"label\" : \"label\",\n      \"parentValue\" : \"parentValue\",\n      \"isActive\" : true,\n      \"value\" : \"value\",\n      \"isDefaultValue\" : true\n    } ],\n    \"isRequired\" : true,\n    \"picklistParentValueField\" : \"picklistParentValueField\",\n    \"defaultValue\" : \"defaultValue\",\n    \"length\" : 0,\n    \"isQueryable\" : true,\n    \"isPickList\" : true,\n    \"description\" : \"description\",\n    \"label\" : \"label\",\n    \"type\" : \"type\",\n    \"referenceEntityType\" : \"referenceEntityType\",\n    \"isSupportedWebhookField\" : { },\n    \"isReadOnly\" : true,\n    \"name\" : \"name\",\n    \"isReference\" : true\n  }, {\n    \"picklistValues\" : [ {\n      \"isSystem\" : true,\n      \"sortOrder\" : 6,\n      \"label\" : \"label\",\n      \"parentValue\" : \"parentValue\",\n      \"isActive\" : true,\n      \"value\" : \"value\",\n      \"isDefaultValue\" : true\n    }, {\n      \"isSystem\" : true,\n      \"sortOrder\" : 6,\n      \"label\" : \"label\",\n      \"parentValue\" : \"parentValue\",\n      \"isActive\" : true,\n      \"value\" : \"value\",\n      \"isDefaultValue\" : true\n    } ],\n    \"isRequired\" : true,\n    \"picklistParentValueField\" : \"picklistParentValueField\",\n    \"defaultValue\" : \"defaultValue\",\n    \"length\" : 0,\n    \"isQueryable\" : true,\n    \"isPickList\" : true,\n    \"description\" : \"description\",\n    \"label\" : \"label\",\n    \"type\" : \"type\",\n    \"referenceEntityType\" : \"referenceEntityType\",\n    \"isSupportedWebhookField\" : { },\n    \"isReadOnly\" : true,\n    \"name\" : \"name\",\n    \"isReference\" : true\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<UserDefinedFieldInformationResultModel>(exampleJson)
            : default(UserDefinedFieldInformationResultModel);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="restModelInput"></param>
        /// <param name="apiIntegrationCode">API Integration Code</param>
        /// <param name="userName">User Name</param>
        /// <param name="secret">Secret</param>
        /// <param name="impersonationResourceId">Impersonation Resource Key</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpPut]
        [Route("/ATServicesRest/V1.0/ConfigurationItems")]
        [ValidateModelState]
        [SwaggerOperation("ConfigurationItemsUpdateEntity")]
        [SwaggerResponse(statusCode: 200, type: typeof(OperationResultModel), description: "OK")]
        public virtual IActionResult ConfigurationItemsUpdateEntity([FromBody]ConfigurationItemModel restModelInput, [FromHeader][Required()]string apiIntegrationCode, [FromHeader][Required()]string userName, [FromHeader][Required()]string secret, [FromHeader]string impersonationResourceId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(OperationResultModel));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            string exampleJson = null;
            exampleJson = "{\n  \"itemId\" : { }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<OperationResultModel>(exampleJson)
            : default(OperationResultModel);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="search"></param>
        /// <param name="apiIntegrationCode">API Integration Code</param>
        /// <param name="userName">User Name</param>
        /// <param name="secret">Secret</param>
        /// <param name="impersonationResourceId">Impersonation Resource Key</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpGet]
        [Route("/ATServicesRest/V1.0/ConfigurationItems/query")]
        [ValidateModelState]
        [SwaggerOperation("ConfigurationItemsUrlParameterQuery")]
        [SwaggerResponse(statusCode: 200, type: typeof(QueryActionResultConfigurationItemModelInstalledProduct), description: "OK")]
        public virtual IActionResult ConfigurationItemsUrlParameterQuery([FromQuery][Required()]string search, [FromHeader][Required()]string apiIntegrationCode, [FromHeader][Required()]string userName, [FromHeader][Required()]string secret, [FromHeader]string impersonationResourceId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(QueryActionResultConfigurationItemModelInstalledProduct));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            string exampleJson = null;
            exampleJson = "{\n  \"pageDetails\" : {\n    \"requestCount\" : 5,\n    \"nextPageUrl\" : \"nextPageUrl\",\n    \"count\" : 1,\n    \"prevPageUrl\" : \"prevPageUrl\"\n  },\n  \"items\" : [ {\n    \"rmmDeviceAuditManufacturerID\" : 3,\n    \"serviceLevelAgreementID\" : 0,\n    \"dattoRemoteIP\" : \"dattoRemoteIP\",\n    \"productID\" : 0,\n    \"dattoNumberOfVolumes\" : 4,\n    \"rmmDeviceAuditDeviceTypeID\" : 4,\n    \"rmmDeviceAuditMemoryBytes\" : 3,\n    \"dattoProtectedKilobytes\" : 6,\n    \"referenceNumber\" : \"referenceNumber\",\n    \"dailyCost\" : 7.386281948385884,\n    \"id\" : 0,\n    \"rmmDeviceUID\" : \"rmmDeviceUID\",\n    \"lastActivityPersonID\" : 6,\n    \"apiVendorID\" : 6,\n    \"sslLocation\" : \"sslLocation\",\n    \"dattoOSVersionID\" : 9,\n    \"sslValidFromDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"rmmDeviceAuditMobileNumber\" : \"rmmDeviceAuditMobileNumber\",\n    \"rmmDeviceAuditDescription\" : \"rmmDeviceAuditDescription\",\n    \"rmmDeviceAuditMotherboardID\" : 4,\n    \"rmmOpenAlertCount\" : 9,\n    \"sourceChargeType\" : 4,\n    \"userDefinedFields\" : [ {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    }, {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    } ],\n    \"rmmDeviceAuditProcessorID\" : 6,\n    \"domain\" : \"domain\",\n    \"createdByPersonID\" : 4,\n    \"rmmDeviceAuditOperatingSystem\" : \"rmmDeviceAuditOperatingSystem\",\n    \"lastActivityPersonType\" : 5,\n    \"monthlyCost\" : 6.704019297950036,\n    \"dattoNumberOfAgents\" : 7,\n    \"impersonatorCreatorResourceID\" : 1,\n    \"rmmDeviceAuditSNMPContact\" : \"rmmDeviceAuditSNMPContact\",\n    \"contactID\" : 7,\n    \"domainExpirationDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"sslSignatureAlgorithm\" : \"sslSignatureAlgorithm\",\n    \"configurationItemType\" : 2,\n    \"rmmDeviceAuditHostname\" : \"rmmDeviceAuditHostname\",\n    \"dattoDeviceMemoryMegabytes\" : 1,\n    \"installedByID\" : 6,\n    \"rmmDeviceAuditStorageBytes\" : 4,\n    \"installDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"sslValidUntilDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"dattoInternalIP\" : \"dattoInternalIP\",\n    \"sourceChargeID\" : 5,\n    \"setupFee\" : 7.933506881737151,\n    \"deviceNetworkingID\" : \"deviceNetworkingID\",\n    \"rmmDeviceAuditServicePackID\" : 4,\n    \"createDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"rmmDeviceAuditBackupStatusID\" : 0,\n    \"rmmDeviceAuditIPAddress\" : \"rmmDeviceAuditIPAddress\",\n    \"rmmDeviceAuditSoftwareStatusID\" : 1,\n    \"contractServiceID\" : 2,\n    \"vendorID\" : 6,\n    \"contractServiceBundleID\" : 3,\n    \"rmmDeviceAuditExternalIPAddress\" : \"rmmDeviceAuditExternalIPAddress\",\n    \"rmmDeviceAuditDisplayAdaptorID\" : 8,\n    \"rmmDeviceAuditAntivirusStatusID\" : 7,\n    \"domainRegistrarID\" : 3,\n    \"rmmDeviceAuditArchitectureID\" : 6,\n    \"parentConfigurationItemID\" : 3,\n    \"rmmDeviceAuditLastUser\" : \"rmmDeviceAuditLastUser\",\n    \"notes\" : \"notes\",\n    \"isActive\" : true,\n    \"rmmDeviceAuditPatchStatusID\" : 0,\n    \"companyID\" : 5,\n    \"warrantyExpirationDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"rmmDeviceID\" : 7,\n    \"sslIssuedBy\" : \"sslIssuedBy\",\n    \"contractID\" : 9,\n    \"rmmDeviceAuditModelID\" : 3,\n    \"serialNumber\" : \"serialNumber\",\n    \"dattoHostname\" : \"dattoHostname\",\n    \"dattoLastCheckInDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"domainRegistrationDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"rmmDeviceAuditMacAddress\" : \"rmmDeviceAuditMacAddress\",\n    \"dattoAvailableKilobytes\" : 1,\n    \"sslSource\" : \"sslSource\",\n    \"configurationItemCategoryID\" : 1,\n    \"rmmDeviceAuditSNMPLocation\" : \"rmmDeviceAuditSNMPLocation\",\n    \"companyLocationID\" : 5,\n    \"lastModifiedTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"rmmDeviceAuditMissingPatchCount\" : 7,\n    \"rmmDeviceAuditDomainID\" : 7,\n    \"sslSerialNumber\" : \"sslSerialNumber\",\n    \"dattoNICSpeedKilobitsPerSecond\" : 6,\n    \"sslCommonName\" : \"sslCommonName\",\n    \"perUseCost\" : 7.143538047012306,\n    \"dattoOffsiteUsedBytes\" : 5,\n    \"numberOfUsers\" : 3.353193347011243,\n    \"sslOrganization\" : \"sslOrganization\",\n    \"domainLastUpdatedDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"hourlyCost\" : 6.965117697638846,\n    \"dattoKernelVersionID\" : 1,\n    \"serviceBundleID\" : 0,\n    \"dattoPercentageUsed\" : 9.369310271410669,\n    \"dattoNumberOfDrives\" : 1,\n    \"rmmDeviceAuditMobileNetworkOperatorID\" : 5,\n    \"dattoZFSVersionID\" : 6,\n    \"dattoUptimeSeconds\" : 8,\n    \"dattoUsedKilobytes\" : 9,\n    \"dattoSerialNumber\" : \"dattoSerialNumber\",\n    \"dattoDrivesErrors\" : true,\n    \"referenceTitle\" : \"referenceTitle\",\n    \"installedByContactID\" : 2,\n    \"location\" : \"location\",\n    \"rmmDeviceAuditSNMPName\" : \"rmmDeviceAuditSNMPName\",\n    \"serviceID\" : 9,\n    \"sslOrganizationUnit\" : \"sslOrganizationUnit\"\n  }, {\n    \"rmmDeviceAuditManufacturerID\" : 3,\n    \"serviceLevelAgreementID\" : 0,\n    \"dattoRemoteIP\" : \"dattoRemoteIP\",\n    \"productID\" : 0,\n    \"dattoNumberOfVolumes\" : 4,\n    \"rmmDeviceAuditDeviceTypeID\" : 4,\n    \"rmmDeviceAuditMemoryBytes\" : 3,\n    \"dattoProtectedKilobytes\" : 6,\n    \"referenceNumber\" : \"referenceNumber\",\n    \"dailyCost\" : 7.386281948385884,\n    \"id\" : 0,\n    \"rmmDeviceUID\" : \"rmmDeviceUID\",\n    \"lastActivityPersonID\" : 6,\n    \"apiVendorID\" : 6,\n    \"sslLocation\" : \"sslLocation\",\n    \"dattoOSVersionID\" : 9,\n    \"sslValidFromDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"rmmDeviceAuditMobileNumber\" : \"rmmDeviceAuditMobileNumber\",\n    \"rmmDeviceAuditDescription\" : \"rmmDeviceAuditDescription\",\n    \"rmmDeviceAuditMotherboardID\" : 4,\n    \"rmmOpenAlertCount\" : 9,\n    \"sourceChargeType\" : 4,\n    \"userDefinedFields\" : [ {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    }, {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    } ],\n    \"rmmDeviceAuditProcessorID\" : 6,\n    \"domain\" : \"domain\",\n    \"createdByPersonID\" : 4,\n    \"rmmDeviceAuditOperatingSystem\" : \"rmmDeviceAuditOperatingSystem\",\n    \"lastActivityPersonType\" : 5,\n    \"monthlyCost\" : 6.704019297950036,\n    \"dattoNumberOfAgents\" : 7,\n    \"impersonatorCreatorResourceID\" : 1,\n    \"rmmDeviceAuditSNMPContact\" : \"rmmDeviceAuditSNMPContact\",\n    \"contactID\" : 7,\n    \"domainExpirationDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"sslSignatureAlgorithm\" : \"sslSignatureAlgorithm\",\n    \"configurationItemType\" : 2,\n    \"rmmDeviceAuditHostname\" : \"rmmDeviceAuditHostname\",\n    \"dattoDeviceMemoryMegabytes\" : 1,\n    \"installedByID\" : 6,\n    \"rmmDeviceAuditStorageBytes\" : 4,\n    \"installDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"sslValidUntilDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"dattoInternalIP\" : \"dattoInternalIP\",\n    \"sourceChargeID\" : 5,\n    \"setupFee\" : 7.933506881737151,\n    \"deviceNetworkingID\" : \"deviceNetworkingID\",\n    \"rmmDeviceAuditServicePackID\" : 4,\n    \"createDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"rmmDeviceAuditBackupStatusID\" : 0,\n    \"rmmDeviceAuditIPAddress\" : \"rmmDeviceAuditIPAddress\",\n    \"rmmDeviceAuditSoftwareStatusID\" : 1,\n    \"contractServiceID\" : 2,\n    \"vendorID\" : 6,\n    \"contractServiceBundleID\" : 3,\n    \"rmmDeviceAuditExternalIPAddress\" : \"rmmDeviceAuditExternalIPAddress\",\n    \"rmmDeviceAuditDisplayAdaptorID\" : 8,\n    \"rmmDeviceAuditAntivirusStatusID\" : 7,\n    \"domainRegistrarID\" : 3,\n    \"rmmDeviceAuditArchitectureID\" : 6,\n    \"parentConfigurationItemID\" : 3,\n    \"rmmDeviceAuditLastUser\" : \"rmmDeviceAuditLastUser\",\n    \"notes\" : \"notes\",\n    \"isActive\" : true,\n    \"rmmDeviceAuditPatchStatusID\" : 0,\n    \"companyID\" : 5,\n    \"warrantyExpirationDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"rmmDeviceID\" : 7,\n    \"sslIssuedBy\" : \"sslIssuedBy\",\n    \"contractID\" : 9,\n    \"rmmDeviceAuditModelID\" : 3,\n    \"serialNumber\" : \"serialNumber\",\n    \"dattoHostname\" : \"dattoHostname\",\n    \"dattoLastCheckInDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"domainRegistrationDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"rmmDeviceAuditMacAddress\" : \"rmmDeviceAuditMacAddress\",\n    \"dattoAvailableKilobytes\" : 1,\n    \"sslSource\" : \"sslSource\",\n    \"configurationItemCategoryID\" : 1,\n    \"rmmDeviceAuditSNMPLocation\" : \"rmmDeviceAuditSNMPLocation\",\n    \"companyLocationID\" : 5,\n    \"lastModifiedTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"rmmDeviceAuditMissingPatchCount\" : 7,\n    \"rmmDeviceAuditDomainID\" : 7,\n    \"sslSerialNumber\" : \"sslSerialNumber\",\n    \"dattoNICSpeedKilobitsPerSecond\" : 6,\n    \"sslCommonName\" : \"sslCommonName\",\n    \"perUseCost\" : 7.143538047012306,\n    \"dattoOffsiteUsedBytes\" : 5,\n    \"numberOfUsers\" : 3.353193347011243,\n    \"sslOrganization\" : \"sslOrganization\",\n    \"domainLastUpdatedDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"hourlyCost\" : 6.965117697638846,\n    \"dattoKernelVersionID\" : 1,\n    \"serviceBundleID\" : 0,\n    \"dattoPercentageUsed\" : 9.369310271410669,\n    \"dattoNumberOfDrives\" : 1,\n    \"rmmDeviceAuditMobileNetworkOperatorID\" : 5,\n    \"dattoZFSVersionID\" : 6,\n    \"dattoUptimeSeconds\" : 8,\n    \"dattoUsedKilobytes\" : 9,\n    \"dattoSerialNumber\" : \"dattoSerialNumber\",\n    \"dattoDrivesErrors\" : true,\n    \"referenceTitle\" : \"referenceTitle\",\n    \"installedByContactID\" : 2,\n    \"location\" : \"location\",\n    \"rmmDeviceAuditSNMPName\" : \"rmmDeviceAuditSNMPName\",\n    \"serviceID\" : 9,\n    \"sslOrganizationUnit\" : \"sslOrganizationUnit\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<QueryActionResultConfigurationItemModelInstalledProduct>(exampleJson)
            : default(QueryActionResultConfigurationItemModelInstalledProduct);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="search"></param>
        /// <param name="apiIntegrationCode">API Integration Code</param>
        /// <param name="userName">User Name</param>
        /// <param name="secret">Secret</param>
        /// <param name="impersonationResourceId">Impersonation Resource Key</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpGet]
        [Route("/ATServicesRest/V1.0/ConfigurationItems/query/count")]
        [ValidateModelState]
        [SwaggerOperation("ConfigurationItemsUrlParameterQueryCount")]
        [SwaggerResponse(statusCode: 200, type: typeof(QueryCountResultModel), description: "OK")]
        public virtual IActionResult ConfigurationItemsUrlParameterQueryCount([FromQuery][Required()]string search, [FromHeader][Required()]string apiIntegrationCode, [FromHeader][Required()]string userName, [FromHeader][Required()]string secret, [FromHeader]string impersonationResourceId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(QueryCountResultModel));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            string exampleJson = null;
            exampleJson = "{\n  \"queryCount\" : 0\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<QueryCountResultModel>(exampleJson)
            : default(QueryCountResultModel);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
