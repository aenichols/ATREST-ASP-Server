/*
 * Datto|Autotask PSA Rest API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;

using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class BillingItemsApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="restModelInput"></param>
        /// <param name="apiIntegrationCode">API Integration Code</param>
        /// <param name="userName">User Name</param>
        /// <param name="secret">Secret</param>
        /// <param name="impersonationResourceId">Impersonation Resource Key</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpPatch]
        [Route("/ATServicesRest/V1.0/BillingItems")]
        [ValidateModelState]
        [SwaggerOperation("BillingItemsPatchEntity")]
        [SwaggerResponse(statusCode: 200, type: typeof(OperationResultModel), description: "OK")]
        public virtual IActionResult BillingItemsPatchEntity([FromBody]BillingItemModel restModelInput, [FromHeader][Required()]string apiIntegrationCode, [FromHeader][Required()]string userName, [FromHeader][Required()]string secret, [FromHeader]string impersonationResourceId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(OperationResultModel));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            string exampleJson = null;
            exampleJson = "{\n  \"itemId\" : { }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<OperationResultModel>(exampleJson)
            : default(OperationResultModel);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="queryModel"></param>
        /// <param name="apiIntegrationCode">API Integration Code</param>
        /// <param name="userName">User Name</param>
        /// <param name="secret">Secret</param>
        /// <param name="impersonationResourceId">Impersonation Resource Key</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpPost]
        [Route("/ATServicesRest/V1.0/BillingItems/query")]
        [ValidateModelState]
        [SwaggerOperation("BillingItemsQuery")]
        [SwaggerResponse(statusCode: 200, type: typeof(QueryActionResultBillingItemModelBillingItem), description: "OK")]
        public virtual IActionResult BillingItemsQuery([FromBody]QueryModel queryModel, [FromHeader][Required()]string apiIntegrationCode, [FromHeader][Required()]string userName, [FromHeader][Required()]string secret, [FromHeader]string impersonationResourceId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(QueryActionResultBillingItemModelBillingItem));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            string exampleJson = null;
            exampleJson = "{\n  \"pageDetails\" : {\n    \"requestCount\" : 5,\n    \"nextPageUrl\" : \"nextPageUrl\",\n    \"count\" : 1,\n    \"prevPageUrl\" : \"prevPageUrl\"\n  },\n  \"items\" : [ {\n    \"roleID\" : 9,\n    \"postedOnTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"description\" : \"description\",\n    \"itemDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"accountManagerWhenApprovedID\" : 6,\n    \"ticketChargeID\" : 6,\n    \"internalCurrencyExtendedPrice\" : 4.145608029883936,\n    \"postedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"internalCurrencyTotalAmount\" : 1.0246457001441578,\n    \"companyID\" : 5,\n    \"itemName\" : \"itemName\",\n    \"billingItemType\" : 5,\n    \"extendedPrice\" : 2.027123023002322,\n    \"rate\" : 8.762042012749001,\n    \"timeEntryID\" : 6,\n    \"contractChargeID\" : 7,\n    \"internalCurrencyRate\" : 7.386281948385884,\n    \"itemApproverID\" : 6,\n    \"contractID\" : 9,\n    \"internalCurrencyTaxDollars\" : 1.2315135367772556,\n    \"ourCost\" : 5.025004791520295,\n    \"invoiceID\" : 1,\n    \"id\" : 0,\n    \"lineItemFullDescription\" : \"lineItemFullDescription\",\n    \"lineItemGroupDescription\" : \"lineItemGroupDescription\",\n    \"projectID\" : 9,\n    \"serviceBundleID\" : 6,\n    \"taskID\" : 2,\n    \"ticketID\" : 5,\n    \"expenseItemID\" : 3,\n    \"quantity\" : 6.683562403749608,\n    \"nonBillable\" : 1,\n    \"milestoneID\" : 7,\n    \"configurationItemID\" : 2,\n    \"vendorID\" : 3,\n    \"userDefinedFields\" : [ {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    }, {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    } ],\n    \"sortOrderID\" : 6,\n    \"totalAmount\" : 3.353193347011243,\n    \"webServiceDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"billingCodeID\" : 1,\n    \"taxDollars\" : 6.778324963048013,\n    \"purchaseOrderNumber\" : \"purchaseOrderNumber\",\n    \"subType\" : 1,\n    \"organizationalLevelAssociationID\" : 4,\n    \"serviceID\" : 3,\n    \"projectChargeID\" : 9\n  }, {\n    \"roleID\" : 9,\n    \"postedOnTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"description\" : \"description\",\n    \"itemDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"accountManagerWhenApprovedID\" : 6,\n    \"ticketChargeID\" : 6,\n    \"internalCurrencyExtendedPrice\" : 4.145608029883936,\n    \"postedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"internalCurrencyTotalAmount\" : 1.0246457001441578,\n    \"companyID\" : 5,\n    \"itemName\" : \"itemName\",\n    \"billingItemType\" : 5,\n    \"extendedPrice\" : 2.027123023002322,\n    \"rate\" : 8.762042012749001,\n    \"timeEntryID\" : 6,\n    \"contractChargeID\" : 7,\n    \"internalCurrencyRate\" : 7.386281948385884,\n    \"itemApproverID\" : 6,\n    \"contractID\" : 9,\n    \"internalCurrencyTaxDollars\" : 1.2315135367772556,\n    \"ourCost\" : 5.025004791520295,\n    \"invoiceID\" : 1,\n    \"id\" : 0,\n    \"lineItemFullDescription\" : \"lineItemFullDescription\",\n    \"lineItemGroupDescription\" : \"lineItemGroupDescription\",\n    \"projectID\" : 9,\n    \"serviceBundleID\" : 6,\n    \"taskID\" : 2,\n    \"ticketID\" : 5,\n    \"expenseItemID\" : 3,\n    \"quantity\" : 6.683562403749608,\n    \"nonBillable\" : 1,\n    \"milestoneID\" : 7,\n    \"configurationItemID\" : 2,\n    \"vendorID\" : 3,\n    \"userDefinedFields\" : [ {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    }, {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    } ],\n    \"sortOrderID\" : 6,\n    \"totalAmount\" : 3.353193347011243,\n    \"webServiceDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"billingCodeID\" : 1,\n    \"taxDollars\" : 6.778324963048013,\n    \"purchaseOrderNumber\" : \"purchaseOrderNumber\",\n    \"subType\" : 1,\n    \"organizationalLevelAssociationID\" : 4,\n    \"serviceID\" : 3,\n    \"projectChargeID\" : 9\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<QueryActionResultBillingItemModelBillingItem>(exampleJson)
            : default(QueryActionResultBillingItemModelBillingItem);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="queryModel"></param>
        /// <param name="apiIntegrationCode">API Integration Code</param>
        /// <param name="userName">User Name</param>
        /// <param name="secret">Secret</param>
        /// <param name="impersonationResourceId">Impersonation Resource Key</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpPost]
        [Route("/ATServicesRest/V1.0/BillingItems/query/count")]
        [ValidateModelState]
        [SwaggerOperation("BillingItemsQueryCount")]
        [SwaggerResponse(statusCode: 200, type: typeof(QueryCountResultModel), description: "OK")]
        public virtual IActionResult BillingItemsQueryCount([FromBody]QueryModel queryModel, [FromHeader][Required()]string apiIntegrationCode, [FromHeader][Required()]string userName, [FromHeader][Required()]string secret, [FromHeader]string impersonationResourceId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(QueryCountResultModel));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            string exampleJson = null;
            exampleJson = "{\n  \"queryCount\" : 0\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<QueryCountResultModel>(exampleJson)
            : default(QueryCountResultModel);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="apiIntegrationCode">API Integration Code</param>
        /// <param name="userName">User Name</param>
        /// <param name="secret">Secret</param>
        /// <param name="impersonationResourceId">Impersonation Resource Key</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpGet]
        [Route("/ATServicesRest/V1.0/BillingItems/entityInformation")]
        [ValidateModelState]
        [SwaggerOperation("BillingItemsQueryEntityInformation")]
        [SwaggerResponse(statusCode: 200, type: typeof(EntityInformationResultModel), description: "OK")]
        public virtual IActionResult BillingItemsQueryEntityInformation([FromHeader][Required()]string apiIntegrationCode, [FromHeader][Required()]string userName, [FromHeader][Required()]string secret, [FromHeader]string impersonationResourceId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(EntityInformationResultModel));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            string exampleJson = null;
            exampleJson = "{\n  \"info\" : {\n    \"canUpdate\" : true,\n    \"supportsWebhookCallouts\" : true,\n    \"userAccessForCreate\" : { },\n    \"name\" : \"name\",\n    \"canDelete\" : true,\n    \"canQuery\" : true,\n    \"canCreate\" : true,\n    \"hasUserDefinedFields\" : true\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<EntityInformationResultModel>(exampleJson)
            : default(EntityInformationResultModel);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="apiIntegrationCode">API Integration Code</param>
        /// <param name="userName">User Name</param>
        /// <param name="secret">Secret</param>
        /// <param name="impersonationResourceId">Impersonation Resource Key</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpGet]
        [Route("/ATServicesRest/V1.0/BillingItems/entityInformation/fields")]
        [ValidateModelState]
        [SwaggerOperation("BillingItemsQueryFieldDefinitions")]
        [SwaggerResponse(statusCode: 200, type: typeof(FieldInformationResultModel), description: "OK")]
        public virtual IActionResult BillingItemsQueryFieldDefinitions([FromHeader][Required()]string apiIntegrationCode, [FromHeader][Required()]string userName, [FromHeader][Required()]string secret, [FromHeader]string impersonationResourceId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FieldInformationResultModel));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            string exampleJson = null;
            exampleJson = "{\n  \"fields\" : [ {\n    \"picklistValues\" : [ {\n      \"isSystem\" : true,\n      \"sortOrder\" : 6,\n      \"label\" : \"label\",\n      \"parentValue\" : \"parentValue\",\n      \"isActive\" : true,\n      \"value\" : \"value\",\n      \"isDefaultValue\" : true\n    }, {\n      \"isSystem\" : true,\n      \"sortOrder\" : 6,\n      \"label\" : \"label\",\n      \"parentValue\" : \"parentValue\",\n      \"isActive\" : true,\n      \"value\" : \"value\",\n      \"isDefaultValue\" : true\n    } ],\n    \"isRequired\" : true,\n    \"isReadOnly\" : true,\n    \"picklistParentValueField\" : \"picklistParentValueField\",\n    \"dataType\" : \"dataType\",\n    \"name\" : \"name\",\n    \"length\" : 0,\n    \"isQueryable\" : true,\n    \"isPickList\" : true,\n    \"isReference\" : true,\n    \"referenceEntityType\" : \"referenceEntityType\",\n    \"isSupportedWebhookField\" : { }\n  }, {\n    \"picklistValues\" : [ {\n      \"isSystem\" : true,\n      \"sortOrder\" : 6,\n      \"label\" : \"label\",\n      \"parentValue\" : \"parentValue\",\n      \"isActive\" : true,\n      \"value\" : \"value\",\n      \"isDefaultValue\" : true\n    }, {\n      \"isSystem\" : true,\n      \"sortOrder\" : 6,\n      \"label\" : \"label\",\n      \"parentValue\" : \"parentValue\",\n      \"isActive\" : true,\n      \"value\" : \"value\",\n      \"isDefaultValue\" : true\n    } ],\n    \"isRequired\" : true,\n    \"isReadOnly\" : true,\n    \"picklistParentValueField\" : \"picklistParentValueField\",\n    \"dataType\" : \"dataType\",\n    \"name\" : \"name\",\n    \"length\" : 0,\n    \"isQueryable\" : true,\n    \"isPickList\" : true,\n    \"isReference\" : true,\n    \"referenceEntityType\" : \"referenceEntityType\",\n    \"isSupportedWebhookField\" : { }\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FieldInformationResultModel>(exampleJson)
            : default(FieldInformationResultModel);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="id"></param>
        /// <param name="apiIntegrationCode">API Integration Code</param>
        /// <param name="userName">User Name</param>
        /// <param name="secret">Secret</param>
        /// <param name="impersonationResourceId">Impersonation Resource Key</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpGet]
        [Route("/ATServicesRest/V1.0/BillingItems/{id}")]
        [ValidateModelState]
        [SwaggerOperation("BillingItemsQueryItem")]
        [SwaggerResponse(statusCode: 200, type: typeof(ItemQueryResultModelBillingItemModelBillingItem), description: "OK")]
        public virtual IActionResult BillingItemsQueryItem([FromRoute][Required]long? id, [FromHeader][Required()]string apiIntegrationCode, [FromHeader][Required()]string userName, [FromHeader][Required()]string secret, [FromHeader]string impersonationResourceId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ItemQueryResultModelBillingItemModelBillingItem));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            string exampleJson = null;
            exampleJson = "{\n  \"item\" : {\n    \"roleID\" : 9,\n    \"postedOnTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"description\" : \"description\",\n    \"itemDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"accountManagerWhenApprovedID\" : 6,\n    \"ticketChargeID\" : 6,\n    \"internalCurrencyExtendedPrice\" : 4.145608029883936,\n    \"postedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"internalCurrencyTotalAmount\" : 1.0246457001441578,\n    \"companyID\" : 5,\n    \"itemName\" : \"itemName\",\n    \"billingItemType\" : 5,\n    \"extendedPrice\" : 2.027123023002322,\n    \"rate\" : 8.762042012749001,\n    \"timeEntryID\" : 6,\n    \"contractChargeID\" : 7,\n    \"internalCurrencyRate\" : 7.386281948385884,\n    \"itemApproverID\" : 6,\n    \"contractID\" : 9,\n    \"internalCurrencyTaxDollars\" : 1.2315135367772556,\n    \"ourCost\" : 5.025004791520295,\n    \"invoiceID\" : 1,\n    \"id\" : 0,\n    \"lineItemFullDescription\" : \"lineItemFullDescription\",\n    \"lineItemGroupDescription\" : \"lineItemGroupDescription\",\n    \"projectID\" : 9,\n    \"serviceBundleID\" : 6,\n    \"taskID\" : 2,\n    \"ticketID\" : 5,\n    \"expenseItemID\" : 3,\n    \"quantity\" : 6.683562403749608,\n    \"nonBillable\" : 1,\n    \"milestoneID\" : 7,\n    \"configurationItemID\" : 2,\n    \"vendorID\" : 3,\n    \"userDefinedFields\" : [ {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    }, {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    } ],\n    \"sortOrderID\" : 6,\n    \"totalAmount\" : 3.353193347011243,\n    \"webServiceDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"billingCodeID\" : 1,\n    \"taxDollars\" : 6.778324963048013,\n    \"purchaseOrderNumber\" : \"purchaseOrderNumber\",\n    \"subType\" : 1,\n    \"organizationalLevelAssociationID\" : 4,\n    \"serviceID\" : 3,\n    \"projectChargeID\" : 9\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ItemQueryResultModelBillingItemModelBillingItem>(exampleJson)
            : default(ItemQueryResultModelBillingItemModelBillingItem);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="apiIntegrationCode">API Integration Code</param>
        /// <param name="userName">User Name</param>
        /// <param name="secret">Secret</param>
        /// <param name="impersonationResourceId">Impersonation Resource Key</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpGet]
        [Route("/ATServicesRest/V1.0/BillingItems/entityInformation/userDefinedFields")]
        [ValidateModelState]
        [SwaggerOperation("BillingItemsQueryUserDefinedFieldDefinitions")]
        [SwaggerResponse(statusCode: 200, type: typeof(UserDefinedFieldInformationResultModel), description: "OK")]
        public virtual IActionResult BillingItemsQueryUserDefinedFieldDefinitions([FromHeader][Required()]string apiIntegrationCode, [FromHeader][Required()]string userName, [FromHeader][Required()]string secret, [FromHeader]string impersonationResourceId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(UserDefinedFieldInformationResultModel));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            string exampleJson = null;
            exampleJson = "{\n  \"fields\" : [ {\n    \"picklistValues\" : [ {\n      \"isSystem\" : true,\n      \"sortOrder\" : 6,\n      \"label\" : \"label\",\n      \"parentValue\" : \"parentValue\",\n      \"isActive\" : true,\n      \"value\" : \"value\",\n      \"isDefaultValue\" : true\n    }, {\n      \"isSystem\" : true,\n      \"sortOrder\" : 6,\n      \"label\" : \"label\",\n      \"parentValue\" : \"parentValue\",\n      \"isActive\" : true,\n      \"value\" : \"value\",\n      \"isDefaultValue\" : true\n    } ],\n    \"isRequired\" : true,\n    \"picklistParentValueField\" : \"picklistParentValueField\",\n    \"defaultValue\" : \"defaultValue\",\n    \"length\" : 0,\n    \"isQueryable\" : true,\n    \"isPickList\" : true,\n    \"description\" : \"description\",\n    \"label\" : \"label\",\n    \"type\" : \"type\",\n    \"referenceEntityType\" : \"referenceEntityType\",\n    \"isSupportedWebhookField\" : { },\n    \"isReadOnly\" : true,\n    \"name\" : \"name\",\n    \"isReference\" : true\n  }, {\n    \"picklistValues\" : [ {\n      \"isSystem\" : true,\n      \"sortOrder\" : 6,\n      \"label\" : \"label\",\n      \"parentValue\" : \"parentValue\",\n      \"isActive\" : true,\n      \"value\" : \"value\",\n      \"isDefaultValue\" : true\n    }, {\n      \"isSystem\" : true,\n      \"sortOrder\" : 6,\n      \"label\" : \"label\",\n      \"parentValue\" : \"parentValue\",\n      \"isActive\" : true,\n      \"value\" : \"value\",\n      \"isDefaultValue\" : true\n    } ],\n    \"isRequired\" : true,\n    \"picklistParentValueField\" : \"picklistParentValueField\",\n    \"defaultValue\" : \"defaultValue\",\n    \"length\" : 0,\n    \"isQueryable\" : true,\n    \"isPickList\" : true,\n    \"description\" : \"description\",\n    \"label\" : \"label\",\n    \"type\" : \"type\",\n    \"referenceEntityType\" : \"referenceEntityType\",\n    \"isSupportedWebhookField\" : { },\n    \"isReadOnly\" : true,\n    \"name\" : \"name\",\n    \"isReference\" : true\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<UserDefinedFieldInformationResultModel>(exampleJson)
            : default(UserDefinedFieldInformationResultModel);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="restModelInput"></param>
        /// <param name="apiIntegrationCode">API Integration Code</param>
        /// <param name="userName">User Name</param>
        /// <param name="secret">Secret</param>
        /// <param name="impersonationResourceId">Impersonation Resource Key</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpPut]
        [Route("/ATServicesRest/V1.0/BillingItems")]
        [ValidateModelState]
        [SwaggerOperation("BillingItemsUpdateEntity")]
        [SwaggerResponse(statusCode: 200, type: typeof(OperationResultModel), description: "OK")]
        public virtual IActionResult BillingItemsUpdateEntity([FromBody]BillingItemModel restModelInput, [FromHeader][Required()]string apiIntegrationCode, [FromHeader][Required()]string userName, [FromHeader][Required()]string secret, [FromHeader]string impersonationResourceId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(OperationResultModel));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            string exampleJson = null;
            exampleJson = "{\n  \"itemId\" : { }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<OperationResultModel>(exampleJson)
            : default(OperationResultModel);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="search"></param>
        /// <param name="apiIntegrationCode">API Integration Code</param>
        /// <param name="userName">User Name</param>
        /// <param name="secret">Secret</param>
        /// <param name="impersonationResourceId">Impersonation Resource Key</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpGet]
        [Route("/ATServicesRest/V1.0/BillingItems/query")]
        [ValidateModelState]
        [SwaggerOperation("BillingItemsUrlParameterQuery")]
        [SwaggerResponse(statusCode: 200, type: typeof(QueryActionResultBillingItemModelBillingItem), description: "OK")]
        public virtual IActionResult BillingItemsUrlParameterQuery([FromQuery][Required()]string search, [FromHeader][Required()]string apiIntegrationCode, [FromHeader][Required()]string userName, [FromHeader][Required()]string secret, [FromHeader]string impersonationResourceId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(QueryActionResultBillingItemModelBillingItem));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            string exampleJson = null;
            exampleJson = "{\n  \"pageDetails\" : {\n    \"requestCount\" : 5,\n    \"nextPageUrl\" : \"nextPageUrl\",\n    \"count\" : 1,\n    \"prevPageUrl\" : \"prevPageUrl\"\n  },\n  \"items\" : [ {\n    \"roleID\" : 9,\n    \"postedOnTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"description\" : \"description\",\n    \"itemDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"accountManagerWhenApprovedID\" : 6,\n    \"ticketChargeID\" : 6,\n    \"internalCurrencyExtendedPrice\" : 4.145608029883936,\n    \"postedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"internalCurrencyTotalAmount\" : 1.0246457001441578,\n    \"companyID\" : 5,\n    \"itemName\" : \"itemName\",\n    \"billingItemType\" : 5,\n    \"extendedPrice\" : 2.027123023002322,\n    \"rate\" : 8.762042012749001,\n    \"timeEntryID\" : 6,\n    \"contractChargeID\" : 7,\n    \"internalCurrencyRate\" : 7.386281948385884,\n    \"itemApproverID\" : 6,\n    \"contractID\" : 9,\n    \"internalCurrencyTaxDollars\" : 1.2315135367772556,\n    \"ourCost\" : 5.025004791520295,\n    \"invoiceID\" : 1,\n    \"id\" : 0,\n    \"lineItemFullDescription\" : \"lineItemFullDescription\",\n    \"lineItemGroupDescription\" : \"lineItemGroupDescription\",\n    \"projectID\" : 9,\n    \"serviceBundleID\" : 6,\n    \"taskID\" : 2,\n    \"ticketID\" : 5,\n    \"expenseItemID\" : 3,\n    \"quantity\" : 6.683562403749608,\n    \"nonBillable\" : 1,\n    \"milestoneID\" : 7,\n    \"configurationItemID\" : 2,\n    \"vendorID\" : 3,\n    \"userDefinedFields\" : [ {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    }, {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    } ],\n    \"sortOrderID\" : 6,\n    \"totalAmount\" : 3.353193347011243,\n    \"webServiceDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"billingCodeID\" : 1,\n    \"taxDollars\" : 6.778324963048013,\n    \"purchaseOrderNumber\" : \"purchaseOrderNumber\",\n    \"subType\" : 1,\n    \"organizationalLevelAssociationID\" : 4,\n    \"serviceID\" : 3,\n    \"projectChargeID\" : 9\n  }, {\n    \"roleID\" : 9,\n    \"postedOnTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"description\" : \"description\",\n    \"itemDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"accountManagerWhenApprovedID\" : 6,\n    \"ticketChargeID\" : 6,\n    \"internalCurrencyExtendedPrice\" : 4.145608029883936,\n    \"postedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"internalCurrencyTotalAmount\" : 1.0246457001441578,\n    \"companyID\" : 5,\n    \"itemName\" : \"itemName\",\n    \"billingItemType\" : 5,\n    \"extendedPrice\" : 2.027123023002322,\n    \"rate\" : 8.762042012749001,\n    \"timeEntryID\" : 6,\n    \"contractChargeID\" : 7,\n    \"internalCurrencyRate\" : 7.386281948385884,\n    \"itemApproverID\" : 6,\n    \"contractID\" : 9,\n    \"internalCurrencyTaxDollars\" : 1.2315135367772556,\n    \"ourCost\" : 5.025004791520295,\n    \"invoiceID\" : 1,\n    \"id\" : 0,\n    \"lineItemFullDescription\" : \"lineItemFullDescription\",\n    \"lineItemGroupDescription\" : \"lineItemGroupDescription\",\n    \"projectID\" : 9,\n    \"serviceBundleID\" : 6,\n    \"taskID\" : 2,\n    \"ticketID\" : 5,\n    \"expenseItemID\" : 3,\n    \"quantity\" : 6.683562403749608,\n    \"nonBillable\" : 1,\n    \"milestoneID\" : 7,\n    \"configurationItemID\" : 2,\n    \"vendorID\" : 3,\n    \"userDefinedFields\" : [ {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    }, {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    } ],\n    \"sortOrderID\" : 6,\n    \"totalAmount\" : 3.353193347011243,\n    \"webServiceDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"billingCodeID\" : 1,\n    \"taxDollars\" : 6.778324963048013,\n    \"purchaseOrderNumber\" : \"purchaseOrderNumber\",\n    \"subType\" : 1,\n    \"organizationalLevelAssociationID\" : 4,\n    \"serviceID\" : 3,\n    \"projectChargeID\" : 9\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<QueryActionResultBillingItemModelBillingItem>(exampleJson)
            : default(QueryActionResultBillingItemModelBillingItem);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="search"></param>
        /// <param name="apiIntegrationCode">API Integration Code</param>
        /// <param name="userName">User Name</param>
        /// <param name="secret">Secret</param>
        /// <param name="impersonationResourceId">Impersonation Resource Key</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpGet]
        [Route("/ATServicesRest/V1.0/BillingItems/query/count")]
        [ValidateModelState]
        [SwaggerOperation("BillingItemsUrlParameterQueryCount")]
        [SwaggerResponse(statusCode: 200, type: typeof(QueryCountResultModel), description: "OK")]
        public virtual IActionResult BillingItemsUrlParameterQueryCount([FromQuery][Required()]string search, [FromHeader][Required()]string apiIntegrationCode, [FromHeader][Required()]string userName, [FromHeader][Required()]string secret, [FromHeader]string impersonationResourceId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(QueryCountResultModel));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            string exampleJson = null;
            exampleJson = "{\n  \"queryCount\" : 0\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<QueryCountResultModel>(exampleJson)
            : default(QueryCountResultModel);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
