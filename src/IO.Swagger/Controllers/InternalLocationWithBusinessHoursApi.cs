/*
 * Datto|Autotask PSA Rest API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;

using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class InternalLocationWithBusinessHoursApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="restModelInput"></param>
        /// <param name="apiIntegrationCode">API Integration Code</param>
        /// <param name="userName">User Name</param>
        /// <param name="secret">Secret</param>
        /// <param name="impersonationResourceId">Impersonation Resource Key</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpPost]
        [Route("/ATServicesRest/V1.0/InternalLocationWithBusinessHours")]
        [ValidateModelState]
        [SwaggerOperation("InternalLocationWithBusinessHoursCreateEntity")]
        [SwaggerResponse(statusCode: 200, type: typeof(OperationResultModel), description: "OK")]
        public virtual IActionResult InternalLocationWithBusinessHoursCreateEntity([FromBody]InternalLocationWithBusinessHoursModel restModelInput, [FromHeader][Required()]string apiIntegrationCode, [FromHeader][Required()]string userName, [FromHeader][Required()]string secret, [FromHeader]string impersonationResourceId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(OperationResultModel));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            string exampleJson = null;
            exampleJson = "{\n  \"itemId\" : { }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<OperationResultModel>(exampleJson)
            : default(OperationResultModel);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="restModelInput"></param>
        /// <param name="apiIntegrationCode">API Integration Code</param>
        /// <param name="userName">User Name</param>
        /// <param name="secret">Secret</param>
        /// <param name="impersonationResourceId">Impersonation Resource Key</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpPatch]
        [Route("/ATServicesRest/V1.0/InternalLocationWithBusinessHours")]
        [ValidateModelState]
        [SwaggerOperation("InternalLocationWithBusinessHoursPatchEntity")]
        [SwaggerResponse(statusCode: 200, type: typeof(OperationResultModel), description: "OK")]
        public virtual IActionResult InternalLocationWithBusinessHoursPatchEntity([FromBody]InternalLocationWithBusinessHoursModel restModelInput, [FromHeader][Required()]string apiIntegrationCode, [FromHeader][Required()]string userName, [FromHeader][Required()]string secret, [FromHeader]string impersonationResourceId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(OperationResultModel));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            string exampleJson = null;
            exampleJson = "{\n  \"itemId\" : { }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<OperationResultModel>(exampleJson)
            : default(OperationResultModel);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="queryModel"></param>
        /// <param name="apiIntegrationCode">API Integration Code</param>
        /// <param name="userName">User Name</param>
        /// <param name="secret">Secret</param>
        /// <param name="impersonationResourceId">Impersonation Resource Key</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpPost]
        [Route("/ATServicesRest/V1.0/InternalLocationWithBusinessHours/query")]
        [ValidateModelState]
        [SwaggerOperation("InternalLocationWithBusinessHoursQuery")]
        [SwaggerResponse(statusCode: 200, type: typeof(QueryActionResultInternalLocationWithBusinessHoursModelBusinessLocation), description: "OK")]
        public virtual IActionResult InternalLocationWithBusinessHoursQuery([FromBody]QueryModel queryModel, [FromHeader][Required()]string apiIntegrationCode, [FromHeader][Required()]string userName, [FromHeader][Required()]string secret, [FromHeader]string impersonationResourceId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(QueryActionResultInternalLocationWithBusinessHoursModelBusinessLocation));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            string exampleJson = null;
            exampleJson = "{\n  \"pageDetails\" : {\n    \"requestCount\" : 5,\n    \"nextPageUrl\" : \"nextPageUrl\",\n    \"count\" : 1,\n    \"prevPageUrl\" : \"prevPageUrl\"\n  },\n  \"items\" : [ {\n    \"dateFormat\" : \"dateFormat\",\n    \"thursdayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"timeZoneID\" : 2,\n    \"postalCode\" : \"postalCode\",\n    \"wednesdayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"wednesdayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"mondayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"saturdayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"mondayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"sundayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"fridayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"id\" : 0,\n    \"state\" : \"state\",\n    \"thursdayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"sundayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"wednesdayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"mondayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"additionalAddressInfo\" : \"additionalAddressInfo\",\n    \"saturdayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"countryID\" : 6,\n    \"userDefinedFields\" : [ {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    }, {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    } ],\n    \"saturdayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"isDefault\" : true,\n    \"tuesdayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"name\" : \"name\",\n    \"holidayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"wednesdayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"fridayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"city\" : \"city\",\n    \"holidaySetID\" : 5,\n    \"holidayHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"tuesdayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"numberFormat\" : \"numberFormat\",\n    \"thursdayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"noHoursOnHolidays\" : true,\n    \"holidayHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"address2\" : \"address2\",\n    \"address1\" : \"address1\",\n    \"holidayHoursType\" : 5,\n    \"tuesdayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"sundayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"tuesdayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"fridayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"fridayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"saturdayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"sundayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"firstDayOfWeek\" : 1,\n    \"timeFormat\" : \"timeFormat\",\n    \"holidayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"thursdayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"mondayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\"\n  }, {\n    \"dateFormat\" : \"dateFormat\",\n    \"thursdayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"timeZoneID\" : 2,\n    \"postalCode\" : \"postalCode\",\n    \"wednesdayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"wednesdayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"mondayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"saturdayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"mondayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"sundayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"fridayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"id\" : 0,\n    \"state\" : \"state\",\n    \"thursdayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"sundayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"wednesdayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"mondayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"additionalAddressInfo\" : \"additionalAddressInfo\",\n    \"saturdayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"countryID\" : 6,\n    \"userDefinedFields\" : [ {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    }, {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    } ],\n    \"saturdayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"isDefault\" : true,\n    \"tuesdayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"name\" : \"name\",\n    \"holidayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"wednesdayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"fridayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"city\" : \"city\",\n    \"holidaySetID\" : 5,\n    \"holidayHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"tuesdayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"numberFormat\" : \"numberFormat\",\n    \"thursdayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"noHoursOnHolidays\" : true,\n    \"holidayHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"address2\" : \"address2\",\n    \"address1\" : \"address1\",\n    \"holidayHoursType\" : 5,\n    \"tuesdayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"sundayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"tuesdayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"fridayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"fridayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"saturdayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"sundayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"firstDayOfWeek\" : 1,\n    \"timeFormat\" : \"timeFormat\",\n    \"holidayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"thursdayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"mondayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<QueryActionResultInternalLocationWithBusinessHoursModelBusinessLocation>(exampleJson)
            : default(QueryActionResultInternalLocationWithBusinessHoursModelBusinessLocation);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="queryModel"></param>
        /// <param name="apiIntegrationCode">API Integration Code</param>
        /// <param name="userName">User Name</param>
        /// <param name="secret">Secret</param>
        /// <param name="impersonationResourceId">Impersonation Resource Key</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpPost]
        [Route("/ATServicesRest/V1.0/InternalLocationWithBusinessHours/query/count")]
        [ValidateModelState]
        [SwaggerOperation("InternalLocationWithBusinessHoursQueryCount")]
        [SwaggerResponse(statusCode: 200, type: typeof(QueryCountResultModel), description: "OK")]
        public virtual IActionResult InternalLocationWithBusinessHoursQueryCount([FromBody]QueryModel queryModel, [FromHeader][Required()]string apiIntegrationCode, [FromHeader][Required()]string userName, [FromHeader][Required()]string secret, [FromHeader]string impersonationResourceId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(QueryCountResultModel));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            string exampleJson = null;
            exampleJson = "{\n  \"queryCount\" : 0\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<QueryCountResultModel>(exampleJson)
            : default(QueryCountResultModel);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="apiIntegrationCode">API Integration Code</param>
        /// <param name="userName">User Name</param>
        /// <param name="secret">Secret</param>
        /// <param name="impersonationResourceId">Impersonation Resource Key</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpGet]
        [Route("/ATServicesRest/V1.0/InternalLocationWithBusinessHours/entityInformation")]
        [ValidateModelState]
        [SwaggerOperation("InternalLocationWithBusinessHoursQueryEntityInformation")]
        [SwaggerResponse(statusCode: 200, type: typeof(EntityInformationResultModel), description: "OK")]
        public virtual IActionResult InternalLocationWithBusinessHoursQueryEntityInformation([FromHeader][Required()]string apiIntegrationCode, [FromHeader][Required()]string userName, [FromHeader][Required()]string secret, [FromHeader]string impersonationResourceId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(EntityInformationResultModel));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            string exampleJson = null;
            exampleJson = "{\n  \"info\" : {\n    \"canUpdate\" : true,\n    \"supportsWebhookCallouts\" : true,\n    \"userAccessForCreate\" : { },\n    \"name\" : \"name\",\n    \"canDelete\" : true,\n    \"canQuery\" : true,\n    \"canCreate\" : true,\n    \"hasUserDefinedFields\" : true\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<EntityInformationResultModel>(exampleJson)
            : default(EntityInformationResultModel);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="apiIntegrationCode">API Integration Code</param>
        /// <param name="userName">User Name</param>
        /// <param name="secret">Secret</param>
        /// <param name="impersonationResourceId">Impersonation Resource Key</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpGet]
        [Route("/ATServicesRest/V1.0/InternalLocationWithBusinessHours/entityInformation/fields")]
        [ValidateModelState]
        [SwaggerOperation("InternalLocationWithBusinessHoursQueryFieldDefinitions")]
        [SwaggerResponse(statusCode: 200, type: typeof(FieldInformationResultModel), description: "OK")]
        public virtual IActionResult InternalLocationWithBusinessHoursQueryFieldDefinitions([FromHeader][Required()]string apiIntegrationCode, [FromHeader][Required()]string userName, [FromHeader][Required()]string secret, [FromHeader]string impersonationResourceId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FieldInformationResultModel));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            string exampleJson = null;
            exampleJson = "{\n  \"fields\" : [ {\n    \"picklistValues\" : [ {\n      \"isSystem\" : true,\n      \"sortOrder\" : 6,\n      \"label\" : \"label\",\n      \"parentValue\" : \"parentValue\",\n      \"isActive\" : true,\n      \"value\" : \"value\",\n      \"isDefaultValue\" : true\n    }, {\n      \"isSystem\" : true,\n      \"sortOrder\" : 6,\n      \"label\" : \"label\",\n      \"parentValue\" : \"parentValue\",\n      \"isActive\" : true,\n      \"value\" : \"value\",\n      \"isDefaultValue\" : true\n    } ],\n    \"isRequired\" : true,\n    \"isReadOnly\" : true,\n    \"picklistParentValueField\" : \"picklistParentValueField\",\n    \"dataType\" : \"dataType\",\n    \"name\" : \"name\",\n    \"length\" : 0,\n    \"isQueryable\" : true,\n    \"isPickList\" : true,\n    \"isReference\" : true,\n    \"referenceEntityType\" : \"referenceEntityType\",\n    \"isSupportedWebhookField\" : { }\n  }, {\n    \"picklistValues\" : [ {\n      \"isSystem\" : true,\n      \"sortOrder\" : 6,\n      \"label\" : \"label\",\n      \"parentValue\" : \"parentValue\",\n      \"isActive\" : true,\n      \"value\" : \"value\",\n      \"isDefaultValue\" : true\n    }, {\n      \"isSystem\" : true,\n      \"sortOrder\" : 6,\n      \"label\" : \"label\",\n      \"parentValue\" : \"parentValue\",\n      \"isActive\" : true,\n      \"value\" : \"value\",\n      \"isDefaultValue\" : true\n    } ],\n    \"isRequired\" : true,\n    \"isReadOnly\" : true,\n    \"picklistParentValueField\" : \"picklistParentValueField\",\n    \"dataType\" : \"dataType\",\n    \"name\" : \"name\",\n    \"length\" : 0,\n    \"isQueryable\" : true,\n    \"isPickList\" : true,\n    \"isReference\" : true,\n    \"referenceEntityType\" : \"referenceEntityType\",\n    \"isSupportedWebhookField\" : { }\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FieldInformationResultModel>(exampleJson)
            : default(FieldInformationResultModel);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="id"></param>
        /// <param name="apiIntegrationCode">API Integration Code</param>
        /// <param name="userName">User Name</param>
        /// <param name="secret">Secret</param>
        /// <param name="impersonationResourceId">Impersonation Resource Key</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpGet]
        [Route("/ATServicesRest/V1.0/InternalLocationWithBusinessHours/{id}")]
        [ValidateModelState]
        [SwaggerOperation("InternalLocationWithBusinessHoursQueryItem")]
        [SwaggerResponse(statusCode: 200, type: typeof(ItemQueryResultModelInternalLocationWithBusinessHoursModelBusinessLocation), description: "OK")]
        public virtual IActionResult InternalLocationWithBusinessHoursQueryItem([FromRoute][Required]long? id, [FromHeader][Required()]string apiIntegrationCode, [FromHeader][Required()]string userName, [FromHeader][Required()]string secret, [FromHeader]string impersonationResourceId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ItemQueryResultModelInternalLocationWithBusinessHoursModelBusinessLocation));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            string exampleJson = null;
            exampleJson = "{\n  \"item\" : {\n    \"dateFormat\" : \"dateFormat\",\n    \"thursdayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"timeZoneID\" : 2,\n    \"postalCode\" : \"postalCode\",\n    \"wednesdayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"wednesdayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"mondayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"saturdayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"mondayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"sundayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"fridayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"id\" : 0,\n    \"state\" : \"state\",\n    \"thursdayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"sundayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"wednesdayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"mondayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"additionalAddressInfo\" : \"additionalAddressInfo\",\n    \"saturdayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"countryID\" : 6,\n    \"userDefinedFields\" : [ {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    }, {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    } ],\n    \"saturdayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"isDefault\" : true,\n    \"tuesdayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"name\" : \"name\",\n    \"holidayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"wednesdayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"fridayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"city\" : \"city\",\n    \"holidaySetID\" : 5,\n    \"holidayHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"tuesdayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"numberFormat\" : \"numberFormat\",\n    \"thursdayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"noHoursOnHolidays\" : true,\n    \"holidayHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"address2\" : \"address2\",\n    \"address1\" : \"address1\",\n    \"holidayHoursType\" : 5,\n    \"tuesdayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"sundayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"tuesdayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"fridayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"fridayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"saturdayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"sundayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"firstDayOfWeek\" : 1,\n    \"timeFormat\" : \"timeFormat\",\n    \"holidayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"thursdayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"mondayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ItemQueryResultModelInternalLocationWithBusinessHoursModelBusinessLocation>(exampleJson)
            : default(ItemQueryResultModelInternalLocationWithBusinessHoursModelBusinessLocation);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="apiIntegrationCode">API Integration Code</param>
        /// <param name="userName">User Name</param>
        /// <param name="secret">Secret</param>
        /// <param name="impersonationResourceId">Impersonation Resource Key</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpGet]
        [Route("/ATServicesRest/V1.0/InternalLocationWithBusinessHours/entityInformation/userDefinedFields")]
        [ValidateModelState]
        [SwaggerOperation("InternalLocationWithBusinessHoursQueryUserDefinedFieldDefinitions")]
        [SwaggerResponse(statusCode: 200, type: typeof(UserDefinedFieldInformationResultModel), description: "OK")]
        public virtual IActionResult InternalLocationWithBusinessHoursQueryUserDefinedFieldDefinitions([FromHeader][Required()]string apiIntegrationCode, [FromHeader][Required()]string userName, [FromHeader][Required()]string secret, [FromHeader]string impersonationResourceId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(UserDefinedFieldInformationResultModel));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            string exampleJson = null;
            exampleJson = "{\n  \"fields\" : [ {\n    \"picklistValues\" : [ {\n      \"isSystem\" : true,\n      \"sortOrder\" : 6,\n      \"label\" : \"label\",\n      \"parentValue\" : \"parentValue\",\n      \"isActive\" : true,\n      \"value\" : \"value\",\n      \"isDefaultValue\" : true\n    }, {\n      \"isSystem\" : true,\n      \"sortOrder\" : 6,\n      \"label\" : \"label\",\n      \"parentValue\" : \"parentValue\",\n      \"isActive\" : true,\n      \"value\" : \"value\",\n      \"isDefaultValue\" : true\n    } ],\n    \"isRequired\" : true,\n    \"picklistParentValueField\" : \"picklistParentValueField\",\n    \"defaultValue\" : \"defaultValue\",\n    \"length\" : 0,\n    \"isQueryable\" : true,\n    \"isPickList\" : true,\n    \"description\" : \"description\",\n    \"label\" : \"label\",\n    \"type\" : \"type\",\n    \"referenceEntityType\" : \"referenceEntityType\",\n    \"isSupportedWebhookField\" : { },\n    \"isReadOnly\" : true,\n    \"name\" : \"name\",\n    \"isReference\" : true\n  }, {\n    \"picklistValues\" : [ {\n      \"isSystem\" : true,\n      \"sortOrder\" : 6,\n      \"label\" : \"label\",\n      \"parentValue\" : \"parentValue\",\n      \"isActive\" : true,\n      \"value\" : \"value\",\n      \"isDefaultValue\" : true\n    }, {\n      \"isSystem\" : true,\n      \"sortOrder\" : 6,\n      \"label\" : \"label\",\n      \"parentValue\" : \"parentValue\",\n      \"isActive\" : true,\n      \"value\" : \"value\",\n      \"isDefaultValue\" : true\n    } ],\n    \"isRequired\" : true,\n    \"picklistParentValueField\" : \"picklistParentValueField\",\n    \"defaultValue\" : \"defaultValue\",\n    \"length\" : 0,\n    \"isQueryable\" : true,\n    \"isPickList\" : true,\n    \"description\" : \"description\",\n    \"label\" : \"label\",\n    \"type\" : \"type\",\n    \"referenceEntityType\" : \"referenceEntityType\",\n    \"isSupportedWebhookField\" : { },\n    \"isReadOnly\" : true,\n    \"name\" : \"name\",\n    \"isReference\" : true\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<UserDefinedFieldInformationResultModel>(exampleJson)
            : default(UserDefinedFieldInformationResultModel);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="restModelInput"></param>
        /// <param name="apiIntegrationCode">API Integration Code</param>
        /// <param name="userName">User Name</param>
        /// <param name="secret">Secret</param>
        /// <param name="impersonationResourceId">Impersonation Resource Key</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpPut]
        [Route("/ATServicesRest/V1.0/InternalLocationWithBusinessHours")]
        [ValidateModelState]
        [SwaggerOperation("InternalLocationWithBusinessHoursUpdateEntity")]
        [SwaggerResponse(statusCode: 200, type: typeof(OperationResultModel), description: "OK")]
        public virtual IActionResult InternalLocationWithBusinessHoursUpdateEntity([FromBody]InternalLocationWithBusinessHoursModel restModelInput, [FromHeader][Required()]string apiIntegrationCode, [FromHeader][Required()]string userName, [FromHeader][Required()]string secret, [FromHeader]string impersonationResourceId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(OperationResultModel));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            string exampleJson = null;
            exampleJson = "{\n  \"itemId\" : { }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<OperationResultModel>(exampleJson)
            : default(OperationResultModel);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="search"></param>
        /// <param name="apiIntegrationCode">API Integration Code</param>
        /// <param name="userName">User Name</param>
        /// <param name="secret">Secret</param>
        /// <param name="impersonationResourceId">Impersonation Resource Key</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpGet]
        [Route("/ATServicesRest/V1.0/InternalLocationWithBusinessHours/query")]
        [ValidateModelState]
        [SwaggerOperation("InternalLocationWithBusinessHoursUrlParameterQuery")]
        [SwaggerResponse(statusCode: 200, type: typeof(QueryActionResultInternalLocationWithBusinessHoursModelBusinessLocation), description: "OK")]
        public virtual IActionResult InternalLocationWithBusinessHoursUrlParameterQuery([FromQuery][Required()]string search, [FromHeader][Required()]string apiIntegrationCode, [FromHeader][Required()]string userName, [FromHeader][Required()]string secret, [FromHeader]string impersonationResourceId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(QueryActionResultInternalLocationWithBusinessHoursModelBusinessLocation));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            string exampleJson = null;
            exampleJson = "{\n  \"pageDetails\" : {\n    \"requestCount\" : 5,\n    \"nextPageUrl\" : \"nextPageUrl\",\n    \"count\" : 1,\n    \"prevPageUrl\" : \"prevPageUrl\"\n  },\n  \"items\" : [ {\n    \"dateFormat\" : \"dateFormat\",\n    \"thursdayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"timeZoneID\" : 2,\n    \"postalCode\" : \"postalCode\",\n    \"wednesdayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"wednesdayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"mondayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"saturdayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"mondayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"sundayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"fridayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"id\" : 0,\n    \"state\" : \"state\",\n    \"thursdayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"sundayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"wednesdayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"mondayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"additionalAddressInfo\" : \"additionalAddressInfo\",\n    \"saturdayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"countryID\" : 6,\n    \"userDefinedFields\" : [ {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    }, {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    } ],\n    \"saturdayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"isDefault\" : true,\n    \"tuesdayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"name\" : \"name\",\n    \"holidayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"wednesdayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"fridayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"city\" : \"city\",\n    \"holidaySetID\" : 5,\n    \"holidayHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"tuesdayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"numberFormat\" : \"numberFormat\",\n    \"thursdayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"noHoursOnHolidays\" : true,\n    \"holidayHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"address2\" : \"address2\",\n    \"address1\" : \"address1\",\n    \"holidayHoursType\" : 5,\n    \"tuesdayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"sundayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"tuesdayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"fridayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"fridayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"saturdayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"sundayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"firstDayOfWeek\" : 1,\n    \"timeFormat\" : \"timeFormat\",\n    \"holidayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"thursdayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"mondayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\"\n  }, {\n    \"dateFormat\" : \"dateFormat\",\n    \"thursdayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"timeZoneID\" : 2,\n    \"postalCode\" : \"postalCode\",\n    \"wednesdayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"wednesdayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"mondayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"saturdayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"mondayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"sundayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"fridayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"id\" : 0,\n    \"state\" : \"state\",\n    \"thursdayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"sundayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"wednesdayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"mondayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"additionalAddressInfo\" : \"additionalAddressInfo\",\n    \"saturdayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"countryID\" : 6,\n    \"userDefinedFields\" : [ {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    }, {\n      \"name\" : \"name\",\n      \"value\" : \"value\"\n    } ],\n    \"saturdayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"isDefault\" : true,\n    \"tuesdayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"name\" : \"name\",\n    \"holidayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"wednesdayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"fridayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"city\" : \"city\",\n    \"holidaySetID\" : 5,\n    \"holidayHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"tuesdayExtendedHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"numberFormat\" : \"numberFormat\",\n    \"thursdayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"noHoursOnHolidays\" : true,\n    \"holidayHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"address2\" : \"address2\",\n    \"address1\" : \"address1\",\n    \"holidayHoursType\" : 5,\n    \"tuesdayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"sundayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"tuesdayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"fridayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"fridayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"saturdayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"sundayBusinessHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"firstDayOfWeek\" : 1,\n    \"timeFormat\" : \"timeFormat\",\n    \"holidayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"thursdayExtendedHoursEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"mondayBusinessHoursStartTime\" : \"2000-01-23T04:56:07.000+00:00\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<QueryActionResultInternalLocationWithBusinessHoursModelBusinessLocation>(exampleJson)
            : default(QueryActionResultInternalLocationWithBusinessHoursModelBusinessLocation);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="search"></param>
        /// <param name="apiIntegrationCode">API Integration Code</param>
        /// <param name="userName">User Name</param>
        /// <param name="secret">Secret</param>
        /// <param name="impersonationResourceId">Impersonation Resource Key</param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpGet]
        [Route("/ATServicesRest/V1.0/InternalLocationWithBusinessHours/query/count")]
        [ValidateModelState]
        [SwaggerOperation("InternalLocationWithBusinessHoursUrlParameterQueryCount")]
        [SwaggerResponse(statusCode: 200, type: typeof(QueryCountResultModel), description: "OK")]
        public virtual IActionResult InternalLocationWithBusinessHoursUrlParameterQueryCount([FromQuery][Required()]string search, [FromHeader][Required()]string apiIntegrationCode, [FromHeader][Required()]string userName, [FromHeader][Required()]string secret, [FromHeader]string impersonationResourceId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(QueryCountResultModel));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            string exampleJson = null;
            exampleJson = "{\n  \"queryCount\" : 0\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<QueryCountResultModel>(exampleJson)
            : default(QueryCountResultModel);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
